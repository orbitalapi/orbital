{
   "id": "Vyne",
   "realm": "Vyne",
   "notBefore": 0,
   "revokeRefreshToken": false,
   "refreshTokenMaxReuse": 0,
   "accessTokenLifespan": 300,
   "accessTokenLifespanForImplicitFlow": 900,
   "ssoSessionIdleTimeout": 1800,
   "ssoSessionMaxLifespan": 36000,
   "ssoSessionIdleTimeoutRememberMe": 0,
   "ssoSessionMaxLifespanRememberMe": 0,
   "offlineSessionIdleTimeout": 2592000,
   "offlineSessionMaxLifespanEnabled": false,
   "offlineSessionMaxLifespan": 5184000,
   "clientSessionIdleTimeout": 0,
   "clientSessionMaxLifespan": 0,
   "clientOfflineSessionIdleTimeout": 0,
   "clientOfflineSessionMaxLifespan": 0,
   "accessCodeLifespan": 60,
   "accessCodeLifespanUserAction": 300,
   "accessCodeLifespanLogin": 1800,
   "actionTokenGeneratedByAdminLifespan": 43200,
   "actionTokenGeneratedByUserLifespan": 300,
   "enabled": true,
   "sslRequired": "external",
   "registrationAllowed": false,
   "registrationEmailAsUsername": false,
   "rememberMe": false,
   "verifyEmail": false,
   "loginWithEmailAllowed": true,
   "duplicateEmailsAllowed": false,
   "resetPasswordAllowed": false,
   "editUsernameAllowed": false,
   "bruteForceProtected": false,
   "permanentLockout": false,
   "maxFailureWaitSeconds": 900,
   "minimumQuickLoginWaitSeconds": 60,
   "waitIncrementSeconds": 60,
   "quickLoginCheckMilliSeconds": 1000,
   "maxDeltaTimeSeconds": 43200,
   "failureFactor": 30,
   "roles": {
      "realm": [
         {
            "id": "b2734462-2b8a-43bb-abb4-0cc58c38854a",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "Vyne",
            "attributes": {}
         },
         {
            "id": "4802d67f-8f1f-4815-94e6-b301e6a2e4bc",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "Vyne",
            "attributes": {}
         }
      ],
      "client": {
         "realm-management": [
            {
               "id": "549d1d30-aa1b-4fc8-8986-5134a2ed4389",
               "name": "view-events",
               "description": "${role_view-events}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "82201189-6c3b-4ae0-a3b1-b28f834426b8",
               "name": "manage-events",
               "description": "${role_manage-events}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "db87ed1d-25be-4446-a7b6-bdf1c5d2de52",
               "name": "manage-clients",
               "description": "${role_manage-clients}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "fa411cce-cce0-4cb6-b12a-592f3dfff111",
               "name": "query-groups",
               "description": "${role_query-groups}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "033747da-bb80-4667-a5bd-71807162a983",
               "name": "view-users",
               "description": "${role_view-users}",
               "composite": true,
               "composites": {
                  "client": {
                     "realm-management": [
                        "query-groups",
                        "query-users"
                     ]
                  }
               },
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "0c64e5f7-0bca-4d99-aecc-15fc98ac39b3",
               "name": "impersonation",
               "description": "${role_impersonation}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "b14d6c7f-4c37-4979-9cca-1a7a4f0340f2",
               "name": "view-authorization",
               "description": "${role_view-authorization}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "eac5717b-e064-427e-af6e-2262eda18d62",
               "name": "query-clients",
               "description": "${role_query-clients}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "779c8e49-1c5c-4948-864c-3721d47d3260",
               "name": "create-client",
               "description": "${role_create-client}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "6ad3e44d-32c4-4115-9a2f-0f4929973144",
               "name": "view-identity-providers",
               "description": "${role_view-identity-providers}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "95ae4034-cbac-478d-a53e-aeff3c163da3",
               "name": "realm-admin",
               "description": "${role_realm-admin}",
               "composite": true,
               "composites": {
                  "client": {
                     "realm-management": [
                        "view-events",
                        "manage-events",
                        "manage-clients",
                        "query-groups",
                        "view-users",
                        "impersonation",
                        "view-authorization",
                        "query-clients",
                        "view-identity-providers",
                        "create-client",
                        "manage-users",
                        "view-realm",
                        "manage-identity-providers",
                        "view-clients",
                        "manage-authorization",
                        "query-users",
                        "manage-realm",
                        "query-realms"
                     ]
                  }
               },
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "537a3fee-df64-41c7-97e4-30a369d847b4",
               "name": "manage-users",
               "description": "${role_manage-users}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "d35bc36e-91ac-4221-be08-0c447eea4048",
               "name": "view-realm",
               "description": "${role_view-realm}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "8533f7f0-7377-48a2-bbbe-66e02749a946",
               "name": "manage-identity-providers",
               "description": "${role_manage-identity-providers}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "2780443d-1526-419f-bdc7-c4e23bd7d596",
               "name": "view-clients",
               "description": "${role_view-clients}",
               "composite": true,
               "composites": {
                  "client": {
                     "realm-management": [
                        "query-clients"
                     ]
                  }
               },
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "96c96762-d5e9-4424-9faa-dedfad8e5103",
               "name": "manage-authorization",
               "description": "${role_manage-authorization}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "b7dfc14c-7cca-411e-8111-52cf8c46647b",
               "name": "query-users",
               "description": "${role_query-users}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "f3544d27-54e0-4f98-9a61-bcc8c95ac931",
               "name": "manage-realm",
               "description": "${role_manage-realm}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            },
            {
               "id": "fd36ab56-2e3c-4550-aac8-687367eb6169",
               "name": "query-realms",
               "description": "${role_query-realms}",
               "composite": false,
               "clientRole": true,
               "containerId": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
               "attributes": {}
            }
         ],
         "security-admin-console": [],
         "vyne-spa": [],
         "admin-cli": [],
         "account-console": [],
         "broker": [
            {
               "id": "0ccecca7-212d-4304-888e-feca0f0ec9aa",
               "name": "read-token",
               "description": "${role_read-token}",
               "composite": false,
               "clientRole": true,
               "containerId": "a4651fe3-5a34-48ae-9522-1c3783d9f28b",
               "attributes": {}
            }
         ],
         "account": [
            {
               "id": "24da3dff-b96e-40e8-a629-6c4290bfb8f7",
               "name": "view-profile",
               "description": "${role_view-profile}",
               "composite": false,
               "clientRole": true,
               "containerId": "028d9b40-7d79-4d83-afe7-e3b627884c78",
               "attributes": {}
            },
            {
               "id": "0220e1f8-1cfa-4b78-8587-9174a923efc9",
               "name": "manage-account-links",
               "description": "${role_manage-account-links}",
               "composite": false,
               "clientRole": true,
               "containerId": "028d9b40-7d79-4d83-afe7-e3b627884c78",
               "attributes": {}
            },
            {
               "id": "edb5ed5b-4c46-4546-9dae-b9ea7bed3b60",
               "name": "view-applications",
               "description": "${role_view-applications}",
               "composite": false,
               "clientRole": true,
               "containerId": "028d9b40-7d79-4d83-afe7-e3b627884c78",
               "attributes": {}
            },
            {
               "id": "cab55d44-83dd-4822-8a94-36bf39745587",
               "name": "view-consent",
               "description": "${role_view-consent}",
               "composite": false,
               "clientRole": true,
               "containerId": "028d9b40-7d79-4d83-afe7-e3b627884c78",
               "attributes": {}
            },
            {
               "id": "ad0dffd4-c9e2-4f9f-8c47-00339604759c",
               "name": "manage-consent",
               "description": "${role_manage-consent}",
               "composite": true,
               "composites": {
                  "client": {
                     "account": [
                        "view-consent"
                     ]
                  }
               },
               "clientRole": true,
               "containerId": "028d9b40-7d79-4d83-afe7-e3b627884c78",
               "attributes": {}
            },
            {
               "id": "798cb589-23dc-462b-87c6-722035a8b718",
               "name": "manage-account",
               "description": "${role_manage-account}",
               "composite": true,
               "composites": {
                  "client": {
                     "account": [
                        "manage-account-links"
                     ]
                  }
               },
               "clientRole": true,
               "containerId": "028d9b40-7d79-4d83-afe7-e3b627884c78",
               "attributes": {}
            }
         ]
      }
   },
   "groups": [],
   "defaultRoles": [
      "uma_authorization",
      "offline_access"
   ],
   "requiredCredentials": [
      "password"
   ],
   "otpPolicyType": "totp",
   "otpPolicyAlgorithm": "HmacSHA1",
   "otpPolicyInitialCounter": 0,
   "otpPolicyDigits": 6,
   "otpPolicyLookAheadWindow": 1,
   "otpPolicyPeriod": 30,
   "otpSupportedApplications": [
      "FreeOTP",
      "Google Authenticator"
   ],
   "webAuthnPolicyRpEntityName": "keycloak",
   "webAuthnPolicySignatureAlgorithms": [
      "ES256"
   ],
   "webAuthnPolicyRpId": "",
   "webAuthnPolicyAttestationConveyancePreference": "not specified",
   "webAuthnPolicyAuthenticatorAttachment": "not specified",
   "webAuthnPolicyRequireResidentKey": "not specified",
   "webAuthnPolicyUserVerificationRequirement": "not specified",
   "webAuthnPolicyCreateTimeout": 0,
   "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
   "webAuthnPolicyAcceptableAaguids": [],
   "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
   "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
   ],
   "webAuthnPolicyPasswordlessRpId": "",
   "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
   "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
   "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
   "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
   "webAuthnPolicyPasswordlessCreateTimeout": 0,
   "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
   "webAuthnPolicyPasswordlessAcceptableAaguids": [],
   "scopeMappings": [
      {
         "clientScope": "offline_access",
         "roles": [
            "offline_access"
         ]
      }
   ],
   "clientScopeMappings": {
      "account": [
         {
            "client": "account-console",
            "roles": [
               "manage-account"
            ]
         }
      ]
   },
   "clients": [
      {
         "id": "028d9b40-7d79-4d83-afe7-e3b627884c78",
         "clientId": "account",
         "name": "${client_account}",
         "rootUrl": "${authBaseUrl}",
         "baseUrl": "/realms/Vyne/account/",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "secret": "**********",
         "defaultRoles": [
            "view-profile",
            "manage-account"
         ],
         "redirectUris": [
            "/realms/Vyne/account/*"
         ],
         "webOrigins": [],
         "notBefore": 0,
         "bearerOnly": false,
         "consentRequired": false,
         "standardFlowEnabled": true,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": false,
         "serviceAccountsEnabled": false,
         "publicClient": false,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {},
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": false,
         "nodeReRegistrationTimeout": 0,
         "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "id": "778cc07b-51a7-4e61-85b0-09bdb66985c5",
         "clientId": "account-console",
         "name": "${client_account-console}",
         "rootUrl": "${authBaseUrl}",
         "baseUrl": "/realms/Vyne/account/",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "secret": "**********",
         "redirectUris": [
            "/realms/Vyne/account/*"
         ],
         "webOrigins": [],
         "notBefore": 0,
         "bearerOnly": false,
         "consentRequired": false,
         "standardFlowEnabled": true,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": false,
         "serviceAccountsEnabled": false,
         "publicClient": true,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {
            "pkce.code.challenge.method": "S256"
         },
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": false,
         "nodeReRegistrationTimeout": 0,
         "protocolMappers": [
            {
               "id": "c9d61f0c-5403-486d-a7f3-2b6f8ee714f4",
               "name": "audience resolve",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-audience-resolve-mapper",
               "consentRequired": false,
               "config": {}
            }
         ],
         "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "id": "12d341e1-1f1d-4d15-91f1-5678ae3243ab",
         "clientId": "admin-cli",
         "name": "${client_admin-cli}",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "secret": "**********",
         "redirectUris": [],
         "webOrigins": [],
         "notBefore": 0,
         "bearerOnly": false,
         "consentRequired": false,
         "standardFlowEnabled": false,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": true,
         "serviceAccountsEnabled": false,
         "publicClient": true,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {},
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": false,
         "nodeReRegistrationTimeout": 0,
         "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "id": "a4651fe3-5a34-48ae-9522-1c3783d9f28b",
         "clientId": "broker",
         "name": "${client_broker}",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "secret": "**********",
         "redirectUris": [],
         "webOrigins": [],
         "notBefore": 0,
         "bearerOnly": false,
         "consentRequired": false,
         "standardFlowEnabled": true,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": false,
         "serviceAccountsEnabled": false,
         "publicClient": false,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {},
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": false,
         "nodeReRegistrationTimeout": 0,
         "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "id": "a75404c8-51bb-440a-a5a4-5ecfe38104ab",
         "clientId": "realm-management",
         "name": "${client_realm-management}",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "secret": "**********",
         "redirectUris": [],
         "webOrigins": [],
         "notBefore": 0,
         "bearerOnly": true,
         "consentRequired": false,
         "standardFlowEnabled": true,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": false,
         "serviceAccountsEnabled": false,
         "publicClient": false,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {},
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": false,
         "nodeReRegistrationTimeout": 0,
         "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "id": "151a80b7-2ea1-4959-affe-001cb5e1ec69",
         "clientId": "security-admin-console",
         "name": "${client_security-admin-console}",
         "rootUrl": "${authAdminUrl}",
         "baseUrl": "/admin/Vyne/console/",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "secret": "**********",
         "redirectUris": [
            "/admin/Vyne/console/*"
         ],
         "webOrigins": [
            "+"
         ],
         "notBefore": 0,
         "bearerOnly": false,
         "consentRequired": false,
         "standardFlowEnabled": true,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": false,
         "serviceAccountsEnabled": false,
         "publicClient": true,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {
            "pkce.code.challenge.method": "S256"
         },
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": false,
         "nodeReRegistrationTimeout": 0,
         "protocolMappers": [
            {
               "id": "b2db14ad-ec2c-4428-9c18-838bffea5b1a",
               "name": "locale",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
               }
            }
         ],
         "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "id": "ea29b64f-d424-49a0-a07e-8100808c1fce",
         "clientId": "vyne-spa",
         "surrogateAuthRequired": false,
         "enabled": true,
         "alwaysDisplayInConsole": false,
         "clientAuthenticatorType": "client-secret",
         "secret": "**********",
         "redirectUris": [
            "http://localhost:4200/*",
            "http://localhost:9022/*"
         ],
         "webOrigins": [
            "*"
         ],
         "notBefore": 0,
         "bearerOnly": false,
         "consentRequired": false,
         "standardFlowEnabled": true,
         "implicitFlowEnabled": false,
         "directAccessGrantsEnabled": true,
         "serviceAccountsEnabled": false,
         "publicClient": true,
         "frontchannelLogout": false,
         "protocol": "openid-connect",
         "attributes": {
            "saml.assertion.signature": "false",
            "saml.force.post.binding": "false",
            "saml.multivalued.roles": "false",
            "saml.encrypt": "false",
            "saml.server.signature": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "exclude.session.state.from.auth.response": "false",
            "saml_force_name_id_format": "false",
            "saml.client.signature": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "false",
            "display.on.consent.screen": "false",
            "saml.onetimeuse.condition": "false"
         },
         "authenticationFlowBindingOverrides": {},
         "fullScopeAllowed": true,
         "nodeReRegistrationTimeout": -1,
         "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
         ],
         "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      }
   ],
   "clientScopes": [
      {
         "id": "1dfba9be-354a-4e5d-ba02-185d33c31340",
         "name": "address",
         "description": "OpenID Connect built-in scope: address",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
         },
         "protocolMappers": [
            {
               "id": "ff185a38-c5cb-4188-b1eb-1f79f14d1270",
               "name": "address",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-address-mapper",
               "consentRequired": false,
               "config": {
                  "user.attribute.formatted": "formatted",
                  "user.attribute.country": "country",
                  "user.attribute.postal_code": "postal_code",
                  "userinfo.token.claim": "true",
                  "user.attribute.street": "street",
                  "id.token.claim": "true",
                  "user.attribute.region": "region",
                  "access.token.claim": "true",
                  "user.attribute.locality": "locality"
               }
            }
         ]
      },
      {
         "id": "29200e23-fda1-4507-8c5d-1f06990f3dc9",
         "name": "email",
         "description": "OpenID Connect built-in scope: email",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
         },
         "protocolMappers": [
            {
               "id": "bfde58a3-3c4b-4537-bf30-72d5a933d396",
               "name": "email",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-property-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "email",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "81911cee-fafe-4eca-b089-97ac3a6ee267",
               "name": "email verified",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-property-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "emailVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email_verified",
                  "jsonType.label": "boolean"
               }
            }
         ]
      },
      {
         "id": "a1768adf-662a-4ed6-a231-c123d2fe2c9c",
         "name": "microprofile-jwt",
         "description": "Microprofile - JWT built-in scope",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
         },
         "protocolMappers": [
            {
               "id": "cdd3b607-b582-4e93-be8f-2dd0434e39f9",
               "name": "groups",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-realm-role-mapper",
               "consentRequired": false,
               "config": {
                  "multivalued": "true",
                  "user.attribute": "foo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "e6dcb601-8db3-4e0f-98f4-fdd6fcedbcba",
               "name": "upn",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-property-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "upn",
                  "jsonType.label": "String"
               }
            }
         ]
      },
      {
         "id": "fc3f2ab9-1dad-48cb-b656-ea3c555b81c3",
         "name": "offline_access",
         "description": "OpenID Connect built-in scope: offline_access",
         "protocol": "openid-connect",
         "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
         }
      },
      {
         "id": "94082492-1db6-4610-acc0-0ce75f52fe2e",
         "name": "phone",
         "description": "OpenID Connect built-in scope: phone",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
         },
         "protocolMappers": [
            {
               "id": "09dd9426-cbde-452b-a45d-e8df72fedd9b",
               "name": "phone number verified",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumberVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number_verified",
                  "jsonType.label": "boolean"
               }
            },
            {
               "id": "06b899bd-b2fe-4541-b45d-1da2b8f3b9c2",
               "name": "phone number",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumber",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number",
                  "jsonType.label": "String"
               }
            }
         ]
      },
      {
         "id": "9268cd95-a36f-41d1-995c-b96ef6275afd",
         "name": "profile",
         "description": "OpenID Connect built-in scope: profile",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
         },
         "protocolMappers": [
            {
               "id": "6717151e-7029-4a23-a8a4-67d2eb59e44b",
               "name": "full name",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-full-name-mapper",
               "consentRequired": false,
               "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "true"
               }
            },
            {
               "id": "67a9c331-a9e8-4fde-9297-548197e674da",
               "name": "username",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-property-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "preferred_username",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "8c79b4bf-b5bf-4378-a344-f009856ec8d7",
               "name": "given name",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-property-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "firstName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "given_name",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "2056675d-60c6-44be-b385-5c03e68e4bbe",
               "name": "updated at",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "updatedAt",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "updated_at",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "f81939ef-d791-4932-b725-05079f5952eb",
               "name": "middle name",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "middleName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "middle_name",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "ad18b8c7-299c-4483-8df7-b6d5c8cbc010",
               "name": "nickname",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "nickname",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "nickname",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "99096459-615e-4e54-941e-c51a6a8745d2",
               "name": "profile",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "profile",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "profile",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "6e7ab75f-f808-48ce-b619-8085b6714a7e",
               "name": "zoneinfo",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "zoneinfo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "zoneinfo",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "27abf2fb-d5fc-4e95-a4f0-09ae51c2a4cc",
               "name": "locale",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "553f256e-c022-4e8f-bd63-36d61a107133",
               "name": "website",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "website",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "website",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "2745c868-a73a-49ea-b9ef-0d46a5671f54",
               "name": "birthdate",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "birthdate",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "birthdate",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "32972cd5-3aae-4219-b526-4da74052ba97",
               "name": "picture",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "picture",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "picture",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "adc94537-3d40-4ea7-8a8e-b3c71b9d22a1",
               "name": "gender",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-attribute-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "gender",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "gender",
                  "jsonType.label": "String"
               }
            },
            {
               "id": "d1a673dd-3877-4cad-983b-ee19beea2784",
               "name": "family name",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-property-mapper",
               "consentRequired": false,
               "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "lastName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "family_name",
                  "jsonType.label": "String"
               }
            }
         ]
      },
      {
         "id": "2e4ab53c-30f6-4e41-8f10-97152493674f",
         "name": "role_list",
         "description": "SAML role list",
         "protocol": "saml",
         "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
         },
         "protocolMappers": [
            {
               "id": "8c101f82-f91b-46a6-b559-7b48efffe21e",
               "name": "role list",
               "protocol": "saml",
               "protocolMapper": "saml-role-list-mapper",
               "consentRequired": false,
               "config": {
                  "single": "false",
                  "attribute.nameformat": "Basic",
                  "attribute.name": "Role"
               }
            }
         ]
      },
      {
         "id": "4548385e-434b-422a-84df-9371bb32c9cc",
         "name": "roles",
         "description": "OpenID Connect scope for add user roles to the access token",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
         },
         "protocolMappers": [
            {
               "id": "c0afcafe-5b66-45e4-ba49-897091b24905",
               "name": "audience resolve",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-audience-resolve-mapper",
               "consentRequired": false,
               "config": {}
            },
            {
               "id": "9dccf976-9ec4-47cb-939f-996b7ffa219a",
               "name": "realm roles",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-realm-role-mapper",
               "consentRequired": false,
               "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "realm_access.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
               }
            },
            {
               "id": "d263c9c2-a5af-43a2-bf3f-37754444ce8e",
               "name": "client roles",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-usermodel-client-role-mapper",
               "consentRequired": false,
               "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "resource_access.${client_id}.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
               }
            }
         ]
      },
      {
         "id": "9951f11a-d457-460f-b91b-fbba4260222a",
         "name": "web-origins",
         "description": "OpenID Connect scope for add allowed web origins to the access token",
         "protocol": "openid-connect",
         "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
         },
         "protocolMappers": [
            {
               "id": "9ab16792-e1ae-4dfb-a04b-953d748b6c3f",
               "name": "allowed web origins",
               "protocol": "openid-connect",
               "protocolMapper": "oidc-allowed-origins-mapper",
               "consentRequired": false,
               "config": {}
            }
         ]
      }
   ],
   "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins"
   ],
   "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
   ],
   "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
   },
   "smtpServer": {},
   "eventsEnabled": false,
   "eventsListeners": [
      "jboss-logging"
   ],
   "enabledEventTypes": [],
   "adminEventsEnabled": false,
   "adminEventsDetailsEnabled": false,
   "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
         {
            "id": "3fb5d294-2b65-448c-a943-29fec91c3210",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
         },
         {
            "id": "247f3535-ed89-4aa5-b567-fb68a386a56d",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
               "allowed-protocol-mapper-types": [
                  "oidc-full-name-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "saml-role-list-mapper",
                  "saml-user-attribute-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "oidc-usermodel-property-mapper",
                  "oidc-address-mapper",
                  "saml-user-property-mapper"
               ]
            }
         },
         {
            "id": "6f45ab70-9a91-47e8-b4f0-421b6273cec4",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
               "allowed-protocol-mapper-types": [
                  "oidc-address-mapper",
                  "oidc-full-name-mapper",
                  "saml-role-list-mapper",
                  "oidc-usermodel-property-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "saml-user-attribute-mapper",
                  "saml-user-property-mapper"
               ]
            }
         },
         {
            "id": "a45ea5b4-feb8-4857-a8fe-2a1e8a9286ec",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
               "max-clients": [
                  "200"
               ]
            }
         },
         {
            "id": "ea1644c0-7d41-4a04-9167-b8cf60b1e5bb",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
               "allow-default-scopes": [
                  "true"
               ]
            }
         },
         {
            "id": "c66ba127-6ed5-4445-8523-cb5b0bd78893",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
               "host-sending-registration-request-must-match": [
                  "true"
               ],
               "client-uris-must-match": [
                  "true"
               ]
            }
         },
         {
            "id": "17cc85a3-a91c-45ca-ae85-677db8211441",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
               "allow-default-scopes": [
                  "true"
               ]
            }
         },
         {
            "id": "7a53ef83-867c-4817-ae22-203111e4d059",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
         }
      ],
      "org.keycloak.keys.KeyProvider": [
         {
            "id": "741f87e5-4c70-4593-badc-11af6873f2f3",
            "name": "hmac-generated",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
               "priority": [
                  "100"
               ],
               "algorithm": [
                  "HS256"
               ]
            }
         },
         {
            "id": "fa3df342-0e34-4ef4-a0e6-8fd151414fd5",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
               "priority": [
                  "100"
               ]
            }
         },
         {
            "id": "48e729d2-f15b-43a5-ba1d-2948b77d95d9",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
               "priority": [
                  "100"
               ]
            }
         }
      ]
   },
   "internationalizationEnabled": false,
   "supportedLocales": [],
   "authenticationFlows": [
      {
         "id": "f9c0fae3-2cd2-40ac-b98b-1ca15f77e791",
         "alias": "Account verification options",
         "description": "Method with which to verity the existing account",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "idp-email-verification",
               "requirement": "ALTERNATIVE",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "requirement": "ALTERNATIVE",
               "priority": 20,
               "flowAlias": "Verify Existing Account by Re-authentication",
               "userSetupAllowed": false,
               "autheticatorFlow": true
            }
         ]
      },
      {
         "id": "dcf4b33d-ecb4-4fa3-a33b-e59e6f283b09",
         "alias": "Authentication Options",
         "description": "Authentication options.",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "basic-auth",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "basic-auth-otp",
               "requirement": "DISABLED",
               "priority": 20,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "auth-spnego",
               "requirement": "DISABLED",
               "priority": 30,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            }
         ]
      },
      {
         "id": "c258671a-e778-44ed-9bb8-601a78299e2e",
         "alias": "Browser - Conditional OTP",
         "description": "Flow to determine if the OTP is required for the authentication",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "conditional-user-configured",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "auth-otp-form",
               "requirement": "REQUIRED",
               "priority": 20,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            }
         ]
      },
      {
         "id": "8bc39df2-2d0c-49de-9523-c1418c28aa1f",
         "alias": "Direct Grant - Conditional OTP",
         "description": "Flow to determine if the OTP is required for the authentication",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "conditional-user-configured",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "direct-grant-validate-otp",
               "requirement": "REQUIRED",
               "priority": 20,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            }
         ]
      },
      {
         "id": "0091b051-590b-46e3-8281-92365d5804f4",
         "alias": "First broker login - Conditional OTP",
         "description": "Flow to determine if the OTP is required for the authentication",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "conditional-user-configured",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "auth-otp-form",
               "requirement": "REQUIRED",
               "priority": 20,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            }
         ]
      },
      {
         "id": "d2fc217d-c355-4baa-ba4e-3f4c1f661a1c",
         "alias": "Handle Existing Account",
         "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "idp-confirm-link",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "requirement": "REQUIRED",
               "priority": 20,
               "flowAlias": "Account verification options",
               "userSetupAllowed": false,
               "autheticatorFlow": true
            }
         ]
      },
      {
         "id": "41e3e5fb-d9af-4eef-9b52-18f2cc26752d",
         "alias": "Reset - Conditional OTP",
         "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "conditional-user-configured",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "reset-otp",
               "requirement": "REQUIRED",
               "priority": 20,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            }
         ]
      },
      {
         "id": "5a35cceb-3b0b-4375-b2f9-2446d9ea011b",
         "alias": "User creation or linking",
         "description": "Flow for the existing/non-existing user alternatives",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticatorConfig": "create unique user config",
               "authenticator": "idp-create-user-if-unique",
               "requirement": "ALTERNATIVE",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "requirement": "ALTERNATIVE",
               "priority": 20,
               "flowAlias": "Handle Existing Account",
               "userSetupAllowed": false,
               "autheticatorFlow": true
            }
         ]
      },
      {
         "id": "b413e5f2-d153-4713-bc2c-74606e43f388",
         "alias": "Verify Existing Account by Re-authentication",
         "description": "Reauthentication of existing account",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "idp-username-password-form",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "requirement": "CONDITIONAL",
               "priority": 20,
               "flowAlias": "First broker login - Conditional OTP",
               "userSetupAllowed": false,
               "autheticatorFlow": true
            }
         ]
      },
      {
         "id": "5df47102-acc7-41ee-bd2a-a0ffd028d4c5",
         "alias": "browser",
         "description": "browser based authentication",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "auth-cookie",
               "requirement": "ALTERNATIVE",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "auth-spnego",
               "requirement": "DISABLED",
               "priority": 20,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "identity-provider-redirector",
               "requirement": "ALTERNATIVE",
               "priority": 25,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "requirement": "ALTERNATIVE",
               "priority": 30,
               "flowAlias": "forms",
               "userSetupAllowed": false,
               "autheticatorFlow": true
            }
         ]
      },
      {
         "id": "37af6ed7-ed0c-4a72-b61f-3b6614435613",
         "alias": "clients",
         "description": "Base authentication for clients",
         "providerId": "client-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "client-secret",
               "requirement": "ALTERNATIVE",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "client-jwt",
               "requirement": "ALTERNATIVE",
               "priority": 20,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "client-secret-jwt",
               "requirement": "ALTERNATIVE",
               "priority": 30,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "client-x509",
               "requirement": "ALTERNATIVE",
               "priority": 40,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            }
         ]
      },
      {
         "id": "e2f398a1-f03e-4c81-b3ba-24ef261f4787",
         "alias": "direct grant",
         "description": "OpenID Connect Resource Owner Grant",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "direct-grant-validate-username",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "direct-grant-validate-password",
               "requirement": "REQUIRED",
               "priority": 20,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "requirement": "CONDITIONAL",
               "priority": 30,
               "flowAlias": "Direct Grant - Conditional OTP",
               "userSetupAllowed": false,
               "autheticatorFlow": true
            }
         ]
      },
      {
         "id": "8d76e035-1abe-4fa9-8b2e-d0d8e60c9c0d",
         "alias": "docker auth",
         "description": "Used by Docker clients to authenticate against the IDP",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "docker-http-basic-authenticator",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            }
         ]
      },
      {
         "id": "8573dd3f-d9e5-4283-aa30-6db8a653e67f",
         "alias": "first broker login",
         "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticatorConfig": "review profile config",
               "authenticator": "idp-review-profile",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "requirement": "REQUIRED",
               "priority": 20,
               "flowAlias": "User creation or linking",
               "userSetupAllowed": false,
               "autheticatorFlow": true
            }
         ]
      },
      {
         "id": "666c4eee-3ee8-4ce7-a2ad-bc79a57b4ae1",
         "alias": "forms",
         "description": "Username, password, otp and other auth forms.",
         "providerId": "basic-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "auth-username-password-form",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "requirement": "CONDITIONAL",
               "priority": 20,
               "flowAlias": "Browser - Conditional OTP",
               "userSetupAllowed": false,
               "autheticatorFlow": true
            }
         ]
      },
      {
         "id": "19f20431-5674-4bd5-b0d1-92e6c1efff50",
         "alias": "http challenge",
         "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "no-cookie-redirect",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "requirement": "REQUIRED",
               "priority": 20,
               "flowAlias": "Authentication Options",
               "userSetupAllowed": false,
               "autheticatorFlow": true
            }
         ]
      },
      {
         "id": "3278a89b-e93a-4de9-aaa3-7668dcaeea10",
         "alias": "registration",
         "description": "registration flow",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "registration-page-form",
               "requirement": "REQUIRED",
               "priority": 10,
               "flowAlias": "registration form",
               "userSetupAllowed": false,
               "autheticatorFlow": true
            }
         ]
      },
      {
         "id": "84a299a0-7a29-453f-8b1b-6ec06edd5bb9",
         "alias": "registration form",
         "description": "registration form",
         "providerId": "form-flow",
         "topLevel": false,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "registration-user-creation",
               "requirement": "REQUIRED",
               "priority": 20,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "registration-profile-action",
               "requirement": "REQUIRED",
               "priority": 40,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "registration-password-action",
               "requirement": "REQUIRED",
               "priority": 50,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "registration-recaptcha-action",
               "requirement": "DISABLED",
               "priority": 60,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            }
         ]
      },
      {
         "id": "73d66346-8a03-4ac0-a447-b8373b773165",
         "alias": "reset credentials",
         "description": "Reset credentials for a user if they forgot their password or something",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "reset-credentials-choose-user",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "reset-credential-email",
               "requirement": "REQUIRED",
               "priority": 20,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "authenticator": "reset-password",
               "requirement": "REQUIRED",
               "priority": 30,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            },
            {
               "requirement": "CONDITIONAL",
               "priority": 40,
               "flowAlias": "Reset - Conditional OTP",
               "userSetupAllowed": false,
               "autheticatorFlow": true
            }
         ]
      },
      {
         "id": "24817f54-1800-4224-aae3-ce2e67b31059",
         "alias": "saml ecp",
         "description": "SAML ECP Profile Authentication Flow",
         "providerId": "basic-flow",
         "topLevel": true,
         "builtIn": true,
         "authenticationExecutions": [
            {
               "authenticator": "http-basic-authenticator",
               "requirement": "REQUIRED",
               "priority": 10,
               "userSetupAllowed": false,
               "autheticatorFlow": false
            }
         ]
      }
   ],
   "authenticatorConfig": [
      {
         "id": "2ddcdef4-ce74-43e0-b94d-cbf092a688aa",
         "alias": "create unique user config",
         "config": {
            "require.password.update.after.registration": "false"
         }
      },
      {
         "id": "b4a8e7e5-d5e4-4ca3-a529-491e77190683",
         "alias": "review profile config",
         "config": {
            "update.profile.on.first.login": "missing"
         }
      }
   ],
   "requiredActions": [
      {
         "alias": "CONFIGURE_TOTP",
         "name": "Configure OTP",
         "providerId": "CONFIGURE_TOTP",
         "enabled": true,
         "defaultAction": false,
         "priority": 10,
         "config": {}
      },
      {
         "alias": "terms_and_conditions",
         "name": "Terms and Conditions",
         "providerId": "terms_and_conditions",
         "enabled": false,
         "defaultAction": false,
         "priority": 20,
         "config": {}
      },
      {
         "alias": "UPDATE_PASSWORD",
         "name": "Update Password",
         "providerId": "UPDATE_PASSWORD",
         "enabled": true,
         "defaultAction": false,
         "priority": 30,
         "config": {}
      },
      {
         "alias": "UPDATE_PROFILE",
         "name": "Update Profile",
         "providerId": "UPDATE_PROFILE",
         "enabled": true,
         "defaultAction": false,
         "priority": 40,
         "config": {}
      },
      {
         "alias": "VERIFY_EMAIL",
         "name": "Verify Email",
         "providerId": "VERIFY_EMAIL",
         "enabled": true,
         "defaultAction": false,
         "priority": 50,
         "config": {}
      },
      {
         "alias": "update_user_locale",
         "name": "Update User Locale",
         "providerId": "update_user_locale",
         "enabled": true,
         "defaultAction": false,
         "priority": 1000,
         "config": {}
      }
   ],
   "browserFlow": "browser",
   "registrationFlow": "registration",
   "directGrantFlow": "direct grant",
   "resetCredentialsFlow": "reset credentials",
   "clientAuthenticationFlow": "clients",
   "dockerAuthenticationFlow": "docker auth",
   "attributes": {},
   "keycloakVersion": "11.0.3",
   "userManagedAccessAllowed": false
}
