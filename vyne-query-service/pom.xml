<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <parent>
      <groupId>io.vyne</groupId>
      <artifactId>platform</artifactId>
      <version>0.4.0</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>

   <artifactId>vyne-query-service</artifactId>

   <dependencies>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne-search</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>cask-api</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne-query-api</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>lang.taxi</groupId>
         <artifactId>lang-to-taxi-api</artifactId>
         <version>${taxi.version}</version>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne-spring</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-web</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
      </dependency>
      <dependency>
         <groupId>lang.taxi</groupId>
         <artifactId>swagger2taxi</artifactId>
         <version>${taxi.version}</version>
      </dependency>
      <dependency>
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-reflect</artifactId>
         <version>${kotlin.version}</version>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>com.google.guava</groupId>
         <artifactId>guava</artifactId>
      </dependency>
      <dependency>
         <groupId>net.logstash.logback</groupId>
         <artifactId>logstash-logback-encoder</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-data-jpa</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-data-r2dbc</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-config</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.data</groupId>
         <artifactId>spring-data-r2dbc</artifactId>
         <version>1.1.1.RELEASE</version>
      </dependency>
      <dependency>
         <groupId>org.springframework.data</groupId>
         <artifactId>spring-data-commons</artifactId>
         <version>2.3.1.RELEASE</version>
      </dependency>
      <dependency>
         <groupId>io.r2dbc</groupId>
         <artifactId>r2dbc-postgresql</artifactId>
      </dependency>
      <dependency>
         <groupId>org.flywaydb</groupId>
         <artifactId>flyway-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.postgresql</groupId>
         <artifactId>postgresql</artifactId>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne</artifactId>
         <version>${project.version}</version>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.skyscreamer</groupId>
         <artifactId>jsonassert</artifactId>
         <version>1.5.0</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
            <version>2.2.4</version>
            <executions>
               <execution>
                  <id>get-the-git-infos</id>
                  <goals>
                     <goal>revision</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <generateGitPropertiesFile>true</generateGitPropertiesFile>
               <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
               </generateGitPropertiesFilename>
            </configuration>
         </plugin>
         <!-- don't generate a source jar -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <configuration>
               <skipSource>true</skipSource>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
               <execution>
                  <goals>
                     <goal>build-info</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.6</version>
            <configuration>
               <workingDirectory>src/main/web/</workingDirectory>
               <nodeVersion>v12.16.3</nodeVersion>
            </configuration>
            <executions>
               <execution>
                  <id>install-npm</id>
                  <goals>
                     <goal>install-node-and-npm</goal>
                  </goals>
               </execution>
               <execution>
                  <id>run-npm-install</id>
                  <goals>
                     <goal>npm</goal>
                  </goals>
                  <configuration>
                     <arguments>ci</arguments>
                  </configuration>
               </execution>
               <execution>
                  <id>ng-build</id>
                  <goals>
                     <goal>npm</goal>
                  </goals>
                  <configuration>
                     <arguments>run-script build-prod</arguments>
                  </configuration>
               </execution>
            </executions>
         </plugin>


         <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>

            <configuration>
               <images>
                  <image>
                     <name>vyneco/vyne:${project.version}</name>
                     <build>
                        <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                        <tags>
                           <!-- defined in profiles.  see root pom.xml -->
                           <tag>${docker.tag}</tag>
                        </tags>
                     </build>
                  </image>
               </images>
            </configuration>

            <!-- Connect start/stop to pre- and
                 post-integration-test phase, respectively if you want to start
                 your docker containers during integration tests -->
            <executions>
               <execution>
                  <id>deploy</id>
                  <phase>deploy</phase>
                  <goals>
                     <!-- "build" should be used to create the images with the
                          artifact -->
                     <goal>build</goal>
                     <goal>push</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
</project>
