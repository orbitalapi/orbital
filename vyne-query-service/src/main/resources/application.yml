server:
   port: 9022
   compression:
      enabled: true
      mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
      min-response-size: 1024
   error:
      include-message: always
spring:
   application:
      name: query-service
#   autoconfigure:
#      exclude: org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration
   mvc:
      async:
         request-timeout: 1800000
   main:
      web-application-type: reactive
   codec:
      max-in-memory-size: 100MB
   r2dbc:
      url: r2dbc:h2:file://././vyne-query-history;COMPRESS=TRUE;MV_STORE=false;CACHE_SIZE=1
#      url: r2dbc:h2:file://././vyne-query-history;COMPRESS=TRUE;MV_STORE=false
      username: sa
      password:
vyne:
   newSchemaSubmissionEnabled: true
   data-lineage:
      remoteCalls:
         enabled: false
   schema:
      publicationMethod: LOCAL # this exposes in memory schema store via http API, use only in Vyne settings
      pollInterval: 5s
   mvc:
      executor:
         corePoolSize: 5
         maxPoolSize: 15
         queueCapacity: 50
   graph:
      vyneGraphBuilderCache:
         baseSchemaCacheSize: 100
         graphWithFactTypesCacheSize: 100
         baseSchemaGraphCacheSize: 100
      vyneDiscoverGraphQuery:
         schemaGraphCacheSize: 5
         searchPathExclusionsCacheSize: 200000
   history:
      persistRemoteCallResponses: false

feign:
   client:
      config:
         default:
            connectTimeout: 60000
            readTimeout: 60000

reactive:
   feign:
      client:
         config:
            default:
               options:
                  connectTimeoutMillis: 60000
                  readTimeoutMillis: 60000


hystrix:
   command:
      default:
         execution.isolation.thread.timeoutInMilliseconds: 60000

logging:
   level:
      org.springframework: WARN
      com.netflix.discovery.InstanceInfoReplicator: ERROR

      #       These two netflix loggers are REALLY noisy - it logs errors on startup, complaining it can't connect .. generally those errors are ignorable
      #        But, in some cases we may care -- so consider turning this back on.
      com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient: OFF
      com.netflix.discovery.DiscoveryClient: OFF
      org.apache.http: OFF
      com.netflix: WARN
      com.hazelcast: WARN
      io.vyne: INFO
      org.apache.catalina: WARN
eureka:
   client:
      #      registryFetchIntervalSeconds: 1
      #      initialInstanceInfoReplicationIntervalSeconds: 5
      serviceUrl:
         defaultZone: ${eureka.uri:http://127.0.0.1:8761}/eureka/
   instance:
      leaseRenewalIntervalInSeconds: 2
      leaseExpirationDurationInSeconds: 5

management.endpoints.web.base-path: /api/actuator
