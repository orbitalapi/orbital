@use '@angular/material' as mat;
@import "theme";
@import "~ag-grid-community/src/styles/ag-grid.scss";
@import "~ag-grid-community/src/styles/ag-theme-alpine/sass/ag-theme-alpine-mixin.scss";
@import '~highlight.js/styles/ocean.css';
@import "t2-colors";

:root {
  // Used to use variables here (--tui-text-font: $font-sans), but it stopped working.
  // Haven't really investigated why.
  --tui-text-font: 'nunito-sans', sans-serif;
  --tui-font-text: 'nunito-sans', sans-serif;


  --tui-radius-s: 0.3rem;
  --tui-radius-m: 0.4rem;
  --tui-radius-l: 0.5rem;

  --tui-primary: #{$primary};
  --tui-primary-hover: #{$primary-light};
  --tui-primary-active: #{$primary-dark};


  // After upgrading taiga 2->3, everything was shrunk
  // to 13px.  This seems to fix it.
  --tui-font-text-s: normal 1rem #{$body-font};

}

tui-dialog {
  border-radius: 8px !important;
}
// Patching things that broke after upgrading Taiga-ui 2->3
button {
  // For some reason, link buttons are showing as Arial without this
  font-family: $body-font
}

tui-dropdown-host {
  tui-dropdown {
    // When dropdowns are in dialogs, their z-index is incorrect, so they sit
    // behind the black overlay
    z-index: 10000 !important;
  }
}

.ag-theme-alpine {
  @include ag-theme-alpine((
    font-family: ($font-sans),
    border-color: $border-dark
  ));

  .ag-header-cell-text {
    font-family: $headings-font;
    color: $dark-grey-3;
    font-size: 1rem;
    font-weight: 400;
  }
}

[tuiWrapper][data-appearance='textfield'] {
  box-shadow: none;
}
//tui-wrapper[data-appearance='textfield'] {
//  box-shadow: 0 1px 2px rgb(19 20 22 / 10%);
//}

tui-root {
  // Without this, the app wasn't filling the full height.
  // See : https://github.com/TinkoffCreditSystems/taiga-ui/discussions/1009
  height: 100%;
}

html, body {
  height: 100%;
  overflow: hidden;
  font-size: 16px;
}

*:focus {
  outline: none;
}

body {
  margin: 0;
  font-family: $font-sans;
}

$custom-typography: mat.define-legacy-typography-config(
  $font-family: $font-sans,
  $headline: mat.define-typography-level(32px, 48px, 700),
  $body-1: mat.define-typography-level(16px, 24px, 500)
);

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy($custom-typography);`
@include mat.all-legacy-component-typographies($custom-typography);
@include mat.legacy-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$vyne-app-primary: mat.define-palette($vyne-grey-blue-palette, A400, A100, A700);
$vyne-app-accent: mat.define-palette($vyne-grey-blue-palette, A400, A100, A700);

// The warn palette is optional (defaults to red).
$vyne-app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object (a Sass map containing all of the palettes).
$vyne-app-theme: mat.define-light-theme($vyne-app-primary, $vyne-app-accent, $vyne-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-legacy-component-themes($vyne-app-theme);
@include mat.all-legacy-component-typographies($custom-typography);

// We want the tabs to fill 100% height of their parents.
// If removing this, be sure to test the ag-grid height in the tabbed-results-view component
.mat-tab-body-wrapper {
  flex-grow: 1;
}

.mat-card-header-text {
  // There's an annoying indent in the card headers that offsets things by 16px :(
  margin: 0 !important;
}

.mat-tab-link {
  font-family: $headings-font;
}

tui-dialog-host {
  z-index: 10000;
}

tui-dropdown-box {
  z-index: 1000000 !important;
}

.mat-stroked-button:not([class*=mat-elevation-z]) {
  box-shadow: 0 1px 2px rgb(19 20 22 / 10%);
  background-color: rgba(255, 255, 255, 0.7);
}

.as-split-gutter {
  z-index: 1000;
}
