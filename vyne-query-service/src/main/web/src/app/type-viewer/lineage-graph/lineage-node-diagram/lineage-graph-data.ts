import { Schema, SchemaGraph } from 'src/app/services/schema';

export const LINEAGE_DEMO_DATA: SchemaGraph = SchemaGraph.fromMap(
  {
  'nodes': {
    'demoorderFeedsdataWarehouseDataWarehouse': {
      'id': 'demoorderFeedsdataWarehouseDataWarehouse',
      'label': 'DataWarehouse',
      'type': 'SERVICE',
      'nodeId': 'demo.orderFeeds.dataWarehouse.DataWarehouse'
    },
    'demoorderFeedsinstrumentInstrumentService': {
      'id': 'demoorderFeedsinstrumentInstrumentService',
      'label': 'InstrumentService',
      'type': 'SERVICE',
      'nodeId': 'demo.orderFeeds.instrument.InstrumentService'
    },
    'demoorderFeedsinstrumentInstrumentServicegetInstruments': {
      'id': 'demoorderFeedsinstrumentInstrumentServicegetInstruments',
      'label': 'getInstruments',
      'type': 'OPERATION',
      'nodeId': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments'
    },
    'demoorderFeedsicapIcapOrderFeedService': {
      'id': 'demoorderFeedsicapIcapOrderFeedService',
      'label': 'IcapOrderFeedService',
      'type': 'SERVICE',
      'nodeId': 'demo.orderFeeds.icap.IcapOrderFeedService'
    },
    'demoorderFeedsicapIcapOrderFeedServicegetOrders': {
      'id': 'demoorderFeedsicapIcapOrderFeedServicegetOrders',
      'label': 'getOrders',
      'type': 'OPERATION',
      'nodeId': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders'
    },
    'demoorderFeedsbloombergBloombergOrderFeedService': {
      'id': 'demoorderFeedsbloombergBloombergOrderFeedService',
      'label': 'BloombergOrderFeedService',
      'type': 'SERVICE',
      'nodeId': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService'
    },
    'demoorderFeedsbloombergBloombergOrderFeedServicegetOrders': {
      'id': 'demoorderFeedsbloombergBloombergOrderFeedServicegetOrders',
      'label': 'getOrders',
      'type': 'OPERATION',
      'nodeId': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders'
    },
    'demoorderFeedstradingFixedIncomeTradingSystem': {
      'id': 'demoorderFeedstradingFixedIncomeTradingSystem',
      'label': 'FixedIncomeTradingSystem',
      'type': 'SERVICE',
      'nodeId': 'demo.orderFeeds.trading.FixedIncomeTradingSystem'
    },
    'demoorderFeedstradingFxTradingSystem': {
      'id': 'demoorderFeedstradingFxTradingSystem',
      'label': 'FxTradingSystem',
      'type': 'SERVICE',
      'nodeId': 'demo.orderFeeds.trading.FxTradingSystem'
    },
    'demoorderFeedstradingDateService': {
      'id': 'demoorderFeedstradingDateService',
      'label': 'DateService',
      'type': 'SERVICE',
      'nodeId': 'demo.orderFeeds.trading.DateService'
    },
    'demoorderFeedstradingDateServicegetTradeDate': {
      'id': 'demoorderFeedstradingDateServicegetTradeDate',
      'label': 'getTradeDate',
      'type': 'OPERATION',
      'nodeId': 'demo.orderFeeds.trading.DateService@@getTradeDate'
    }
  }, 'links': {
    '-909164309': {
      'source': 'demoorderFeedsinstrumentInstrumentService',
      'target': 'demoorderFeedsinstrumentInstrumentServicegetInstruments',
      'label': 'Has operation'
    },
    '-938740299': {
      'source': 'demoorderFeedsdataWarehouseDataWarehouse',
      'target': 'demoorderFeedsinstrumentInstrumentServicegetInstruments',
      'label': 'Consumes operation'
    },
    '-253738480': {
      'source': 'demoorderFeedsicapIcapOrderFeedService',
      'target': 'demoorderFeedsicapIcapOrderFeedServicegetOrders',
      'label': 'Has operation'
    },
    '-540907566': {
      'source': 'demoorderFeedsdataWarehouseDataWarehouse',
      'target': 'demoorderFeedsicapIcapOrderFeedServicegetOrders',
      'label': 'Consumes operation'
    },
    '991815212': {
      'source': 'demoorderFeedsbloombergBloombergOrderFeedService',
      'target': 'demoorderFeedsbloombergBloombergOrderFeedServicegetOrders',
      'label': 'Has operation'
    },
    '1049871072': {
      'source': 'demoorderFeedsdataWarehouseDataWarehouse',
      'target': 'demoorderFeedsbloombergBloombergOrderFeedServicegetOrders',
      'label': 'Consumes operation'
    },
    '-533496299': {
      'source': 'demoorderFeedstradingFixedIncomeTradingSystem',
      'target': 'demoorderFeedsinstrumentInstrumentServicegetInstruments',
      'label': 'Consumes operation'
    },
    '-135663566': {
      'source': 'demoorderFeedstradingFixedIncomeTradingSystem',
      'target': 'demoorderFeedsicapIcapOrderFeedServicegetOrders',
      'label': 'Consumes operation'
    },
    '1455115072': {
      'source': 'demoorderFeedstradingFixedIncomeTradingSystem',
      'target': 'demoorderFeedsbloombergBloombergOrderFeedServicegetOrders',
      'label': 'Consumes operation'
    },
    '1751604882': {
      'source': 'demoorderFeedstradingFxTradingSystem',
      'target': 'demoorderFeedsinstrumentInstrumentServicegetInstruments',
      'label': 'Consumes operation'
    },
    '-2145529681': {
      'source': 'demoorderFeedstradingFxTradingSystem',
      'target': 'demoorderFeedsicapIcapOrderFeedServicegetOrders',
      'label': 'Consumes operation'
    },
    '-554751043': {
      'source': 'demoorderFeedstradingFxTradingSystem',
      'target': 'demoorderFeedsbloombergBloombergOrderFeedServicegetOrders',
      'label': 'Consumes operation'
    },
    '-1125680059': {
      'source': 'demoorderFeedstradingDateService',
      'target': 'demoorderFeedstradingDateServicegetTradeDate',
      'label': 'Has operation'
    },
    '-1989233863': {
      'source': 'demoorderFeedstradingFxTradingSystem',
      'target': 'demoorderFeedstradingDateServicegetTradeDate',
      'label': 'Consumes operation'
    }
  }
})

export const LINEAGE_DEMO_SCHEMA = {
  'types': [{
    'name': {
      'fullyQualifiedName': 'lang.taxi.Boolean',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Boolean',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Boolean',
      'shortDisplayName': 'Boolean',
      'name': 'Boolean'
    },
    'attributes': {},
    'modifiers': ['PRIMITIVE'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'Represents a value which is either `true` or `false`.',
    'paramaterizedName': 'lang.taxi.Boolean',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Boolean',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Boolean',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Boolean',
      'shortDisplayName': 'Boolean',
      'name': 'Boolean'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': true,
    'longDisplayName': 'lang.taxi.Boolean',
    'fullyQualifiedName': 'lang.taxi.Boolean',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.Boolean',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Boolean',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Boolean',
      'shortDisplayName': 'Boolean',
      'name': 'Boolean'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'attributes': {},
    'modifiers': ['PRIMITIVE'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'A collection of characters.',
    'paramaterizedName': 'lang.taxi.String',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': true,
    'longDisplayName': 'lang.taxi.String',
    'fullyQualifiedName': 'lang.taxi.String',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'lang.taxi.Int',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Int',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Int',
      'shortDisplayName': 'Int',
      'name': 'Int'
    },
    'attributes': {},
    'modifiers': ['PRIMITIVE'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'A signed integer - ie. a whole number (positive or negative), with no decimal places',
    'paramaterizedName': 'lang.taxi.Int',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Int',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Int',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Int',
      'shortDisplayName': 'Int',
      'name': 'Int'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': true,
    'longDisplayName': 'lang.taxi.Int',
    'fullyQualifiedName': 'lang.taxi.Int',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.Int',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Int',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Int',
      'shortDisplayName': 'Int',
      'name': 'Int'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    },
    'attributes': {},
    'modifiers': ['PRIMITIVE'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'A signed decimal number - ie., a whole number with decimal places.',
    'paramaterizedName': 'lang.taxi.Decimal',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': true,
    'longDisplayName': 'lang.taxi.Decimal',
    'fullyQualifiedName': 'lang.taxi.Decimal',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    },
    'attributes': {},
    'modifiers': ['PRIMITIVE'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'A date, without a time or timezone.',
    'paramaterizedName': 'lang.taxi.Date',
    'isTypeAlias': false,
    'formatAndZoneOffset': { 'patterns': ['yyyy-MM-dd'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true },
    'offset': null,
    'format': ['yyyy-MM-dd'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': true,
    'longDisplayName': 'lang.taxi.Date',
    'fullyQualifiedName': 'lang.taxi.Date',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'lang.taxi.Time',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Time',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Time',
      'shortDisplayName': 'Time',
      'name': 'Time'
    },
    'attributes': {},
    'modifiers': ['PRIMITIVE'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'Time only, excluding the date part',
    'paramaterizedName': 'lang.taxi.Time',
    'isTypeAlias': false,
    'formatAndZoneOffset': { 'patterns': ['HH:mm:ss'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true },
    'offset': null,
    'format': ['HH:mm:ss'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Time',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Time',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Time',
      'shortDisplayName': 'Time',
      'name': 'Time'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'lang.taxi.Time',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Time',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Time',
      'shortDisplayName': 'Time',
      'name': 'Time'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': true,
    'longDisplayName': 'lang.taxi.Time',
    'fullyQualifiedName': 'lang.taxi.Time',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.Time',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Time',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Time',
      'shortDisplayName': 'Time',
      'name': 'Time'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'lang.taxi.DateTime',
      'parameters': [],
      'parameterizedName': 'lang.taxi.DateTime',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.DateTime',
      'shortDisplayName': 'DateTime',
      'name': 'DateTime'
    },
    'attributes': {},
    'modifiers': ['PRIMITIVE'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'A date and time, without a timezone.  Generally, favour using Instant which represents a point-in-time, as it has a timezone attached',
    'paramaterizedName': 'lang.taxi.DateTime',
    'isTypeAlias': false,
    'formatAndZoneOffset': {
      'patterns': ['yyyy-MM-dd\'T\'HH:mm:ss.SSS'],
      'utcZoneOffsetInMinutes': null,
      'definesPattern': true
    },
    'offset': null,
    'format': ['yyyy-MM-dd\'T\'HH:mm:ss.SSS'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.DateTime',
      'parameters': [],
      'parameterizedName': 'lang.taxi.DateTime',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.DateTime',
      'shortDisplayName': 'DateTime',
      'name': 'DateTime'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'lang.taxi.DateTime',
      'parameters': [],
      'parameterizedName': 'lang.taxi.DateTime',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.DateTime',
      'shortDisplayName': 'DateTime',
      'name': 'DateTime'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': true,
    'longDisplayName': 'lang.taxi.DateTime',
    'fullyQualifiedName': 'lang.taxi.DateTime',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.DateTime',
      'parameters': [],
      'parameterizedName': 'lang.taxi.DateTime',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.DateTime',
      'shortDisplayName': 'DateTime',
      'name': 'DateTime'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'lang.taxi.Instant',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Instant',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Instant',
      'shortDisplayName': 'Instant',
      'name': 'Instant'
    },
    'attributes': {},
    'modifiers': ['PRIMITIVE'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'A point in time, with date, time and timezone.  Follows ISO standard convention of yyyy-MM-dd\'T\'HH:mm:ss.SSSZ',
    'paramaterizedName': 'lang.taxi.Instant',
    'isTypeAlias': false,
    'formatAndZoneOffset': {
      'patterns': ['yyyy-MM-dd\'T\'HH:mm:ss[.SSS]X'],
      'utcZoneOffsetInMinutes': null,
      'definesPattern': true
    },
    'offset': null,
    'format': ['yyyy-MM-dd\'T\'HH:mm:ss[.SSS]X'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Instant',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Instant',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Instant',
      'shortDisplayName': 'Instant',
      'name': 'Instant'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'lang.taxi.Instant',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Instant',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Instant',
      'shortDisplayName': 'Instant',
      'name': 'Instant'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': true,
    'longDisplayName': 'lang.taxi.Instant',
    'fullyQualifiedName': 'lang.taxi.Instant',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.Instant',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Instant',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Instant',
      'shortDisplayName': 'Instant',
      'name': 'Instant'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'lang.taxi.Any',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Any',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Any',
      'shortDisplayName': 'Any',
      'name': 'Any'
    },
    'attributes': {},
    'modifiers': ['PRIMITIVE'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'Can be anything.  Try to avoid using \'Any\' as it\'s not descriptive - favour using a strongly typed approach instead',
    'paramaterizedName': 'lang.taxi.Any',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Any',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Any',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Any',
      'shortDisplayName': 'Any',
      'name': 'Any'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': true,
    'longDisplayName': 'lang.taxi.Any',
    'fullyQualifiedName': 'lang.taxi.Any',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.Any',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Any',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Any',
      'shortDisplayName': 'Any',
      'name': 'Any'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'lang.taxi.Double',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Double',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Double',
      'shortDisplayName': 'Double',
      'name': 'Double'
    },
    'attributes': {},
    'modifiers': ['PRIMITIVE'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'Represents a double-precision 64-bit IEEE 754 floating point number.',
    'paramaterizedName': 'lang.taxi.Double',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Double',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Double',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Double',
      'shortDisplayName': 'Double',
      'name': 'Double'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': true,
    'longDisplayName': 'lang.taxi.Double',
    'fullyQualifiedName': 'lang.taxi.Double',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.Double',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Double',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Double',
      'shortDisplayName': 'Double',
      'name': 'Double'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'lang.taxi.Void',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Void',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Void',
      'shortDisplayName': 'Void',
      'name': 'Void'
    },
    'attributes': {},
    'modifiers': ['PRIMITIVE'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'Nothing.  Represents the return value of operations that don\'t return anything.',
    'paramaterizedName': 'lang.taxi.Void',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Void',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Void',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Void',
      'shortDisplayName': 'Void',
      'name': 'Void'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': true,
    'longDisplayName': 'lang.taxi.Void',
    'fullyQualifiedName': 'lang.taxi.Void',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.Void',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Void',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Void',
      'shortDisplayName': 'Void',
      'name': 'Void'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Array',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Array',
      'shortDisplayName': 'Array',
      'name': 'Array'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'A collection of things',
    'paramaterizedName': 'lang.taxi.Array',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'lang.taxi.Array',
    'fullyQualifiedName': 'lang.taxi.Array',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Array',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Array',
      'shortDisplayName': 'Array',
      'name': 'Array'
    },
    'underlyingTypeParameters': [],
    'isCollection': true,
    'isStream': false,
    'collectionType': {
      'fullyQualifiedName': 'lang.taxi.Any',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Any',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Any',
      'shortDisplayName': 'Any',
      'name': 'Any'
    },
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Stream',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream',
      'shortDisplayName': 'Stream',
      'name': 'Stream'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': '<unknown>',
      'version': '0.0.0',
      'content': 'Native',
      'packageIdentifier': null,
      'packageQualifiedName': '<unknown>',
      'id': '<unknown>:0.0.0',
      'contentHash': 'd509e4'
    }],
    'typeParameters': [],
    'typeDoc': 'Result of a service publishing sequence of events',
    'paramaterizedName': 'lang.taxi.Stream',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'lang.taxi.Stream',
    'fullyQualifiedName': 'lang.taxi.Stream',
    'memberQualifiedName': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Stream',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream',
      'shortDisplayName': 'Stream',
      'name': 'Stream'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': true,
    'collectionType': {
      'fullyQualifiedName': 'lang.taxi.Any',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Any',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Any',
      'shortDisplayName': 'Any',
      'name': 'Any'
    },
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.Username',
      'parameters': [],
      'parameterizedName': 'io.vyne.Username',
      'namespace': 'io.vyne',
      'longDisplayName': 'io.vyne.Username',
      'shortDisplayName': 'Username',
      'name': 'Username'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'UserTypes',
      'version': '0.0.0',
      'content': 'namespace io.vyne {\n   type Username inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/UserTypes',
      'id': 'UserTypes:0.0.0',
      'contentHash': '00a414'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.Username',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.Username',
    'fullyQualifiedName': 'io.vyne.Username',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.Username',
      'parameters': [],
      'parameterizedName': 'io.vyne.Username',
      'namespace': 'io.vyne',
      'longDisplayName': 'io.vyne.Username',
      'shortDisplayName': 'Username',
      'name': 'Username'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.jdbc.ConnectionName',
      'parameters': [],
      'parameterizedName': 'io.vyne.jdbc.ConnectionName',
      'namespace': 'io.vyne.jdbc',
      'longDisplayName': 'io.vyne.jdbc.ConnectionName',
      'shortDisplayName': 'ConnectionName',
      'name': 'ConnectionName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'JdbcConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.jdbc {\n   type ConnectionName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/JdbcConnectors',
      'id': 'JdbcConnectors:0.0.0',
      'contentHash': 'b0f9b0'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.jdbc.ConnectionName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.jdbc.ConnectionName',
    'fullyQualifiedName': 'io.vyne.jdbc.ConnectionName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.jdbc.ConnectionName',
      'parameters': [],
      'parameterizedName': 'io.vyne.jdbc.ConnectionName',
      'namespace': 'io.vyne.jdbc',
      'longDisplayName': 'io.vyne.jdbc.ConnectionName',
      'shortDisplayName': 'ConnectionName',
      'name': 'ConnectionName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.jdbc.DatabaseService',
      'parameters': [],
      'parameterizedName': 'io.vyne.jdbc.DatabaseService',
      'namespace': 'io.vyne.jdbc',
      'longDisplayName': 'io.vyne.jdbc.DatabaseService',
      'shortDisplayName': 'DatabaseService',
      'name': 'DatabaseService'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'JdbcConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.jdbc {\n   annotation DatabaseService {\n         connection : ConnectionName\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/JdbcConnectors',
      'id': 'JdbcConnectors:0.0.0',
      'contentHash': '56bb57'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.jdbc.DatabaseService',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.jdbc.DatabaseService',
      'parameters': [],
      'parameterizedName': 'io.vyne.jdbc.DatabaseService',
      'namespace': 'io.vyne.jdbc',
      'longDisplayName': 'io.vyne.jdbc.DatabaseService',
      'shortDisplayName': 'DatabaseService',
      'name': 'DatabaseService'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.jdbc.DatabaseService',
    'fullyQualifiedName': 'io.vyne.jdbc.DatabaseService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.jdbc.DatabaseService',
      'parameters': [],
      'parameterizedName': 'io.vyne.jdbc.DatabaseService',
      'namespace': 'io.vyne.jdbc',
      'longDisplayName': 'io.vyne.jdbc.DatabaseService',
      'shortDisplayName': 'DatabaseService',
      'name': 'DatabaseService'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.jdbc.Table',
      'parameters': [],
      'parameterizedName': 'io.vyne.jdbc.Table',
      'namespace': 'io.vyne.jdbc',
      'longDisplayName': 'io.vyne.jdbc.Table',
      'shortDisplayName': 'Table',
      'name': 'Table'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'JdbcConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.jdbc {\n   annotation Table {\n         connection : ConnectionName\n         table : TableName inherits String\n         schema: SchemaName inherits String\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/JdbcConnectors',
      'id': 'JdbcConnectors:0.0.0',
      'contentHash': 'e8ee48'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.jdbc.Table',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.jdbc.Table',
      'parameters': [],
      'parameterizedName': 'io.vyne.jdbc.Table',
      'namespace': 'io.vyne.jdbc',
      'longDisplayName': 'io.vyne.jdbc.Table',
      'shortDisplayName': 'Table',
      'name': 'Table'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.jdbc.Table',
    'fullyQualifiedName': 'io.vyne.jdbc.Table',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.jdbc.Table',
      'parameters': [],
      'parameterizedName': 'io.vyne.jdbc.Table',
      'namespace': 'io.vyne.jdbc',
      'longDisplayName': 'io.vyne.jdbc.Table',
      'shortDisplayName': 'Table',
      'name': 'Table'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
      'parameters': [],
      'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
      'namespace': 'vyne.vyneQl',
      'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
      'shortDisplayName': 'VyneQlQuery',
      'name': 'VyneQlQuery'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'vyne.cask.types',
      'version': '0.0.0',
      'content': 'namespace vyne.vyneQl {\n   type VyneQlQuery inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne.cask',
        'name': 'generated-schemas',
        'version': '1.7.0',
        'unversionedId': 'io.vyne.cask/generated-schemas',
        'id': 'io.vyne.cask/generated-schemas/1.7.0',
        'uriSafeId': 'io.vyne.cask:generated-schemas:1.7.0'
      },
      'packageQualifiedName': '[io.vyne.cask/generated-schemas/1.7.0]/vyne.cask.types',
      'id': 'vyne.cask.types:0.0.0',
      'contentHash': '79e033'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'vyne.vyneQl.VyneQlQuery',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
    'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
      'parameters': [],
      'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
      'namespace': 'vyne.vyneQl',
      'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
      'shortDisplayName': 'VyneQlQuery',
      'name': 'VyneQlQuery'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.kafka.KafkaService',
      'parameters': [],
      'parameterizedName': 'io.vyne.kafka.KafkaService',
      'namespace': 'io.vyne.kafka',
      'longDisplayName': 'io.vyne.kafka.KafkaService',
      'shortDisplayName': 'KafkaService',
      'name': 'KafkaService'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'KafkaConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.kafka {\n   annotation KafkaService {\n         connectionName : ConnectionName inherits String\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/KafkaConnectors',
      'id': 'KafkaConnectors:0.0.0',
      'contentHash': '6826ff'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.kafka.KafkaService',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.kafka.KafkaService',
      'parameters': [],
      'parameterizedName': 'io.vyne.kafka.KafkaService',
      'namespace': 'io.vyne.kafka',
      'longDisplayName': 'io.vyne.kafka.KafkaService',
      'shortDisplayName': 'KafkaService',
      'name': 'KafkaService'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.kafka.KafkaService',
    'fullyQualifiedName': 'io.vyne.kafka.KafkaService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.kafka.KafkaService',
      'parameters': [],
      'parameterizedName': 'io.vyne.kafka.KafkaService',
      'namespace': 'io.vyne.kafka',
      'longDisplayName': 'io.vyne.kafka.KafkaService',
      'shortDisplayName': 'KafkaService',
      'name': 'KafkaService'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.kafka.TopicOffset',
      'parameters': [],
      'parameterizedName': 'io.vyne.kafka.TopicOffset',
      'namespace': 'io.vyne.kafka',
      'longDisplayName': 'io.vyne.kafka.TopicOffset',
      'shortDisplayName': 'TopicOffset',
      'name': 'TopicOffset'
    },
    'attributes': {},
    'modifiers': ['ENUM'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [{ 'name': 'earliest', 'value': 'earliest', 'synonyms': [], 'typeDoc': '' }, {
      'name': 'latest',
      'value': 'latest',
      'synonyms': [],
      'typeDoc': ''
    }, { 'name': 'none', 'value': 'none', 'synonyms': [], 'typeDoc': '' }],
    'sources': [{
      'name': 'KafkaConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.kafka {\n   enum TopicOffset {\n         earliest,\n         latest,\n         none\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/KafkaConnectors',
      'id': 'KafkaConnectors:0.0.0',
      'contentHash': 'd31705'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.kafka.TopicOffset',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.kafka.TopicOffset',
    'fullyQualifiedName': 'io.vyne.kafka.TopicOffset',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.kafka.TopicOffset',
      'parameters': [],
      'parameterizedName': 'io.vyne.kafka.TopicOffset',
      'namespace': 'io.vyne.kafka',
      'longDisplayName': 'io.vyne.kafka.TopicOffset',
      'shortDisplayName': 'TopicOffset',
      'name': 'TopicOffset'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.kafka.KafkaOperation',
      'parameters': [],
      'parameterizedName': 'io.vyne.kafka.KafkaOperation',
      'namespace': 'io.vyne.kafka',
      'longDisplayName': 'io.vyne.kafka.KafkaOperation',
      'shortDisplayName': 'KafkaOperation',
      'name': 'KafkaOperation'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'KafkaConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.kafka {\n   annotation KafkaOperation {\n         topic : TopicName inherits String\n         offset : TopicOffset\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/KafkaConnectors',
      'id': 'KafkaConnectors:0.0.0',
      'contentHash': '890f9c'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.kafka.KafkaOperation',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.kafka.KafkaOperation',
      'parameters': [],
      'parameterizedName': 'io.vyne.kafka.KafkaOperation',
      'namespace': 'io.vyne.kafka',
      'longDisplayName': 'io.vyne.kafka.KafkaOperation',
      'shortDisplayName': 'KafkaOperation',
      'name': 'KafkaOperation'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.kafka.KafkaOperation',
    'fullyQualifiedName': 'io.vyne.kafka.KafkaOperation',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.kafka.KafkaOperation',
      'parameters': [],
      'parameterizedName': 'io.vyne.kafka.KafkaOperation',
      'namespace': 'io.vyne.kafka',
      'longDisplayName': 'io.vyne.kafka.KafkaOperation',
      'shortDisplayName': 'KafkaOperation',
      'name': 'KafkaOperation'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.catalog.DataOwner',
      'parameters': [],
      'parameterizedName': 'io.vyne.catalog.DataOwner',
      'namespace': 'io.vyne.catalog',
      'longDisplayName': 'io.vyne.catalog.DataOwner',
      'shortDisplayName': 'DataOwner',
      'name': 'DataOwner'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'Catalog',
      'version': '0.0.0',
      'content': 'namespace io.vyne.catalog {\n   annotation DataOwner {\n         id : io.vyne.Username\n         name : String\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/Catalog',
      'id': 'Catalog:0.0.0',
      'contentHash': '2368b8'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.catalog.DataOwner',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.catalog.DataOwner',
      'parameters': [],
      'parameterizedName': 'io.vyne.catalog.DataOwner',
      'namespace': 'io.vyne.catalog',
      'longDisplayName': 'io.vyne.catalog.DataOwner',
      'shortDisplayName': 'DataOwner',
      'name': 'DataOwner'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.catalog.DataOwner',
    'fullyQualifiedName': 'io.vyne.catalog.DataOwner',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.catalog.DataOwner',
      'parameters': [],
      'parameterizedName': 'io.vyne.catalog.DataOwner',
      'namespace': 'io.vyne.catalog',
      'longDisplayName': 'io.vyne.catalog.DataOwner',
      'shortDisplayName': 'DataOwner',
      'name': 'DataOwner'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.s3.S3Service',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.s3.S3Service',
      'namespace': 'io.vyne.aws.s3',
      'longDisplayName': 'io.vyne.aws.s3.S3Service',
      'shortDisplayName': 'S3Service',
      'name': 'S3Service'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'AwsS3Connectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.s3 {\n   annotation S3Service {\n         connectionName : ConnectionName inherits String\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsS3Connectors',
      'id': 'AwsS3Connectors:0.0.0',
      'contentHash': 'c94220'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.aws.s3.S3Service',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.aws.s3.S3Service',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.s3.S3Service',
      'namespace': 'io.vyne.aws.s3',
      'longDisplayName': 'io.vyne.aws.s3.S3Service',
      'shortDisplayName': 'S3Service',
      'name': 'S3Service'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.s3.S3Service',
    'fullyQualifiedName': 'io.vyne.aws.s3.S3Service',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.s3.S3Service',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.s3.S3Service',
      'namespace': 'io.vyne.aws.s3',
      'longDisplayName': 'io.vyne.aws.s3.S3Service',
      'shortDisplayName': 'S3Service',
      'name': 'S3Service'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.s3.S3Operation',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.s3.S3Operation',
      'namespace': 'io.vyne.aws.s3',
      'longDisplayName': 'io.vyne.aws.s3.S3Operation',
      'shortDisplayName': 'S3Operation',
      'name': 'S3Operation'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'AwsS3Connectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.s3 {\n   annotation S3Operation {\n         bucket : BucketName inherits String\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsS3Connectors',
      'id': 'AwsS3Connectors:0.0.0',
      'contentHash': '2d48b3'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.aws.s3.S3Operation',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.aws.s3.S3Operation',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.s3.S3Operation',
      'namespace': 'io.vyne.aws.s3',
      'longDisplayName': 'io.vyne.aws.s3.S3Operation',
      'shortDisplayName': 'S3Operation',
      'name': 'S3Operation'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.s3.S3Operation',
    'fullyQualifiedName': 'io.vyne.aws.s3.S3Operation',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.s3.S3Operation',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.s3.S3Operation',
      'namespace': 'io.vyne.aws.s3',
      'longDisplayName': 'io.vyne.aws.s3.S3Operation',
      'shortDisplayName': 'S3Operation',
      'name': 'S3Operation'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.s3.S3EntryKey',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.s3.S3EntryKey',
      'namespace': 'io.vyne.aws.s3',
      'longDisplayName': 'io.vyne.aws.s3.S3EntryKey',
      'shortDisplayName': 'S3EntryKey',
      'name': 'S3EntryKey'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'AwsS3Connectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.s3 {\n   type S3EntryKey inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsS3Connectors',
      'id': 'AwsS3Connectors:0.0.0',
      'contentHash': 'b1a22b'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.aws.s3.S3EntryKey',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.s3.S3EntryKey',
    'fullyQualifiedName': 'io.vyne.aws.s3.S3EntryKey',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.s3.S3EntryKey',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.s3.S3EntryKey',
      'namespace': 'io.vyne.aws.s3',
      'longDisplayName': 'io.vyne.aws.s3.S3EntryKey',
      'shortDisplayName': 'S3EntryKey',
      'name': 'S3EntryKey'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.sqs.SqsService',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.sqs.SqsService',
      'namespace': 'io.vyne.aws.sqs',
      'longDisplayName': 'io.vyne.aws.sqs.SqsService',
      'shortDisplayName': 'SqsService',
      'name': 'SqsService'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'AwsSqsConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.sqs {\n   annotation SqsService {\n         connectionName : ConnectionName inherits String\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsSqsConnectors',
      'id': 'AwsSqsConnectors:0.0.0',
      'contentHash': 'bb0399'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.aws.sqs.SqsService',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.aws.sqs.SqsService',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.sqs.SqsService',
      'namespace': 'io.vyne.aws.sqs',
      'longDisplayName': 'io.vyne.aws.sqs.SqsService',
      'shortDisplayName': 'SqsService',
      'name': 'SqsService'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.sqs.SqsService',
    'fullyQualifiedName': 'io.vyne.aws.sqs.SqsService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.sqs.SqsService',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.sqs.SqsService',
      'namespace': 'io.vyne.aws.sqs',
      'longDisplayName': 'io.vyne.aws.sqs.SqsService',
      'shortDisplayName': 'SqsService',
      'name': 'SqsService'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.sqs.SqsOperation',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.sqs.SqsOperation',
      'namespace': 'io.vyne.aws.sqs',
      'longDisplayName': 'io.vyne.aws.sqs.SqsOperation',
      'shortDisplayName': 'SqsOperation',
      'name': 'SqsOperation'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'AwsSqsConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.sqs {\n   annotation SqsOperation {\n         queue : QueueName inherits String\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsSqsConnectors',
      'id': 'AwsSqsConnectors:0.0.0',
      'contentHash': 'e9ab78'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.aws.sqs.SqsOperation',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.aws.sqs.SqsOperation',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.sqs.SqsOperation',
      'namespace': 'io.vyne.aws.sqs',
      'longDisplayName': 'io.vyne.aws.sqs.SqsOperation',
      'shortDisplayName': 'SqsOperation',
      'name': 'SqsOperation'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.sqs.SqsOperation',
    'fullyQualifiedName': 'io.vyne.aws.sqs.SqsOperation',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.sqs.SqsOperation',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.sqs.SqsOperation',
      'namespace': 'io.vyne.aws.sqs',
      'longDisplayName': 'io.vyne.aws.sqs.SqsOperation',
      'shortDisplayName': 'SqsOperation',
      'name': 'SqsOperation'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.azure.store.BlobService',
      'parameters': [],
      'parameterizedName': 'io.vyne.azure.store.BlobService',
      'namespace': 'io.vyne.azure.store',
      'longDisplayName': 'io.vyne.azure.store.BlobService',
      'shortDisplayName': 'BlobService',
      'name': 'BlobService'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'AzureStoreConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.azure.store {\n   annotation BlobService {\n         connectionName : ConnectionName inherits String\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AzureStoreConnectors',
      'id': 'AzureStoreConnectors:0.0.0',
      'contentHash': '7804e6'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.azure.store.BlobService',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.azure.store.BlobService',
      'parameters': [],
      'parameterizedName': 'io.vyne.azure.store.BlobService',
      'namespace': 'io.vyne.azure.store',
      'longDisplayName': 'io.vyne.azure.store.BlobService',
      'shortDisplayName': 'BlobService',
      'name': 'BlobService'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.azure.store.BlobService',
    'fullyQualifiedName': 'io.vyne.azure.store.BlobService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.azure.store.BlobService',
      'parameters': [],
      'parameterizedName': 'io.vyne.azure.store.BlobService',
      'namespace': 'io.vyne.azure.store',
      'longDisplayName': 'io.vyne.azure.store.BlobService',
      'shortDisplayName': 'BlobService',
      'name': 'BlobService'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.azure.store.AzureStoreOperation',
      'parameters': [],
      'parameterizedName': 'io.vyne.azure.store.AzureStoreOperation',
      'namespace': 'io.vyne.azure.store',
      'longDisplayName': 'io.vyne.azure.store.AzureStoreOperation',
      'shortDisplayName': 'AzureStoreOperation',
      'name': 'AzureStoreOperation'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'AzureStoreConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.azure.store {\n   annotation AzureStoreOperation {\n         container : AzureStoreContainer inherits String\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AzureStoreConnectors',
      'id': 'AzureStoreConnectors:0.0.0',
      'contentHash': '1305ac'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.azure.store.AzureStoreOperation',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.azure.store.AzureStoreOperation',
      'parameters': [],
      'parameterizedName': 'io.vyne.azure.store.AzureStoreOperation',
      'namespace': 'io.vyne.azure.store',
      'longDisplayName': 'io.vyne.azure.store.AzureStoreOperation',
      'shortDisplayName': 'AzureStoreOperation',
      'name': 'AzureStoreOperation'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.azure.store.AzureStoreOperation',
    'fullyQualifiedName': 'io.vyne.azure.store.AzureStoreOperation',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.azure.store.AzureStoreOperation',
      'parameters': [],
      'parameterizedName': 'io.vyne.azure.store.AzureStoreOperation',
      'namespace': 'io.vyne.azure.store',
      'longDisplayName': 'io.vyne.azure.store.AzureStoreOperation',
      'shortDisplayName': 'AzureStoreOperation',
      'name': 'AzureStoreOperation'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.azure.store.AzureStoreBlob',
      'parameters': [],
      'parameterizedName': 'io.vyne.azure.store.AzureStoreBlob',
      'namespace': 'io.vyne.azure.store',
      'longDisplayName': 'io.vyne.azure.store.AzureStoreBlob',
      'shortDisplayName': 'AzureStoreBlob',
      'name': 'AzureStoreBlob'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'AzureStoreConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.azure.store {\n   type AzureStoreBlob inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AzureStoreConnectors',
      'id': 'AzureStoreConnectors:0.0.0',
      'contentHash': '30cf88'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.azure.store.AzureStoreBlob',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.azure.store.AzureStoreBlob',
    'fullyQualifiedName': 'io.vyne.azure.store.AzureStoreBlob',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.azure.store.AzureStoreBlob',
      'parameters': [],
      'parameterizedName': 'io.vyne.azure.store.AzureStoreBlob',
      'namespace': 'io.vyne.azure.store',
      'longDisplayName': 'io.vyne.azure.store.AzureStoreBlob',
      'shortDisplayName': 'AzureStoreBlob',
      'name': 'AzureStoreBlob'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.lambda.AwsLambdaService',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.lambda.AwsLambdaService',
      'namespace': 'io.vyne.aws.lambda',
      'longDisplayName': 'io.vyne.aws.lambda.AwsLambdaService',
      'shortDisplayName': 'AwsLambdaService',
      'name': 'AwsLambdaService'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'AwsLambdaConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.lambda {\n   annotation AwsLambdaService {\n         connectionName : ConnectionName inherits String\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsLambdaConnectors',
      'id': 'AwsLambdaConnectors:0.0.0',
      'contentHash': '4f9d53'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.aws.lambda.AwsLambdaService',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.aws.lambda.AwsLambdaService',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.lambda.AwsLambdaService',
      'namespace': 'io.vyne.aws.lambda',
      'longDisplayName': 'io.vyne.aws.lambda.AwsLambdaService',
      'shortDisplayName': 'AwsLambdaService',
      'name': 'AwsLambdaService'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.lambda.AwsLambdaService',
    'fullyQualifiedName': 'io.vyne.aws.lambda.AwsLambdaService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.lambda.AwsLambdaService',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.lambda.AwsLambdaService',
      'namespace': 'io.vyne.aws.lambda',
      'longDisplayName': 'io.vyne.aws.lambda.AwsLambdaService',
      'shortDisplayName': 'AwsLambdaService',
      'name': 'AwsLambdaService'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.lambda.LambdaOperation',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.lambda.LambdaOperation',
      'namespace': 'io.vyne.aws.lambda',
      'longDisplayName': 'io.vyne.aws.lambda.LambdaOperation',
      'shortDisplayName': 'LambdaOperation',
      'name': 'LambdaOperation'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'AwsLambdaConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.lambda {\n   annotation LambdaOperation {\n         name : OperationName inherits String\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsLambdaConnectors',
      'id': 'AwsLambdaConnectors:0.0.0',
      'contentHash': '12a268'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.aws.lambda.LambdaOperation',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.aws.lambda.LambdaOperation',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.lambda.LambdaOperation',
      'namespace': 'io.vyne.aws.lambda',
      'longDisplayName': 'io.vyne.aws.lambda.LambdaOperation',
      'shortDisplayName': 'LambdaOperation',
      'name': 'LambdaOperation'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.lambda.LambdaOperation',
    'fullyQualifiedName': 'io.vyne.aws.lambda.LambdaOperation',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.lambda.LambdaOperation',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.lambda.LambdaOperation',
      'namespace': 'io.vyne.aws.lambda',
      'longDisplayName': 'io.vyne.aws.lambda.LambdaOperation',
      'shortDisplayName': 'LambdaOperation',
      'name': 'LambdaOperation'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.formats.Csv',
      'parameters': [],
      'parameterizedName': 'io.vyne.formats.Csv',
      'namespace': 'io.vyne.formats',
      'longDisplayName': 'io.vyne.formats.Csv',
      'shortDisplayName': 'Csv',
      'name': 'Csv'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'CsvFormat',
      'version': '0.0.0',
      'content': 'namespace io.vyne.formats {\n   annotation Csv {\n         delimiter : String?\n         firstRecordAsHeader : Boolean?\n         nullValue : String?\n         containsTrailingDelimiters : Boolean?\n         ignoreContentBefore : String?\n         useFieldNamesAsColumnNames: Boolean?\n         withQuote: String?\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/CsvFormat',
      'id': 'CsvFormat:0.0.0',
      'contentHash': '25616d'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'io.vyne.formats.Csv',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'io.vyne.formats.Csv',
      'parameters': [],
      'parameterizedName': 'io.vyne.formats.Csv',
      'namespace': 'io.vyne.formats',
      'longDisplayName': 'io.vyne.formats.Csv',
      'shortDisplayName': 'Csv',
      'name': 'Csv'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.formats.Csv',
    'fullyQualifiedName': 'io.vyne.formats.Csv',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.formats.Csv',
      'parameters': [],
      'parameterizedName': 'io.vyne.formats.Csv',
      'namespace': 'io.vyne.formats',
      'longDisplayName': 'io.vyne.formats.Csv',
      'shortDisplayName': 'Csv',
      'name': 'Csv'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demos.esg.EnvironmentalScore',
      'parameters': [],
      'parameterizedName': 'demos.esg.EnvironmentalScore',
      'namespace': 'demos.esg',
      'longDisplayName': 'demos.esg.EnvironmentalScore',
      'shortDisplayName': 'EnvironmentalScore',
      'name': 'EnvironmentalScore'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'version': '0.0.0',
      'content': 'namespace demos.esg {\n   type EnvironmentalScore inherits Decimal\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi:0.0.0',
      'contentHash': 'c72d0b'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demos.esg.EnvironmentalScore',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demos.esg.EnvironmentalScore',
    'fullyQualifiedName': 'demos.esg.EnvironmentalScore',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demos.esg.EnvironmentalScore',
      'parameters': [],
      'parameterizedName': 'demos.esg.EnvironmentalScore',
      'namespace': 'demos.esg',
      'longDisplayName': 'demos.esg.EnvironmentalScore',
      'shortDisplayName': 'EnvironmentalScore',
      'name': 'EnvironmentalScore'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demos.esg.SocialScore',
      'parameters': [],
      'parameterizedName': 'demos.esg.SocialScore',
      'namespace': 'demos.esg',
      'longDisplayName': 'demos.esg.SocialScore',
      'shortDisplayName': 'SocialScore',
      'name': 'SocialScore'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'version': '0.0.0',
      'content': 'namespace demos.esg {\n   type SocialScore inherits Decimal\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi:0.0.0',
      'contentHash': 'fb91bb'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demos.esg.SocialScore',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demos.esg.SocialScore',
    'fullyQualifiedName': 'demos.esg.SocialScore',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demos.esg.SocialScore',
      'parameters': [],
      'parameterizedName': 'demos.esg.SocialScore',
      'namespace': 'demos.esg',
      'longDisplayName': 'demos.esg.SocialScore',
      'shortDisplayName': 'SocialScore',
      'name': 'SocialScore'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demos.esg.GovernanceScore',
      'parameters': [],
      'parameterizedName': 'demos.esg.GovernanceScore',
      'namespace': 'demos.esg',
      'longDisplayName': 'demos.esg.GovernanceScore',
      'shortDisplayName': 'GovernanceScore',
      'name': 'GovernanceScore'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'version': '0.0.0',
      'content': 'namespace demos.esg {\n   type GovernanceScore inherits Decimal\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi:0.0.0',
      'contentHash': 'bc104b'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demos.esg.GovernanceScore',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demos.esg.GovernanceScore',
    'fullyQualifiedName': 'demos.esg.GovernanceScore',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demos.esg.GovernanceScore',
      'parameters': [],
      'parameterizedName': 'demos.esg.GovernanceScore',
      'namespace': 'demos.esg',
      'longDisplayName': 'demos.esg.GovernanceScore',
      'shortDisplayName': 'GovernanceScore',
      'name': 'GovernanceScore'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'msci.EsgData',
      'parameters': [],
      'parameterizedName': 'msci.EsgData',
      'namespace': 'msci',
      'longDisplayName': 'msci.EsgData',
      'shortDisplayName': 'EsgData',
      'name': 'EsgData'
    },
    'attributes': {
      'isin': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Isin',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'environmentalScore': {
        'type': {
          'fullyQualifiedName': 'demos.esg.EnvironmentalScore',
          'parameters': [],
          'parameterizedName': 'demos.esg.EnvironmentalScore',
          'namespace': 'demos.esg',
          'longDisplayName': 'demos.esg.EnvironmentalScore',
          'shortDisplayName': 'EnvironmentalScore',
          'name': 'EnvironmentalScore'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demos.esg.EnvironmentalScore',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'socialScore': {
        'type': {
          'fullyQualifiedName': 'demos.esg.SocialScore',
          'parameters': [],
          'parameterizedName': 'demos.esg.SocialScore',
          'namespace': 'demos.esg',
          'longDisplayName': 'demos.esg.SocialScore',
          'shortDisplayName': 'SocialScore',
          'name': 'SocialScore'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demos.esg.SocialScore',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'governanceScore': {
        'type': {
          'fullyQualifiedName': 'demos.esg.GovernanceScore',
          'parameters': [],
          'parameterizedName': 'demos.esg.GovernanceScore',
          'namespace': 'demos.esg',
          'longDisplayName': 'demos.esg.GovernanceScore',
          'shortDisplayName': 'GovernanceScore',
          'name': 'GovernanceScore'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demos.esg.GovernanceScore',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.Isin\nimport demos.esg.EnvironmentalScore\nimport demos.esg.SocialScore\nimport demos.esg.GovernanceScore\nnamespace msci {\n   model EsgData {\n           isin: Isin\n             environmentalScore: demos.esg.EnvironmentalScore\n     socialScore: demos.esg.SocialScore      \n     governanceScore: demos.esg.GovernanceScore       \n       }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi:0.0.0',
      'contentHash': 'fc2897'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'msci.EsgData',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'msci.EsgData',
    'fullyQualifiedName': 'msci.EsgData',
    'memberQualifiedName': {
      'fullyQualifiedName': 'msci.EsgData',
      'parameters': [],
      'parameterizedName': 'msci.EsgData',
      'namespace': 'msci',
      'longDisplayName': 'msci.EsgData',
      'shortDisplayName': 'EsgData',
      'name': 'EsgData'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'refinitiv.EsgScore',
      'parameters': [],
      'parameterizedName': 'refinitiv.EsgScore',
      'namespace': 'refinitiv',
      'longDisplayName': 'refinitiv.EsgScore',
      'shortDisplayName': 'EsgScore',
      'name': 'EsgScore'
    },
    'attributes': {
      'e_score': {
        'type': {
          'fullyQualifiedName': 'demos.esg.EnvironmentalScore',
          'parameters': [],
          'parameterizedName': 'demos.esg.EnvironmentalScore',
          'namespace': 'demos.esg',
          'longDisplayName': 'demos.esg.EnvironmentalScore',
          'shortDisplayName': 'EnvironmentalScore',
          'name': 'EnvironmentalScore'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demos.esg.EnvironmentalScore',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      's_score': {
        'type': {
          'fullyQualifiedName': 'demos.esg.SocialScore',
          'parameters': [],
          'parameterizedName': 'demos.esg.SocialScore',
          'namespace': 'demos.esg',
          'longDisplayName': 'demos.esg.SocialScore',
          'shortDisplayName': 'SocialScore',
          'name': 'SocialScore'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demos.esg.SocialScore',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'g_score': {
        'type': {
          'fullyQualifiedName': 'demos.esg.GovernanceScore',
          'parameters': [],
          'parameterizedName': 'demos.esg.GovernanceScore',
          'namespace': 'demos.esg',
          'longDisplayName': 'demos.esg.GovernanceScore',
          'shortDisplayName': 'GovernanceScore',
          'name': 'GovernanceScore'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demos.esg.GovernanceScore',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'version': '0.0.0',
      'content': 'import demos.esg.EnvironmentalScore\nimport demos.esg.SocialScore\nimport demos.esg.GovernanceScore\nnamespace refinitiv {\n   model EsgScore {\n           e_score: demos.esg.EnvironmentalScore\n           s_score: demos.esg.SocialScore\n           g_score: demos.esg.GovernanceScore\n       }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi:0.0.0',
      'contentHash': 'e5169f'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'refinitiv.EsgScore',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'refinitiv.EsgScore',
    'fullyQualifiedName': 'refinitiv.EsgScore',
    'memberQualifiedName': {
      'fullyQualifiedName': 'refinitiv.EsgScore',
      'parameters': [],
      'parameterizedName': 'refinitiv.EsgScore',
      'namespace': 'refinitiv',
      'longDisplayName': 'refinitiv.EsgScore',
      'shortDisplayName': 'EsgScore',
      'name': 'EsgScore'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'refinitiv.AssetInfo',
      'parameters': [],
      'parameterizedName': 'refinitiv.AssetInfo',
      'namespace': 'refinitiv',
      'longDisplayName': 'refinitiv.AssetInfo',
      'shortDisplayName': 'AssetInfo',
      'name': 'AssetInfo'
    },
    'attributes': {
      'cusip': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Cusip',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'esgScores': {
        'type': {
          'fullyQualifiedName': 'refinitiv.EsgScore',
          'parameters': [],
          'parameterizedName': 'refinitiv.EsgScore',
          'namespace': 'refinitiv',
          'longDisplayName': 'refinitiv.EsgScore',
          'shortDisplayName': 'EsgScore',
          'name': 'EsgScore'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'refinitiv.EsgScore',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.Cusip\nnamespace refinitiv {\n   model AssetInfo {\n           cusip: Cusip\n           esgScores: EsgScore\n       }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi:0.0.0',
      'contentHash': '67f650'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'refinitiv.AssetInfo',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'refinitiv.AssetInfo',
    'fullyQualifiedName': 'refinitiv.AssetInfo',
    'memberQualifiedName': {
      'fullyQualifiedName': 'refinitiv.AssetInfo',
      'parameters': [],
      'parameterizedName': 'refinitiv.AssetInfo',
      'namespace': 'refinitiv',
      'longDisplayName': 'refinitiv.AssetInfo',
      'shortDisplayName': 'AssetInfo',
      'name': 'AssetInfo'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.users.UserId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.UserId',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.UserId',
      'shortDisplayName': 'UserId',
      'name': 'UserId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.users {\n   [[\n   Top level concept of a User ID assigned to uniquely identify an employee to IT systems within the Bank.\n   ]]\n   type UserId inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi:0.0.0',
      'contentHash': 'a7323e'
    }],
    'typeParameters': [],
    'typeDoc': 'Top level concept of a User ID assigned to uniquely identify an employee to IT systems within the Bank.',
    'paramaterizedName': 'demo.orderFeeds.users.UserId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.users.UserId',
    'fullyQualifiedName': 'demo.orderFeeds.users.UserId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.UserId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.UserId',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.UserId',
      'shortDisplayName': 'UserId',
      'name': 'UserId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.users.TraderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.TraderId',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.TraderId',
      'shortDisplayName': 'TraderId',
      'name': 'TraderId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.users.UserId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.UserId',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.UserId',
      'shortDisplayName': 'UserId',
      'name': 'UserId'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.users {\n   [[\n   Category of trader ID to encompass the different types of trader IDs which are assigned by internal and external systems of the Bank.\n   ]]\n   type TraderId inherits UserId\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi:0.0.0',
      'contentHash': '374fb3'
    }],
    'typeParameters': [],
    'typeDoc': 'Category of trader ID to encompass the different types of trader IDs which are assigned by internal and external systems of the Bank.',
    'paramaterizedName': 'demo.orderFeeds.users.TraderId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.users.TraderId',
    'fullyQualifiedName': 'demo.orderFeeds.users.TraderId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.TraderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.TraderId',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.TraderId',
      'shortDisplayName': 'TraderId',
      'name': 'TraderId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
      'shortDisplayName': 'IcapTraderId',
      'name': 'IcapTraderId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.users.TraderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.TraderId',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.TraderId',
      'shortDisplayName': 'TraderId',
      'name': 'TraderId'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.users.TraderId\nnamespace demo.orderFeeds.icap {\n   [[\n   ID of traders when they\'re placing orders via ICAP.\n   ]]\n   type IcapTraderId inherits TraderId\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi:0.0.0',
      'contentHash': 'a829bb'
    }],
    'typeParameters': [],
    'typeDoc': 'ID of traders when they\'re placing orders via ICAP.',
    'paramaterizedName': 'demo.orderFeeds.icap.IcapTraderId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
    'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
      'shortDisplayName': 'IcapTraderId',
      'name': 'IcapTraderId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.OrderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.OrderId',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.OrderId',
      'shortDisplayName': 'OrderId',
      'name': 'OrderId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   [[\n       Top level type to represent the various types of Order IDs that exist in the bank.\n   ]]\n   type OrderId inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '72f12b'
    }],
    'typeParameters': [],
    'typeDoc': 'Top level type to represent the various types of Order IDs that exist in the bank.',
    'paramaterizedName': 'demo.orderFeeds.OrderId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.OrderId',
    'fullyQualifiedName': 'demo.orderFeeds.OrderId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.OrderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.OrderId',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.OrderId',
      'shortDisplayName': 'OrderId',
      'name': 'OrderId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapOrderId',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrderId',
      'shortDisplayName': 'IcapOrderId',
      'name': 'IcapOrderId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.OrderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.OrderId',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.OrderId',
      'shortDisplayName': 'OrderId',
      'name': 'OrderId'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.OrderId\nnamespace demo.orderFeeds.icap {\n   [[\n   ID of orders which are received via the ICAP feed.\n   ]]\n   type IcapOrderId inherits OrderId\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi:0.0.0',
      'contentHash': 'd4eb49'
    }],
    'typeParameters': [],
    'typeDoc': 'ID of orders which are received via the ICAP feed.',
    'paramaterizedName': 'demo.orderFeeds.icap.IcapOrderId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.icap.IcapOrderId',
    'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapOrderId',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrderId',
      'shortDisplayName': 'IcapOrderId',
      'name': 'IcapOrderId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.TradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.TradeDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.TradeDate',
      'shortDisplayName': 'TradeDate',
      'name': 'TradeDate'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   type TradeDate inherits Date\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '02a179'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.TradeDate',
    'isTypeAlias': false,
    'formatAndZoneOffset': { 'patterns': ['yyyy-MM-dd'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true },
    'offset': null,
    'format': ['yyyy-MM-dd'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.TradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.TradeDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.TradeDate',
      'shortDisplayName': 'TradeDate',
      'name': 'TradeDate'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.TradeDate',
    'fullyQualifiedName': 'demo.orderFeeds.TradeDate',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.TradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.TradeDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.TradeDate',
      'shortDisplayName': 'TradeDate',
      'name': 'TradeDate'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapTradeDate',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapTradeDate',
      'shortDisplayName': 'IcapTradeDate',
      'name': 'IcapTradeDate'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'taxi.stdlib.Format',
        'parameters': [],
        'parameterizedName': 'taxi.stdlib.Format',
        'namespace': 'taxi.stdlib',
        'longDisplayName': 'taxi.stdlib.Format',
        'shortDisplayName': 'Format',
        'name': 'Format'
      }, 'params': { 'value': 'dd-MM-yyyy', 'offset': 0 }
    }],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.TradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.TradeDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.TradeDate',
      'shortDisplayName': 'TradeDate',
      'name': 'TradeDate'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi',
      'version': '0.0.0',
      'content': 'import taxi.stdlib.Format\nimport demo.orderFeeds.TradeDate\nnamespace demo.orderFeeds.icap {\n   @Format("dd-MM-yyyy")\n   type IcapTradeDate inherits TradeDate\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi:0.0.0',
      'contentHash': '9f59d9'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.icap.IcapTradeDate',
    'isTypeAlias': false,
    'formatAndZoneOffset': { 'patterns': ['dd-MM-yyyy'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true },
    'offset': null,
    'format': ['dd-MM-yyyy'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.TradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.TradeDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.TradeDate',
      'shortDisplayName': 'TradeDate',
      'name': 'TradeDate'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.icap.IcapTradeDate',
    'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTradeDate',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapTradeDate',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapTradeDate',
      'shortDisplayName': 'IcapTradeDate',
      'name': 'IcapTradeDate'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.Order',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Order',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Order',
      'shortDisplayName': 'Order',
      'name': 'Order'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   model Order\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': 'a392e7'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.Order',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.Order',
    'fullyQualifiedName': 'demo.orderFeeds.Order',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.Order',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Order',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Order',
      'shortDisplayName': 'Order',
      'name': 'Order'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
      'shortDisplayName': 'IcapOrder',
      'name': 'IcapOrder'
    },
    'attributes': {
      'orderId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrderId',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrderId',
          'shortDisplayName': 'IcapOrderId',
          'name': 'IcapOrderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.icap.IcapOrderId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'cusip': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Cusip',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'isin': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Isin',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'traderId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
          'shortDisplayName': 'IcapTraderId',
          'name': 'IcapTraderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'timestamp': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.EventDateTime',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.EventDateTime',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.EventDateTime',
          'shortDisplayName': 'EventDateTime',
          'name': 'EventDateTime'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.EventDateTime',
        'metadata': [],
        'sourcedBy': null,
        'format': {
          'patterns': ['yyyy-MM-dd\'T\'HH:mm:ss[.SSS]X'],
          'utcZoneOffsetInMinutes': null,
          'definesPattern': true
        }
      },
      'tradeDate': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTradeDate',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapTradeDate',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapTradeDate',
          'shortDisplayName': 'IcapTradeDate',
          'name': 'IcapTradeDate'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.icap.IcapTradeDate',
        'metadata': [],
        'sourcedBy': null,
        'format': { 'patterns': ['dd-MM-yyyy'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true }
      },
      'status': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.OrderStatus',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.OrderStatus',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.OrderStatus',
          'shortDisplayName': 'OrderStatus',
          'name': 'OrderStatus'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.OrderStatus',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'orderType': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.OrderType',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.OrderType',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.OrderType',
          'shortDisplayName': 'OrderType',
          'name': 'OrderType'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.OrderType',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'currency': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Currency',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Currency',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Currency',
          'shortDisplayName': 'Currency',
          'name': 'Currency'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Currency',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'filledSize': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.FilledSize',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.FilledSize',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.FilledSize',
          'shortDisplayName': 'FilledSize',
          'name': 'FilledSize'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.FilledSize',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'remainingSize': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.RemainingSize',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.RemainingSize',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.RemainingSize',
          'shortDisplayName': 'RemainingSize',
          'name': 'RemainingSize'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.RemainingSize',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'totalSize': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.TotalSize',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.TotalSize',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.TotalSize',
          'shortDisplayName': 'TotalSize',
          'name': 'TotalSize'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.TotalSize',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.Order',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Order',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Order',
      'shortDisplayName': 'Order',
      'name': 'Order'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.Cusip\nimport demo.orderFeeds.Isin\nimport demo.orderFeeds.EventDateTime\nimport demo.orderFeeds.OrderStatus\nimport demo.orderFeeds.OrderType\nimport demo.orderFeeds.Currency\nimport demo.orderFeeds.FilledSize\nimport demo.orderFeeds.RemainingSize\nimport demo.orderFeeds.TotalSize\nimport demo.orderFeeds.Order\nnamespace demo.orderFeeds.icap {\n   model IcapOrder inherits Order {\n       orderId: IcapOrderId\n       cusip: Cusip\n       isin: Isin\n       traderId: IcapTraderId\n       timestamp: EventDateTime\n       tradeDate: IcapTradeDate\n       status: OrderStatus\n       orderType: OrderType\n       currency: Currency\n       filledSize: FilledSize\n       remainingSize: RemainingSize\n       totalSize: TotalSize by (this.filledSize + this.remainingSize) \n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi:0.0.0',
      'contentHash': '666f0b'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.icap.IcapOrder',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
    'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
      'shortDisplayName': 'IcapOrder',
      'name': 'IcapOrder'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.users.User',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.User',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.User',
      'shortDisplayName': 'User',
      'name': 'User'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.users {\n   model User\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi:0.0.0',
      'contentHash': 'e6d069'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.users.User',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.users.User',
    'fullyQualifiedName': 'demo.orderFeeds.users.User',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.User',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.User',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.User',
      'shortDisplayName': 'User',
      'name': 'User'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.BankTraderId',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
      'shortDisplayName': 'BankTraderId',
      'name': 'BankTraderId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.users.TraderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.TraderId',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.TraderId',
      'shortDisplayName': 'TraderId',
      'name': 'TraderId'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.users {\n   [[\n   Specific User ID assigned only to traders who are executing trades within the Bank.\n   ]]\n   type BankTraderId inherits TraderId\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi:0.0.0',
      'contentHash': 'a6ec1a'
    }],
    'typeParameters': [],
    'typeDoc': 'Specific User ID assigned only to traders who are executing trades within the Bank.',
    'paramaterizedName': 'demo.orderFeeds.users.BankTraderId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
    'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.BankTraderId',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
      'shortDisplayName': 'BankTraderId',
      'name': 'BankTraderId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.users.FirstName',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.FirstName',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.FirstName',
      'shortDisplayName': 'FirstName',
      'name': 'FirstName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.users {\n   [[\n   A given name (also known as a first name or forename) is the part of a personal name that identifies a person,\n   ]]\n   type FirstName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi:0.0.0',
      'contentHash': 'e8f2e5'
    }],
    'typeParameters': [],
    'typeDoc': 'A given name (also known as a first name or forename) is the part of a personal name that identifies a person,',
    'paramaterizedName': 'demo.orderFeeds.users.FirstName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.users.FirstName',
    'fullyQualifiedName': 'demo.orderFeeds.users.FirstName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.FirstName',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.FirstName',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.FirstName',
      'shortDisplayName': 'FirstName',
      'name': 'FirstName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.users.LastName',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.LastName',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.LastName',
      'shortDisplayName': 'LastName',
      'name': 'LastName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.users {\n   [[\n   In some cultures, a surname, family name, or last name is the portion of one\'s personal name that indicates one\'s family, tribe or community.\n   ]]\n   type LastName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi:0.0.0',
      'contentHash': 'd4d7fd'
    }],
    'typeParameters': [],
    'typeDoc': 'In some cultures, a surname, family name, or last name is the portion of one\'s personal name that indicates one\'s family, tribe or community.',
    'paramaterizedName': 'demo.orderFeeds.users.LastName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.users.LastName',
    'fullyQualifiedName': 'demo.orderFeeds.users.LastName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.LastName',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.LastName',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.LastName',
      'shortDisplayName': 'LastName',
      'name': 'LastName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.users.Desk',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.Desk',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.Desk',
      'shortDisplayName': 'Desk',
      'name': 'Desk'
    },
    'attributes': {},
    'modifiers': ['ENUM'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [{ 'name': 'Equities', 'value': 'Equities', 'synonyms': [], 'typeDoc': '' }, {
      'name': 'FixedIncome',
      'value': 'FixedIncome',
      'synonyms': [],
      'typeDoc': ''
    }, { 'name': 'Fx', 'value': 'Fx', 'synonyms': [], 'typeDoc': '' }, {
      'name': 'Commodities',
      'value': 'Commodities',
      'synonyms': [],
      'typeDoc': ''
    }],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.users {\n   enum Desk {\n       Equities,\n       FixedIncome,\n       Fx,\n       Commodities\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi:0.0.0',
      'contentHash': '0e97d7'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.users.Desk',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.users.Desk',
    'fullyQualifiedName': 'demo.orderFeeds.users.Desk',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.Desk',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.Desk',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.Desk',
      'shortDisplayName': 'Desk',
      'name': 'Desk'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.Trader',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.Trader',
      'shortDisplayName': 'Trader',
      'name': 'Trader'
    },
    'attributes': {
      'id': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.BankTraderId',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
          'shortDisplayName': 'BankTraderId',
          'name': 'BankTraderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.users.BankTraderId',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'Id',
            'parameters': [],
            'parameterizedName': 'Id',
            'namespace': '',
            'longDisplayName': 'Id',
            'shortDisplayName': 'Id',
            'name': 'Id'
          }, 'params': {}
        }],
        'sourcedBy': null,
        'format': null
      },
      'firstName': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.users.FirstName',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.FirstName',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.FirstName',
          'shortDisplayName': 'FirstName',
          'name': 'FirstName'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.users.FirstName',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'lastName': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.users.LastName',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.LastName',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.LastName',
          'shortDisplayName': 'LastName',
          'name': 'LastName'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.users.LastName',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'desk': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.users.Desk',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.Desk',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.Desk',
          'shortDisplayName': 'Desk',
          'name': 'Desk'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.users.Desk',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.users.User',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.User',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.User',
      'shortDisplayName': 'User',
      'name': 'User'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.users {\n   model Trader inherits User {\n       @Id\n       id: BankTraderId\n       firstName: FirstName\n       lastName: LastName\n       desk: Desk\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi:0.0.0',
      'contentHash': 'c78c77'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.users.Trader',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.users.Trader',
    'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.Trader',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.Trader',
      'shortDisplayName': 'Trader',
      'name': 'Trader'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'namespace': 'demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'shortDisplayName': 'InstrumentIdMapping',
      'name': 'InstrumentIdMapping'
    },
    'attributes': {
      'bankInstrumentId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.InstrumentId',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.InstrumentId',
          'shortDisplayName': 'InstrumentId',
          'name': 'InstrumentId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.InstrumentId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'cusip': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Cusip',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'Id',
            'parameters': [],
            'parameterizedName': 'Id',
            'namespace': '',
            'longDisplayName': 'Id',
            'shortDisplayName': 'Id',
            'name': 'Id'
          }, 'params': {}
        }],
        'sourcedBy': null,
        'format': null
      },
      'isin': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Isin',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'Id',
            'parameters': [],
            'parameterizedName': 'Id',
            'namespace': '',
            'longDisplayName': 'Id',
            'shortDisplayName': 'Id',
            'name': 'Id'
          }, 'params': {}
        }],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/instrument-id-mapping.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.InstrumentId\nimport demo.orderFeeds.Cusip\nimport demo.orderFeeds.Isin\nnamespace demo.orderFeeds.instrumentIdMappings {\n   model InstrumentIdMapping {\n       bankInstrumentId: InstrumentId by column("id")\n       @Id\n       cusip: Cusip by column("cusip")\n       @Id\n       isin: Isin  by column("isin")\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/instrument-id-mapping.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/instrument-id-mapping.taxi:0.0.0',
      'contentHash': 'ff588d'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
    'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'namespace': 'demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'shortDisplayName': 'InstrumentIdMapping',
      'name': 'InstrumentIdMapping'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
      'namespace': 'demo.orderFeeds.refinitiv',
      'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
      'shortDisplayName': 'RefinitivInstrumentId',
      'name': 'RefinitivInstrumentId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/refinitiv-market-data.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.refinitiv {\n   type RefinitivInstrumentId inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/refinitiv-market-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/refinitiv-market-data.taxi:0.0.0',
      'contentHash': '643ecd'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
    'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
      'namespace': 'demo.orderFeeds.refinitiv',
      'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
      'shortDisplayName': 'RefinitivInstrumentId',
      'name': 'RefinitivInstrumentId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.refinitiv.ReutersMaturityDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.refinitiv.ReutersMaturityDate',
      'namespace': 'demo.orderFeeds.refinitiv',
      'longDisplayName': 'demo.orderFeeds.refinitiv.ReutersMaturityDate',
      'shortDisplayName': 'ReutersMaturityDate',
      'name': 'ReutersMaturityDate'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/refinitiv-market-data.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.refinitiv {\n   [[\n   The maturity date of an Instrument, as provided by Reuters.\n   ]]\n   type ReutersMaturityDate inherits Date\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/refinitiv-market-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/refinitiv-market-data.taxi:0.0.0',
      'contentHash': 'c5be43'
    }],
    'typeParameters': [],
    'typeDoc': 'The maturity date of an Instrument, as provided by Reuters.',
    'paramaterizedName': 'demo.orderFeeds.refinitiv.ReutersMaturityDate',
    'isTypeAlias': false,
    'formatAndZoneOffset': { 'patterns': ['yyyy-MM-dd'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true },
    'offset': null,
    'format': ['yyyy-MM-dd'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.refinitiv.ReutersMaturityDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.refinitiv.ReutersMaturityDate',
      'namespace': 'demo.orderFeeds.refinitiv',
      'longDisplayName': 'demo.orderFeeds.refinitiv.ReutersMaturityDate',
      'shortDisplayName': 'ReutersMaturityDate',
      'name': 'ReutersMaturityDate'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.refinitiv.ReutersMaturityDate',
    'fullyQualifiedName': 'demo.orderFeeds.refinitiv.ReutersMaturityDate',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.refinitiv.ReutersMaturityDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.refinitiv.ReutersMaturityDate',
      'namespace': 'demo.orderFeeds.refinitiv',
      'longDisplayName': 'demo.orderFeeds.refinitiv.ReutersMaturityDate',
      'shortDisplayName': 'ReutersMaturityDate',
      'name': 'ReutersMaturityDate'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
      'namespace': 'demo.orderFeeds.refinitiv',
      'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
      'shortDisplayName': 'RefinitivInstrument',
      'name': 'RefinitivInstrument'
    },
    'attributes': {
      'id': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
          'namespace': 'demo.orderFeeds.refinitiv',
          'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
          'shortDisplayName': 'RefinitivInstrumentId',
          'name': 'RefinitivInstrumentId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrumentId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'assetClass': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.AssetClass',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.AssetClass',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.AssetClass',
          'shortDisplayName': 'AssetClass',
          'name': 'AssetClass'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.AssetClass',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/refinitiv-market-data.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.AssetClass\nnamespace demo.orderFeeds.refinitiv {\n   model RefinitivInstrument {\n       id: RefinitivInstrumentId\n       assetClass: AssetClass\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/refinitiv-market-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/refinitiv-market-data.taxi:0.0.0',
      'contentHash': '4ef363'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
    'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
      'namespace': 'demo.orderFeeds.refinitiv',
      'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
      'shortDisplayName': 'RefinitivInstrument',
      'name': 'RefinitivInstrument'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementPeriod',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.SettlementPeriod',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.SettlementPeriod',
      'shortDisplayName': 'SettlementPeriod',
      'name': 'SettlementPeriod'
    },
    'attributes': {},
    'modifiers': ['ENUM'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [{ 'name': 'TPlus1', 'value': 'TPlus1', 'synonyms': [], 'typeDoc': '' }, {
      'name': 'TPlus2',
      'value': 'TPlus2',
      'synonyms': [],
      'typeDoc': ''
    }],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.trading {\n   enum SettlementPeriod {\n       TPlus1,\n       TPlus2\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi:0.0.0',
      'contentHash': '12deb3'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.trading.SettlementPeriod',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.trading.SettlementPeriod',
    'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementPeriod',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementPeriod',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.SettlementPeriod',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.SettlementPeriod',
      'shortDisplayName': 'SettlementPeriod',
      'name': 'SettlementPeriod'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.TradeId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.TradeId',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.TradeId',
      'shortDisplayName': 'TradeId',
      'name': 'TradeId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.trading {\n   type TradeId inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi:0.0.0',
      'contentHash': 'dc5014'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.trading.TradeId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.trading.TradeId',
    'fullyQualifiedName': 'demo.orderFeeds.trading.TradeId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.TradeId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.TradeId',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.TradeId',
      'shortDisplayName': 'TradeId',
      'name': 'TradeId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.Notional',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.Notional',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.Notional',
      'shortDisplayName': 'Notional',
      'name': 'Notional'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.trading {\n   type Notional inherits Decimal\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi:0.0.0',
      'contentHash': '714e1a'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.trading.Notional',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.trading.Notional',
    'fullyQualifiedName': 'demo.orderFeeds.trading.Notional',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.Notional',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.Notional',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.Notional',
      'shortDisplayName': 'Notional',
      'name': 'Notional'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.CurrencyPair',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.CurrencyPair',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.CurrencyPair',
      'shortDisplayName': 'CurrencyPair',
      'name': 'CurrencyPair'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.trading {\n   type CurrencyPair inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi:0.0.0',
      'contentHash': '604c4d'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.trading.CurrencyPair',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.trading.CurrencyPair',
    'fullyQualifiedName': 'demo.orderFeeds.trading.CurrencyPair',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.CurrencyPair',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.CurrencyPair',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.CurrencyPair',
      'shortDisplayName': 'CurrencyPair',
      'name': 'CurrencyPair'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
      'shortDisplayName': 'SettlementDate',
      'name': 'SettlementDate'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.trading {\n   type SettlementDate inherits Date\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi:0.0.0',
      'contentHash': '88f680'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.trading.SettlementDate',
    'isTypeAlias': false,
    'formatAndZoneOffset': { 'patterns': ['yyyy-MM-dd'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true },
    'offset': null,
    'format': ['yyyy-MM-dd'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
      'shortDisplayName': 'SettlementDate',
      'name': 'SettlementDate'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
    'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
      'shortDisplayName': 'SettlementDate',
      'name': 'SettlementDate'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.Direction',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.Direction',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.Direction',
      'shortDisplayName': 'Direction',
      'name': 'Direction'
    },
    'attributes': {},
    'modifiers': ['ENUM'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [{ 'name': 'Buy', 'value': 'Buy', 'synonyms': [], 'typeDoc': '' }, {
      'name': 'Sell',
      'value': 'Sell',
      'synonyms': [],
      'typeDoc': ''
    }],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.trading {\n   enum Direction {\n       Buy,\n       Sell\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi:0.0.0',
      'contentHash': 'bd7498'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.trading.Direction',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.trading.Direction',
    'fullyQualifiedName': 'demo.orderFeeds.trading.Direction',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.Direction',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.Direction',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.Direction',
      'shortDisplayName': 'Direction',
      'name': 'Direction'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.Trade',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.Trade',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.Trade',
      'shortDisplayName': 'Trade',
      'name': 'Trade'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.trading {\n   model Trade\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi:0.0.0',
      'contentHash': '639d32'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.trading.Trade',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.trading.Trade',
    'fullyQualifiedName': 'demo.orderFeeds.trading.Trade',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.Trade',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.Trade',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.Trade',
      'shortDisplayName': 'Trade',
      'name': 'Trade'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.FxTrade',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.FxTrade',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.FxTrade',
      'shortDisplayName': 'FxTrade',
      'name': 'FxTrade'
    },
    'attributes': {
      'tradeId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.TradeId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.TradeId',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.TradeId',
          'shortDisplayName': 'TradeId',
          'name': 'TradeId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.trading.TradeId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'currency': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.CurrencyPair',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.CurrencyPair',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.CurrencyPair',
          'shortDisplayName': 'CurrencyPair',
          'name': 'CurrencyPair'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.trading.CurrencyPair',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'notional': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.Notional',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.Notional',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.Notional',
          'shortDisplayName': 'Notional',
          'name': 'Notional'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.trading.Notional',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'settlementDate': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
          'shortDisplayName': 'SettlementDate',
          'name': 'SettlementDate'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.trading.SettlementDate',
        'metadata': [],
        'sourcedBy': null,
        'format': { 'patterns': ['yyyy-MM-dd'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true }
      },
      'direction': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.Direction',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.Direction',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.Direction',
          'shortDisplayName': 'Direction',
          'name': 'Direction'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.trading.Direction',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.trading.Trade',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.Trade',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.Trade',
      'shortDisplayName': 'Trade',
      'name': 'Trade'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.trading {\n   model FxTrade inherits Trade {\n       tradeId: TradeId\n       currency: CurrencyPair\n       notional: Notional\n       settlementDate: SettlementDate\n       direction: Direction\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi:0.0.0',
      'contentHash': 'd0b699'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.trading.FxTrade',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.trading.FxTrade',
    'fullyQualifiedName': 'demo.orderFeeds.trading.FxTrade',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.FxTrade',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.FxTrade',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.FxTrade',
      'shortDisplayName': 'FxTrade',
      'name': 'FxTrade'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.BondTrade',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.BondTrade',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.BondTrade',
      'shortDisplayName': 'BondTrade',
      'name': 'BondTrade'
    },
    'attributes': {
      'tradeId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.TradeId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.TradeId',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.TradeId',
          'shortDisplayName': 'TradeId',
          'name': 'TradeId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.trading.TradeId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'currency': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Currency',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Currency',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Currency',
          'shortDisplayName': 'Currency',
          'name': 'Currency'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Currency',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'size': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.TotalSize',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.TotalSize',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.TotalSize',
          'shortDisplayName': 'TotalSize',
          'name': 'TotalSize'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.TotalSize',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'isin': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Isin',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'maturityDate': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.MaturityDate',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.MaturityDate',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.MaturityDate',
          'shortDisplayName': 'MaturityDate',
          'name': 'MaturityDate'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.MaturityDate',
        'metadata': [],
        'sourcedBy': null,
        'format': { 'patterns': ['yyyy-MM-dd'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true }
      },
      'direction': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.Direction',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.Direction',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.Direction',
          'shortDisplayName': 'Direction',
          'name': 'Direction'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.trading.Direction',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.trading.Trade',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.Trade',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.Trade',
      'shortDisplayName': 'Trade',
      'name': 'Trade'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.Currency\nimport demo.orderFeeds.TotalSize\nimport demo.orderFeeds.Isin\nimport demo.orderFeeds.MaturityDate\nnamespace demo.orderFeeds.trading {\n   model BondTrade inherits Trade {\n       tradeId: TradeId\n       currency: Currency\n       size: TotalSize\n       isin: Isin\n       maturityDate: MaturityDate\n       direction: Direction\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi:0.0.0',
      'contentHash': 'c88b89'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.trading.BondTrade',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.trading.BondTrade',
    'fullyQualifiedName': 'demo.orderFeeds.trading.BondTrade',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.BondTrade',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.BondTrade',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.BondTrade',
      'shortDisplayName': 'BondTrade',
      'name': 'BondTrade'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.AntiMoneyLaunderingReportOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.AntiMoneyLaunderingReportOrder',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.AntiMoneyLaunderingReportOrder',
      'shortDisplayName': 'AntiMoneyLaunderingReportOrder',
      'name': 'AntiMoneyLaunderingReportOrder'
    },
    'attributes': {
      'orderId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.OrderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.OrderId',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.OrderId',
          'shortDisplayName': 'OrderId',
          'name': 'OrderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.OrderId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'isin': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Isin',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'FirstNotEmpty',
            'parameters': [],
            'parameterizedName': 'FirstNotEmpty',
            'namespace': '',
            'longDisplayName': 'FirstNotEmpty',
            'shortDisplayName': 'FirstNotEmpty',
            'name': 'FirstNotEmpty'
          }, 'params': {}
        }],
        'sourcedBy': null,
        'format': null
      },
      'cusip': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Cusip',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'FirstNotEmpty',
            'parameters': [],
            'parameterizedName': 'FirstNotEmpty',
            'namespace': '',
            'longDisplayName': 'FirstNotEmpty',
            'shortDisplayName': 'FirstNotEmpty',
            'name': 'FirstNotEmpty'
          }, 'params': {}
        }],
        'sourcedBy': null,
        'format': null
      },
      'tradeDate': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.TradeDate',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.TradeDate',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.TradeDate',
          'shortDisplayName': 'TradeDate',
          'name': 'TradeDate'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.TradeDate',
        'metadata': [],
        'sourcedBy': null,
        'format': { 'patterns': ['yyyy-MM-dd'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true }
      },
      'assetClass': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.AssetClass',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.AssetClass',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.AssetClass',
          'shortDisplayName': 'AssetClass',
          'name': 'AssetClass'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.AssetClass',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'maturityDate': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.MaturityDate',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.MaturityDate',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.MaturityDate',
          'shortDisplayName': 'MaturityDate',
          'name': 'MaturityDate'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.MaturityDate',
        'metadata': [],
        'sourcedBy': null,
        'format': { 'patterns': ['yyyy-MM-dd'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true }
      },
      'traderId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.BankTraderId',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
          'shortDisplayName': 'BankTraderId',
          'name': 'BankTraderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.users.BankTraderId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'desk': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.users.Desk',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.Desk',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.Desk',
          'shortDisplayName': 'Desk',
          'name': 'Desk'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.users.Desk',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'lastName': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.users.LastName',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.LastName',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.LastName',
          'shortDisplayName': 'LastName',
          'name': 'LastName'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.users.LastName',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'remainingSize': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.RemainingSize',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.RemainingSize',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.RemainingSize',
          'shortDisplayName': 'RemainingSize',
          'name': 'RemainingSize'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.RemainingSize',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'filledSize': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.FilledSize',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.FilledSize',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.FilledSize',
          'shortDisplayName': 'FilledSize',
          'name': 'FilledSize'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.FilledSize',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'totalSize': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.TotalSize',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.TotalSize',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.TotalSize',
          'shortDisplayName': 'TotalSize',
          'name': 'TotalSize'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.TotalSize',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.users.BankTraderId\nimport demo.orderFeeds.users.Desk\nimport demo.orderFeeds.users.LastName\nnamespace demo.orderFeeds {\n   model AntiMoneyLaunderingReportOrder {\n       orderId: OrderId\n       @FirstNotEmpty\n       isin: Isin\n       @FirstNotEmpty\n       cusip: Cusip\n       tradeDate: TradeDate\n       assetClass: AssetClass\n       maturityDate: MaturityDate\n       traderId: BankTraderId\n       desk: Desk\n       lastName: LastName\n       remainingSize: RemainingSize\n       filledSize: FilledSize\n       totalSize: TotalSize\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': 'ea40c4'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.AntiMoneyLaunderingReportOrder',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.AntiMoneyLaunderingReportOrder',
    'fullyQualifiedName': 'demo.orderFeeds.AntiMoneyLaunderingReportOrder',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.AntiMoneyLaunderingReportOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.AntiMoneyLaunderingReportOrder',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.AntiMoneyLaunderingReportOrder',
      'shortDisplayName': 'AntiMoneyLaunderingReportOrder',
      'name': 'AntiMoneyLaunderingReportOrder'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.OrderType',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.OrderType',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.OrderType',
      'shortDisplayName': 'OrderType',
      'name': 'OrderType'
    },
    'attributes': {},
    'modifiers': ['ENUM'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [{ 'name': 'Market', 'value': 'Market', 'synonyms': [], 'typeDoc': '' }, {
      'name': 'Limit',
      'value': 'Limit',
      'synonyms': [],
      'typeDoc': ''
    }, { 'name': 'StopLimit', 'value': 'StopLimit', 'synonyms': [], 'typeDoc': '' }, {
      'name': 'Iceberg',
      'value': 'Iceberg',
      'synonyms': [],
      'typeDoc': ''
    }],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   [[\n       The way the order is going to executed on the exchange.\n   ]]\n   enum OrderType {\n       Market,\n       Limit,\n       StopLimit,\n       Iceberg\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '4c2a54'
    }],
    'typeParameters': [],
    'typeDoc': 'The way the order is going to executed on the exchange.',
    'paramaterizedName': 'demo.orderFeeds.OrderType',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.OrderType',
    'fullyQualifiedName': 'demo.orderFeeds.OrderType',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.OrderType',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.OrderType',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.OrderType',
      'shortDisplayName': 'OrderType',
      'name': 'OrderType'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.OrderStatus',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.OrderStatus',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.OrderStatus',
      'shortDisplayName': 'OrderStatus',
      'name': 'OrderStatus'
    },
    'attributes': {},
    'modifiers': ['ENUM'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [{ 'name': 'New', 'value': 'New', 'synonyms': [], 'typeDoc': '' }, {
      'name': 'PartiallyFilled',
      'value': 'PartiallyFilled',
      'synonyms': [],
      'typeDoc': ''
    }, { 'name': 'Filled', 'value': 'Filled', 'synonyms': [], 'typeDoc': '' }, {
      'name': 'Cancelled',
      'value': 'Cancelled',
      'synonyms': [],
      'typeDoc': ''
    }, { 'name': 'Expired', 'value': 'Expired', 'synonyms': [], 'typeDoc': '' }],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   [[\n   The current status of the order that has been placed.\n   ]]\n   enum OrderStatus {\n       New,\n       PartiallyFilled,\n       Filled,\n       Cancelled,\n       Expired\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': 'd5b326'
    }],
    'typeParameters': [],
    'typeDoc': 'The current status of the order that has been placed.',
    'paramaterizedName': 'demo.orderFeeds.OrderStatus',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.OrderStatus',
    'fullyQualifiedName': 'demo.orderFeeds.OrderStatus',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.OrderStatus',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.OrderStatus',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.OrderStatus',
      'shortDisplayName': 'OrderStatus',
      'name': 'OrderStatus'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.BbgAssetClass',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.BbgAssetClass',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.BbgAssetClass',
      'shortDisplayName': 'BbgAssetClass',
      'name': 'BbgAssetClass'
    },
    'attributes': {},
    'modifiers': ['ENUM'],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [{
      'name': 'Forex',
      'value': 'Forex',
      'synonyms': ['demo.orderFeeds.AssetClass.Fx'],
      'typeDoc': ''
    }, {
      'name': 'FixedIncome',
      'value': 'FixedIncome',
      'synonyms': ['demo.orderFeeds.AssetClass.Bonds'],
      'typeDoc': ''
    }, { 'name': 'Shares', 'value': 'Shares', 'synonyms': ['demo.orderFeeds.AssetClass.Equities'], 'typeDoc': '' }],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   enum BbgAssetClass {\n       Forex synonym of AssetClass.Fx,\n       FixedIncome synonym of AssetClass.Bonds,\n       Shares synonym of AssetClass.Equities\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '9ed8f5'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.BbgAssetClass',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.BbgAssetClass',
    'fullyQualifiedName': 'demo.orderFeeds.BbgAssetClass',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.BbgAssetClass',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.BbgAssetClass',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.BbgAssetClass',
      'shortDisplayName': 'BbgAssetClass',
      'name': 'BbgAssetClass'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.AssetClass',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.AssetClass',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.AssetClass',
      'shortDisplayName': 'AssetClass',
      'name': 'AssetClass'
    },
    'attributes': {},
    'modifiers': ['ENUM'],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'io.vyne.catalog.DataOwner',
        'parameters': [],
        'parameterizedName': 'io.vyne.catalog.DataOwner',
        'namespace': 'io.vyne.catalog',
        'longDisplayName': 'io.vyne.catalog.DataOwner',
        'shortDisplayName': 'DataOwner',
        'name': 'DataOwner'
      }, 'params': { 'id': 'userId1', 'name': 'Serhat Tuncay' }
    }, {
      'name': {
        'fullyQualifiedName': 'CDE',
        'parameters': [],
        'parameterizedName': 'CDE',
        'namespace': '',
        'longDisplayName': 'CDE',
        'shortDisplayName': 'CDE',
        'name': 'CDE'
      }, 'params': {}
    }, {
      'name': {
        'fullyQualifiedName': 'ApprovedDataSource',
        'parameters': [],
        'parameterizedName': 'ApprovedDataSource',
        'namespace': '',
        'longDisplayName': 'ApprovedDataSource',
        'shortDisplayName': 'ApprovedDataSource',
        'name': 'ApprovedDataSource'
      }, 'params': {}
    }, {
      'name': {
        'fullyQualifiedName': 'io.vyne.catalog.DataOwner',
        'parameters': [],
        'parameterizedName': 'io.vyne.catalog.DataOwner',
        'namespace': 'io.vyne.catalog',
        'longDisplayName': 'io.vyne.catalog.DataOwner',
        'shortDisplayName': 'DataOwner',
        'name': 'DataOwner'
      }, 'params': { 'id': 'userId1', 'name': 'Serhat Tuncay' }
    }, {
      'name': {
        'fullyQualifiedName': 'CDE',
        'parameters': [],
        'parameterizedName': 'CDE',
        'namespace': '',
        'longDisplayName': 'CDE',
        'shortDisplayName': 'CDE',
        'name': 'CDE'
      }, 'params': {}
    }],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [{
      'name': 'Fx',
      'value': 'Fx',
      'synonyms': ['demo.orderFeeds.BbgAssetClass.Forex'],
      'typeDoc': 'Forex is the abbreviation for foreign exchange – the market in which one currency is converted into another. The forex market can also be referred to as the FX market or currency market.'
    }, {
      'name': 'Bonds',
      'value': 'Bonds',
      'synonyms': ['demo.orderFeeds.BbgAssetClass.FixedIncome'],
      'typeDoc': 'Fixed income assets are investments that pay interest over time and then return the original sum paid. Bonds are the most common type of fixed income asset'
    }, {
      'name': 'Equities',
      'value': 'Equities',
      'synonyms': ['demo.orderFeeds.BbgAssetClass.Shares'],
      'typeDoc': 'Equities, also known as stocks, are the shares that make up the ownership of public companies. Within this asset class, there is further variation between large-cap, mid-cap and small-cap stocks'
    }],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/demo/orderFeeds/AssetClass.annotations.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   @com.orbitalhq.catalog.DataOwner(id = "userId1", name = "Serhat Tuncay")\n   @CDE\n   @ApprovedDataSource\n   enum extension AssetClass {}\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/demo/orderFeeds/AssetClass.annotations.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/demo/orderFeeds/AssetClass.annotations.taxi:0.0.0',
      'contentHash': 'fe09d9'
    }, {
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   Forex synonym of AssetClass.Fx\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': 'f76fa0'
    }, {
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   FixedIncome synonym of AssetClass.Bonds\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '1bc91e'
    }, {
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   Shares synonym of AssetClass.Equities\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': 'c0a5d5'
    }, {
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   [[\n   An asset class is a grouping of investments that exhibit similar characteristics and are subject to the same laws and regulations. Asset classes are thus made up of instruments that often behave similarly to one another in the marketplace.\n   ]]\n   @com.orbitalhq.catalog.DataOwner( id = "userId1" , name = "Serhat Tuncay" )\n   @CDE\n   enum AssetClass {\n       [[ Forex is the abbreviation for foreign exchange – the market in which one currency is converted into another. The forex market can also be referred to as the FX market or currency market. ]]\n       Fx,\n       [[ Fixed income assets are investments that pay interest over time and then return the original sum paid. Bonds are the most common type of fixed income asset ]]\n       Bonds,\n       [[ Equities, also known as stocks, are the shares that make up the ownership of public companies. Within this asset class, there is further variation between large-cap, mid-cap and small-cap stocks ]]\n       Equities\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': 'a8d4a6'
    }],
    'typeParameters': [],
    'typeDoc': 'An asset class is a grouping of investments that exhibit similar characteristics and are subject to the same laws and regulations. Asset classes are thus made up of instruments that often behave similarly to one another in the marketplace.',
    'paramaterizedName': 'demo.orderFeeds.AssetClass',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.AssetClass',
    'fullyQualifiedName': 'demo.orderFeeds.AssetClass',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.AssetClass',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.AssetClass',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.AssetClass',
      'shortDisplayName': 'AssetClass',
      'name': 'AssetClass'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.MaturityDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.MaturityDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.MaturityDate',
      'shortDisplayName': 'MaturityDate',
      'name': 'MaturityDate'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   [[\n   The date when this product will reach maturity.\n   ]]\n   type MaturityDate inherits Date\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': 'fc0350'
    }],
    'typeParameters': [],
    'typeDoc': 'The date when this product will reach maturity.',
    'paramaterizedName': 'demo.orderFeeds.MaturityDate',
    'isTypeAlias': false,
    'formatAndZoneOffset': { 'patterns': ['yyyy-MM-dd'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true },
    'offset': null,
    'format': ['yyyy-MM-dd'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.MaturityDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.MaturityDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.MaturityDate',
      'shortDisplayName': 'MaturityDate',
      'name': 'MaturityDate'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.MaturityDate',
    'fullyQualifiedName': 'demo.orderFeeds.MaturityDate',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.MaturityDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.MaturityDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.MaturityDate',
      'shortDisplayName': 'MaturityDate',
      'name': 'MaturityDate'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.Isin',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Isin',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Isin',
      'shortDisplayName': 'Isin',
      'name': 'Isin'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'io.vyne.catalog.DataOwner',
        'parameters': [],
        'parameterizedName': 'io.vyne.catalog.DataOwner',
        'namespace': 'io.vyne.catalog',
        'longDisplayName': 'io.vyne.catalog.DataOwner',
        'shortDisplayName': 'DataOwner',
        'name': 'DataOwner'
      }, 'params': { 'id': 'userId1', 'name': 'Marty Pitt' }
    }, {
      'name': {
        'fullyQualifiedName': 'CDE',
        'parameters': [],
        'parameterizedName': 'CDE',
        'namespace': '',
        'longDisplayName': 'CDE',
        'shortDisplayName': 'CDE',
        'name': 'CDE'
      }, 'params': {}
    }],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'import io.vyne.catalog.DataOwner\nnamespace demo.orderFeeds {\n   [[\n   An International Securities Identification Number (ISIN) is a 12-digit alphanumeric code that uniquely identifies a specific security. The organization that allocates ISINs in any particular country is the country\'s respective National Numbering Agency (NNA).\n   ]]\n   @com.orbitalhq.catalog.DataOwner( id = "userId1" , name = "Marty Pitt" )\n   @CDE\n   type Isin inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': 'd42bf4'
    }],
    'typeParameters': [],
    'typeDoc': 'An International Securities Identification Number (ISIN) is a 12-digit alphanumeric code that uniquely identifies a specific security. The organization that allocates ISINs in any particular country is the country\'s respective National Numbering Agency (NNA).',
    'paramaterizedName': 'demo.orderFeeds.Isin',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.Isin',
    'fullyQualifiedName': 'demo.orderFeeds.Isin',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.Isin',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Isin',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Isin',
      'shortDisplayName': 'Isin',
      'name': 'Isin'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.Cusip',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Cusip',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Cusip',
      'shortDisplayName': 'Cusip',
      'name': 'Cusip'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   [[\n   CUSIP refers to the Committee on Uniform Securities Identification Procedures which oversees the entire CUSIP system. The CUSIP number is a unique identification number assigned to all stocks and registered bonds in the United States and Canada, and it is used to create a concrete distinction between securities that are traded on public markets.\n   ]]\n   type Cusip inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '83bb44'
    }],
    'typeParameters': [],
    'typeDoc': 'CUSIP refers to the Committee on Uniform Securities Identification Procedures which oversees the entire CUSIP system. The CUSIP number is a unique identification number assigned to all stocks and registered bonds in the United States and Canada, and it is used to create a concrete distinction between securities that are traded on public markets.',
    'paramaterizedName': 'demo.orderFeeds.Cusip',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.Cusip',
    'fullyQualifiedName': 'demo.orderFeeds.Cusip',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.Cusip',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Cusip',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Cusip',
      'shortDisplayName': 'Cusip',
      'name': 'Cusip'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.InstrumentId',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.InstrumentId',
      'shortDisplayName': 'InstrumentId',
      'name': 'InstrumentId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   [[\n   The unique ID assigned to an instrument within the bank.\n   ]]\n   type InstrumentId inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '3fd399'
    }],
    'typeParameters': [],
    'typeDoc': 'The unique ID assigned to an instrument within the bank.',
    'paramaterizedName': 'demo.orderFeeds.InstrumentId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.InstrumentId',
    'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.InstrumentId',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.InstrumentId',
      'shortDisplayName': 'InstrumentId',
      'name': 'InstrumentId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.Lei',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Lei',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Lei',
      'shortDisplayName': 'Lei',
      'name': 'Lei'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   type Lei inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '0fe174'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.Lei',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.Lei',
    'fullyQualifiedName': 'demo.orderFeeds.Lei',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.Lei',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Lei',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Lei',
      'shortDisplayName': 'Lei',
      'name': 'Lei'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.CounterpartyLei',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.CounterpartyLei',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.CounterpartyLei',
      'shortDisplayName': 'CounterpartyLei',
      'name': 'CounterpartyLei'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.Lei',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Lei',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Lei',
      'shortDisplayName': 'Lei',
      'name': 'Lei'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   type CounterpartyLei inherits Lei\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '9af164'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.CounterpartyLei',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.CounterpartyLei',
    'fullyQualifiedName': 'demo.orderFeeds.CounterpartyLei',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.CounterpartyLei',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.CounterpartyLei',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.CounterpartyLei',
      'shortDisplayName': 'CounterpartyLei',
      'name': 'CounterpartyLei'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.EventDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.EventDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.EventDate',
      'shortDisplayName': 'EventDate',
      'name': 'EventDate'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   type EventDate inherits Date\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '414f58'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.EventDate',
    'isTypeAlias': false,
    'formatAndZoneOffset': { 'patterns': ['yyyy-MM-dd'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true },
    'offset': null,
    'format': ['yyyy-MM-dd'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.EventDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.EventDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.EventDate',
      'shortDisplayName': 'EventDate',
      'name': 'EventDate'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.EventDate',
    'fullyQualifiedName': 'demo.orderFeeds.EventDate',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.EventDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.EventDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.EventDate',
      'shortDisplayName': 'EventDate',
      'name': 'EventDate'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.EventTime',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.EventTime',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.EventTime',
      'shortDisplayName': 'EventTime',
      'name': 'EventTime'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Time',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Time',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Time',
      'shortDisplayName': 'Time',
      'name': 'Time'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   type EventTime inherits Time\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '7751ef'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.EventTime',
    'isTypeAlias': false,
    'formatAndZoneOffset': { 'patterns': ['HH:mm:ss'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true },
    'offset': null,
    'format': ['HH:mm:ss'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Time',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Time',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Time',
      'shortDisplayName': 'Time',
      'name': 'Time'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.EventTime',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.EventTime',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.EventTime',
      'shortDisplayName': 'EventTime',
      'name': 'EventTime'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.EventTime',
    'fullyQualifiedName': 'demo.orderFeeds.EventTime',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.EventTime',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.EventTime',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.EventTime',
      'shortDisplayName': 'EventTime',
      'name': 'EventTime'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.EventDateTime',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.EventDateTime',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.EventDateTime',
      'shortDisplayName': 'EventDateTime',
      'name': 'EventDateTime'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Instant',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Instant',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Instant',
      'shortDisplayName': 'Instant',
      'name': 'Instant'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   type EventDateTime inherits Instant\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '644ce5'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.EventDateTime',
    'isTypeAlias': false,
    'formatAndZoneOffset': {
      'patterns': ['yyyy-MM-dd\'T\'HH:mm:ss[.SSS]X'],
      'utcZoneOffsetInMinutes': null,
      'definesPattern': true
    },
    'offset': null,
    'format': ['yyyy-MM-dd\'T\'HH:mm:ss[.SSS]X'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Instant',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Instant',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Instant',
      'shortDisplayName': 'Instant',
      'name': 'Instant'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.EventDateTime',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.EventDateTime',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.EventDateTime',
      'shortDisplayName': 'EventDateTime',
      'name': 'EventDateTime'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.EventDateTime',
    'fullyQualifiedName': 'demo.orderFeeds.EventDateTime',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.EventDateTime',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.EventDateTime',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.EventDateTime',
      'shortDisplayName': 'EventDateTime',
      'name': 'EventDateTime'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.TotalSize',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.TotalSize',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.TotalSize',
      'shortDisplayName': 'TotalSize',
      'name': 'TotalSize'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   [[\n   The total size of the order placed.\n   ]]\n   type TotalSize inherits Decimal\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '50f001'
    }],
    'typeParameters': [],
    'typeDoc': 'The total size of the order placed.',
    'paramaterizedName': 'demo.orderFeeds.TotalSize',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.TotalSize',
    'fullyQualifiedName': 'demo.orderFeeds.TotalSize',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.TotalSize',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.TotalSize',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.TotalSize',
      'shortDisplayName': 'TotalSize',
      'name': 'TotalSize'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.FilledSize',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.FilledSize',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.FilledSize',
      'shortDisplayName': 'FilledSize',
      'name': 'FilledSize'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   [[\n   The amount of the order which has been filled to date.\n   ]]\n   type FilledSize inherits Decimal\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '90cb35'
    }],
    'typeParameters': [],
    'typeDoc': 'The amount of the order which has been filled to date.',
    'paramaterizedName': 'demo.orderFeeds.FilledSize',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.FilledSize',
    'fullyQualifiedName': 'demo.orderFeeds.FilledSize',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.FilledSize',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.FilledSize',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.FilledSize',
      'shortDisplayName': 'FilledSize',
      'name': 'FilledSize'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.RemainingSize',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.RemainingSize',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.RemainingSize',
      'shortDisplayName': 'RemainingSize',
      'name': 'RemainingSize'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   [[\n   The amount of the order left to be filled\n   ]]\n   type RemainingSize inherits Decimal\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': '60cbb5'
    }],
    'typeParameters': [],
    'typeDoc': 'The amount of the order left to be filled',
    'paramaterizedName': 'demo.orderFeeds.RemainingSize',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.RemainingSize',
    'fullyQualifiedName': 'demo.orderFeeds.RemainingSize',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.RemainingSize',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.RemainingSize',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.RemainingSize',
      'shortDisplayName': 'RemainingSize',
      'name': 'RemainingSize'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.Currency',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Currency',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Currency',
      'shortDisplayName': 'Currency',
      'name': 'Currency'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds {\n   [[\n   The currency in which this order will exchange.\n   ]]\n   type Currency inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/order.taxi:0.0.0',
      'contentHash': 'c639ef'
    }],
    'typeParameters': [],
    'typeDoc': 'The currency in which this order will exchange.',
    'paramaterizedName': 'demo.orderFeeds.Currency',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.Currency',
    'fullyQualifiedName': 'demo.orderFeeds.Currency',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.Currency',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Currency',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Currency',
      'shortDisplayName': 'Currency',
      'name': 'Currency'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
      'shortDisplayName': 'BloombergTraderId',
      'name': 'BloombergTraderId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.users.TraderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.TraderId',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.TraderId',
      'shortDisplayName': 'TraderId',
      'name': 'TraderId'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.users.TraderId\nnamespace demo.orderFeeds.bloomberg {\n   [[\n   ID of traders when they\'re placing orders via BBG.\n   ]]\n   type BloombergTraderId inherits TraderId\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi:0.0.0',
      'contentHash': '454469'
    }],
    'typeParameters': [],
    'typeDoc': 'ID of traders when they\'re placing orders via BBG.',
    'paramaterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
    'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
      'shortDisplayName': 'BloombergTraderId',
      'name': 'BloombergTraderId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
      'shortDisplayName': 'BloombergOrderId',
      'name': 'BloombergOrderId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.OrderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.OrderId',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.OrderId',
      'shortDisplayName': 'OrderId',
      'name': 'OrderId'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.OrderId\nnamespace demo.orderFeeds.bloomberg {\n   [[\n   ID of orders which are received via the Bloomberg feed.\n   ]]\n   type BloombergOrderId inherits OrderId\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi:0.0.0',
      'contentHash': '2a7081'
    }],
    'typeParameters': [],
    'typeDoc': 'ID of orders which are received via the Bloomberg feed.',
    'paramaterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
    'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
      'shortDisplayName': 'BloombergOrderId',
      'name': 'BloombergOrderId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
      'shortDisplayName': 'BloombergTotalSize',
      'name': 'BloombergTotalSize'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.TotalSize',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.TotalSize',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.TotalSize',
      'shortDisplayName': 'TotalSize',
      'name': 'TotalSize'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.TotalSize\nnamespace demo.orderFeeds.bloomberg {\n   type BloombergTotalSize inherits TotalSize\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi:0.0.0',
      'contentHash': '7bdf66'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
    'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
      'shortDisplayName': 'BloombergTotalSize',
      'name': 'BloombergTotalSize'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BbgTotalSize',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BbgTotalSize',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BbgTotalSize',
      'shortDisplayName': 'BbgTotalSize',
      'name': 'BbgTotalSize'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
      'shortDisplayName': 'BloombergTotalSize',
      'name': 'BloombergTotalSize'
    },
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.bloomberg {\n   type alias BbgTotalSize as BloombergTotalSize\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi:0.0.0',
      'contentHash': 'e5fd5d'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.bloomberg.BbgTotalSize',
    'isTypeAlias': true,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Decimal',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Decimal',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Decimal',
      'shortDisplayName': 'Decimal',
      'name': 'Decimal'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.bloomberg.BbgTotalSize',
    'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BbgTotalSize',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BbgTotalSize',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BbgTotalSize',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BbgTotalSize',
      'shortDisplayName': 'BbgTotalSize',
      'name': 'BbgTotalSize'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
      'shortDisplayName': 'BloombergTradeDate',
      'name': 'BloombergTradeDate'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'taxi.stdlib.Format',
        'parameters': [],
        'parameterizedName': 'taxi.stdlib.Format',
        'namespace': 'taxi.stdlib',
        'longDisplayName': 'taxi.stdlib.Format',
        'shortDisplayName': 'Format',
        'name': 'Format'
      }, 'params': { 'value': 'dd-MMM-yy', 'offset': 0 }
    }],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.TradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.TradeDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.TradeDate',
      'shortDisplayName': 'TradeDate',
      'name': 'TradeDate'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'version': '0.0.0',
      'content': 'import taxi.stdlib.Format\nimport demo.orderFeeds.TradeDate\nnamespace demo.orderFeeds.bloomberg {\n   @Format("dd-MMM-yy")\n   type BloombergTradeDate inherits TradeDate\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi:0.0.0',
      'contentHash': '2df52d'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
    'isTypeAlias': false,
    'formatAndZoneOffset': { 'patterns': ['dd-MMM-yy'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true },
    'offset': null,
    'format': ['dd-MMM-yy'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Date',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Date',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Date',
      'shortDisplayName': 'Date',
      'name': 'Date'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.TradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.TradeDate',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.TradeDate',
      'shortDisplayName': 'TradeDate',
      'name': 'TradeDate'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
    'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
      'shortDisplayName': 'BloombergTradeDate',
      'name': 'BloombergTradeDate'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
      'shortDisplayName': 'BloombergOrder',
      'name': 'BloombergOrder'
    },
    'attributes': {
      'orderId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'shortDisplayName': 'BloombergOrderId',
          'name': 'BloombergOrderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'cusip': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Cusip',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'isin': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Isin',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'tradeDate': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
          'shortDisplayName': 'BloombergTradeDate',
          'name': 'BloombergTradeDate'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.bloomberg.BloombergTradeDate',
        'metadata': [],
        'sourcedBy': null,
        'format': { 'patterns': ['dd-MMM-yy'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true }
      },
      'trader': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'shortDisplayName': 'BloombergTraderId',
          'name': 'BloombergTraderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'totalSize': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
          'shortDisplayName': 'BloombergTotalSize',
          'name': 'BloombergTotalSize'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.bloomberg.BloombergTotalSize',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'remainingSize': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.RemainingSize',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.RemainingSize',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.RemainingSize',
          'shortDisplayName': 'RemainingSize',
          'name': 'RemainingSize'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.RemainingSize',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'filledSize': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.FilledSize',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.FilledSize',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.FilledSize',
          'shortDisplayName': 'FilledSize',
          'name': 'FilledSize'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.FilledSize',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'ApprovedDataSource',
        'parameters': [],
        'parameterizedName': 'ApprovedDataSource',
        'namespace': '',
        'longDisplayName': 'ApprovedDataSource',
        'shortDisplayName': 'ApprovedDataSource',
        'name': 'ApprovedDataSource'
      }, 'params': {}
    }],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.Order',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.Order',
      'namespace': 'demo.orderFeeds',
      'longDisplayName': 'demo.orderFeeds.Order',
      'shortDisplayName': 'Order',
      'name': 'Order'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.Cusip\nimport demo.orderFeeds.Isin\nimport demo.orderFeeds.RemainingSize\nimport demo.orderFeeds.FilledSize\nimport demo.orderFeeds.Order\nnamespace demo.orderFeeds.bloomberg {\n   @ApprovedDataSource\n   model BloombergOrder inherits Order {\n       orderId: BloombergOrderId\n       cusip: Cusip\n       isin: Isin\n       tradeDate: BloombergTradeDate\n       trader: BloombergTraderId\n       totalSize: BloombergTotalSize\n       remainingSize: RemainingSize\n       filledSize: FilledSize by (this.totalSize - this.remainingSize)\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi:0.0.0',
      'contentHash': '17ad4e'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
    'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
      'shortDisplayName': 'BloombergOrder',
      'name': 'BloombergOrder'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
      'namespace': 'demo.orderFeeds.instrument',
      'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
      'shortDisplayName': 'Instrument',
      'name': 'Instrument'
    },
    'attributes': {
      'id': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.InstrumentId',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.InstrumentId',
          'shortDisplayName': 'InstrumentId',
          'name': 'InstrumentId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.InstrumentId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'assetClass': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.AssetClass',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.AssetClass',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.AssetClass',
          'shortDisplayName': 'AssetClass',
          'name': 'AssetClass'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.AssetClass',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'maturityDate': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.MaturityDate',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.MaturityDate',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.MaturityDate',
          'shortDisplayName': 'MaturityDate',
          'name': 'MaturityDate'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.MaturityDate',
        'metadata': [],
        'sourcedBy': null,
        'format': { 'patterns': ['yyyy-MM-dd'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true }
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/instrument.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.InstrumentId\nimport demo.orderFeeds.AssetClass\nimport demo.orderFeeds.MaturityDate\nnamespace demo.orderFeeds.instrument {\n   model Instrument {\n       id: InstrumentId\n       assetClass: AssetClass\n       maturityDate: MaturityDate\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/instrument.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/instrument.taxi:0.0.0',
      'contentHash': 'da7e21'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.instrument.Instrument',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
    'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
      'namespace': 'demo.orderFeeds.instrument',
      'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
      'shortDisplayName': 'Instrument',
      'name': 'Instrument'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'namespace': 'demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'shortDisplayName': 'TraderIdMappings',
      'name': 'TraderIdMappings'
    },
    'attributes': {
      'bankTraderId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.BankTraderId',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
          'shortDisplayName': 'BankTraderId',
          'name': 'BankTraderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.users.BankTraderId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'bloombergId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'shortDisplayName': 'BloombergTraderId',
          'name': 'BloombergTraderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'Id',
            'parameters': [],
            'parameterizedName': 'Id',
            'namespace': '',
            'longDisplayName': 'Id',
            'shortDisplayName': 'Id',
            'name': 'Id'
          }, 'params': {}
        }],
        'sourcedBy': null,
        'format': null
      },
      'icapId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
          'shortDisplayName': 'IcapTraderId',
          'name': 'IcapTraderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'Id',
            'parameters': [],
            'parameterizedName': 'Id',
            'namespace': '',
            'longDisplayName': 'Id',
            'shortDisplayName': 'Id',
            'name': 'Id'
          }, 'params': {}
        }],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trader-id-mapping.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.users.BankTraderId\nimport demo.orderFeeds.bloomberg.BloombergTraderId\nimport demo.orderFeeds.icap.IcapTraderId\nnamespace demo.orderFeeds.traderIdMappings {\n   model TraderIdMappings {\n       bankTraderId: BankTraderId by column("bankTraderId")\n       @Id\n       bloombergId: BloombergTraderId by column("bloombergId")\n       @Id\n       icapId: IcapTraderId by column("icapId")\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trader-id-mapping.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trader-id-mapping.taxi:0.0.0',
      'contentHash': '341a7e'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
    'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'namespace': 'demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'shortDisplayName': 'TraderIdMappings',
      'name': 'TraderIdMappings'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
      'namespace': 'demo.orderFeeds.reuters',
      'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
      'shortDisplayName': 'ReutersInstrumentId',
      'name': 'ReutersInstrumentId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/reuters-market-data.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.reuters {\n   type ReutersInstrumentId inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/reuters-market-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/reuters-market-data.taxi:0.0.0',
      'contentHash': 'eaf55b'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
    'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
      'namespace': 'demo.orderFeeds.reuters',
      'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
      'shortDisplayName': 'ReutersInstrumentId',
      'name': 'ReutersInstrumentId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrument',
      'namespace': 'demo.orderFeeds.reuters',
      'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument',
      'shortDisplayName': 'ReutersInstrument',
      'name': 'ReutersInstrument'
    },
    'attributes': {
      'id': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
          'namespace': 'demo.orderFeeds.reuters',
          'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
          'shortDisplayName': 'ReutersInstrumentId',
          'name': 'ReutersInstrumentId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.reuters.ReutersInstrumentId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'assetClass': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.AssetClass',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.AssetClass',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.AssetClass',
          'shortDisplayName': 'AssetClass',
          'name': 'AssetClass'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.AssetClass',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'maturityDate': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.MaturityDate',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.MaturityDate',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.MaturityDate',
          'shortDisplayName': 'MaturityDate',
          'name': 'MaturityDate'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.MaturityDate',
        'metadata': [],
        'sourcedBy': null,
        'format': { 'patterns': ['yyyy-MM-dd'], 'utcZoneOffsetInMinutes': null, 'definesPattern': true }
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/reuters-market-data.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.AssetClass\nimport demo.orderFeeds.MaturityDate\nnamespace demo.orderFeeds.reuters {\n   model ReutersInstrument {\n       id: ReutersInstrumentId\n       assetClass: AssetClass\n       maturityDate: MaturityDate\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/reuters-market-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/reuters-market-data.taxi:0.0.0',
      'contentHash': 'cb3345'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.reuters.ReutersInstrument',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument',
    'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrument',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrument',
      'namespace': 'demo.orderFeeds.reuters',
      'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument',
      'shortDisplayName': 'ReutersInstrument',
      'name': 'ReutersInstrument'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.BankClientId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.BankClientId',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.BankClientId',
      'shortDisplayName': 'BankClientId',
      'name': 'BankClientId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.clients {\n   type BankClientId inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi:0.0.0',
      'contentHash': '5492b8'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.clients.BankClientId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.clients.BankClientId',
    'fullyQualifiedName': 'demo.orderFeeds.clients.BankClientId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.BankClientId',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.BankClientId',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.BankClientId',
      'shortDisplayName': 'BankClientId',
      'name': 'BankClientId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.CompanyName',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.CompanyName',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.CompanyName',
      'shortDisplayName': 'CompanyName',
      'name': 'CompanyName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.clients {\n   type CompanyName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi:0.0.0',
      'contentHash': 'fea6bd'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.clients.CompanyName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.clients.CompanyName',
    'fullyQualifiedName': 'demo.orderFeeds.clients.CompanyName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.CompanyName',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.CompanyName',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.CompanyName',
      'shortDisplayName': 'CompanyName',
      'name': 'CompanyName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.CompanyCountry',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.CompanyCountry',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.CompanyCountry',
      'shortDisplayName': 'CompanyCountry',
      'name': 'CompanyCountry'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.clients {\n   type CompanyCountry inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi:0.0.0',
      'contentHash': '35582b'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.clients.CompanyCountry',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.clients.CompanyCountry',
    'fullyQualifiedName': 'demo.orderFeeds.clients.CompanyCountry',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.CompanyCountry',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.CompanyCountry',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.CompanyCountry',
      'shortDisplayName': 'CompanyCountry',
      'name': 'CompanyCountry'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
      'shortDisplayName': 'LegalEntityIdentifier',
      'name': 'LegalEntityIdentifier'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.clients {\n   type LegalEntityIdentifier inherits String\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi:0.0.0',
      'contentHash': 'b998e5'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
    'fullyQualifiedName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
      'shortDisplayName': 'LegalEntityIdentifier',
      'name': 'LegalEntityIdentifier'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.Client',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.Client',
      'shortDisplayName': 'Client',
      'name': 'Client'
    },
    'attributes': {
      'bankClientId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.clients.BankClientId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.BankClientId',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.BankClientId',
          'shortDisplayName': 'BankClientId',
          'name': 'BankClientId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.clients.BankClientId',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'Id',
            'parameters': [],
            'parameterizedName': 'Id',
            'namespace': '',
            'longDisplayName': 'Id',
            'shortDisplayName': 'Id',
            'name': 'Id'
          }, 'params': {}
        }],
        'sourcedBy': null,
        'format': null
      },
      'companyName': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.clients.CompanyName',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.CompanyName',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.CompanyName',
          'shortDisplayName': 'CompanyName',
          'name': 'CompanyName'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.clients.CompanyName',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'country': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.clients.CompanyCountry',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.CompanyCountry',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.CompanyCountry',
          'shortDisplayName': 'CompanyCountry',
          'name': 'CompanyCountry'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.clients.CompanyCountry',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'lei': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
          'shortDisplayName': 'LegalEntityIdentifier',
          'name': 'LegalEntityIdentifier'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.clients.LegalEntityIdentifier',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.clients {\n   model Client {\n       @Id\n       bankClientId: BankClientId\n       companyName: CompanyName\n       country: CompanyCountry\n       lei: LegalEntityIdentifier\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi:0.0.0',
      'contentHash': 'a683bf'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'demo.orderFeeds.clients.Client',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'demo.orderFeeds.clients.Client',
    'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.Client',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.Client',
      'shortDisplayName': 'Client',
      'name': 'Client'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
      'parameters': [],
      'parameterizedName': 'vyne.cask.CaskInsertedAt',
      'namespace': 'vyne.cask',
      'longDisplayName': 'vyne.cask.CaskInsertedAt',
      'shortDisplayName': 'CaskInsertedAt',
      'name': 'CaskInsertedAt'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.Instant',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Instant',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Instant',
      'shortDisplayName': 'Instant',
      'name': 'Instant'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'vyne.cask.types1',
      'version': '0.0.0',
      'content': 'namespace vyne.cask {\n   type CaskInsertedAt inherits Instant\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne.cask',
        'name': 'generated-schemas',
        'version': '1.7.0',
        'unversionedId': 'io.vyne.cask/generated-schemas',
        'id': 'io.vyne.cask/generated-schemas/1.7.0',
        'uriSafeId': 'io.vyne.cask:generated-schemas:1.7.0'
      },
      'packageQualifiedName': '[io.vyne.cask/generated-schemas/1.7.0]/vyne.cask.types1',
      'id': 'vyne.cask.types1:0.0.0',
      'contentHash': '6ea8cd'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'vyne.cask.CaskInsertedAt',
    'isTypeAlias': false,
    'formatAndZoneOffset': {
      'patterns': ['yyyy-MM-dd\'T\'HH:mm:ss[.SSS]X'],
      'utcZoneOffsetInMinutes': null,
      'definesPattern': true
    },
    'offset': null,
    'format': ['yyyy-MM-dd\'T\'HH:mm:ss[.SSS]X'],
    'hasFormat': true,
    'declaresFormat': true,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.Instant',
      'parameters': [],
      'parameterizedName': 'lang.taxi.Instant',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Instant',
      'shortDisplayName': 'Instant',
      'name': 'Instant'
    },
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
      'parameters': [],
      'parameterizedName': 'vyne.cask.CaskInsertedAt',
      'namespace': 'vyne.cask',
      'longDisplayName': 'vyne.cask.CaskInsertedAt',
      'shortDisplayName': 'CaskInsertedAt',
      'name': 'CaskInsertedAt'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'vyne.cask.CaskInsertedAt',
    'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
      'parameters': [],
      'parameterizedName': 'vyne.cask.CaskInsertedAt',
      'namespace': 'vyne.cask',
      'longDisplayName': 'vyne.cask.CaskInsertedAt',
      'shortDisplayName': 'CaskInsertedAt',
      'name': 'CaskInsertedAt'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'vyne.cask.CaskMessageId',
      'parameters': [],
      'parameterizedName': 'vyne.cask.CaskMessageId',
      'namespace': 'vyne.cask',
      'longDisplayName': 'vyne.cask.CaskMessageId',
      'shortDisplayName': 'CaskMessageId',
      'name': 'CaskMessageId'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'vyne.cask.types1',
      'version': '0.0.0',
      'content': 'namespace vyne.cask {\n   type CaskMessageId inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne.cask',
        'name': 'generated-schemas',
        'version': '1.7.0',
        'unversionedId': 'io.vyne.cask/generated-schemas',
        'id': 'io.vyne.cask/generated-schemas/1.7.0',
        'uriSafeId': 'io.vyne.cask:generated-schemas:1.7.0'
      },
      'packageQualifiedName': '[io.vyne.cask/generated-schemas/1.7.0]/vyne.cask.types1',
      'id': 'vyne.cask.types1:0.0.0',
      'contentHash': 'b8d760'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'vyne.cask.CaskMessageId',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'vyne.cask.CaskMessageId',
    'fullyQualifiedName': 'vyne.cask.CaskMessageId',
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.CaskMessageId',
      'parameters': [],
      'parameterizedName': 'vyne.cask.CaskMessageId',
      'namespace': 'vyne.cask',
      'longDisplayName': 'vyne.cask.CaskMessageId',
      'shortDisplayName': 'CaskMessageId',
      'name': 'CaskMessageId'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'taxi.stdlib.Format',
      'parameters': [],
      'parameterizedName': 'taxi.stdlib.Format',
      'namespace': 'taxi.stdlib',
      'longDisplayName': 'taxi.stdlib.Format',
      'shortDisplayName': 'Format',
      'name': 'Format'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [],
    'enumValues': [],
    'sources': [{
      'name': 'Native StdLib',
      'version': '0.0.0',
      'content': 'namespace taxi.stdlib {\n   [[ Declares a format (and optionally an offset)\n      for date formats\n      ]]\n      annotation Format {\n          value : String\n          offset : Int by default(0)\n      }\n}',
      'packageIdentifier': null,
      'packageQualifiedName': 'Native StdLib',
      'id': 'Native StdLib:0.0.0',
      'contentHash': '93fda9'
    }],
    'typeParameters': [],
    'typeDoc': null,
    'paramaterizedName': 'taxi.stdlib.Format',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': [],
    'hasFormat': true,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': {
      'fullyQualifiedName': 'taxi.stdlib.Format',
      'parameters': [],
      'parameterizedName': 'taxi.stdlib.Format',
      'namespace': 'taxi.stdlib',
      'longDisplayName': 'taxi.stdlib.Format',
      'shortDisplayName': 'Format',
      'name': 'Format'
    },
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'taxi.stdlib.Format',
    'fullyQualifiedName': 'taxi.stdlib.Format',
    'memberQualifiedName': {
      'fullyQualifiedName': 'taxi.stdlib.Format',
      'parameters': [],
      'parameterizedName': 'taxi.stdlib.Format',
      'namespace': 'taxi.stdlib',
      'longDisplayName': 'taxi.stdlib.Format',
      'shortDisplayName': 'Format',
      'name': 'Format'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'shortDisplayName': 'TraderIdMappings',
      'name': 'TraderIdMappings'
    },
    'attributes': {
      'bankTraderId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.BankTraderId',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
          'shortDisplayName': 'BankTraderId',
          'name': 'BankTraderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.users.BankTraderId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'bloombergId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'shortDisplayName': 'BloombergTraderId',
          'name': 'BloombergTraderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'Id',
            'parameters': [],
            'parameterizedName': 'Id',
            'namespace': '',
            'longDisplayName': 'Id',
            'shortDisplayName': 'Id',
            'name': 'Id'
          }, 'params': {}
        }],
        'sourcedBy': null,
        'format': null
      },
      'icapId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
          'shortDisplayName': 'IcapTraderId',
          'name': 'IcapTraderId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'Id',
            'parameters': [],
            'parameterizedName': 'Id',
            'namespace': '',
            'longDisplayName': 'Id',
            'shortDisplayName': 'Id',
            'name': 'Id'
          }, 'params': {}
        }],
        'sourcedBy': null,
        'format': null
      },
      'caskInsertedAt': {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'vyne.cask.CaskInsertedAt',
        'metadata': [],
        'sourcedBy': null,
        'format': {
          'patterns': ['yyyy-MM-dd\'T\'HH:mm:ss[.SSS]X'],
          'utcZoneOffsetInMinutes': null,
          'definesPattern': true
        }
      },
      'caskMessageId': {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskMessageId',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskMessageId',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskMessageId',
          'shortDisplayName': 'CaskMessageId',
          'name': 'CaskMessageId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'vyne.cask.CaskMessageId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'Generated',
        'parameters': [],
        'parameterizedName': 'Generated',
        'namespace': '',
        'longDisplayName': 'Generated',
        'shortDisplayName': 'Generated',
        'name': 'Generated'
      }, 'params': {}
    }],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'namespace': 'demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'shortDisplayName': 'TraderIdMappings',
      'name': 'TraderIdMappings'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'version': '0.0.0',
      'content': 'import vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskMessageId\nimport demo.orderFeeds.traderIdMappings.TraderIdMappings\nnamespace vyne.cask.demo.orderFeeds.traderIdMappings {\n   [[ Generated by Cask.  Source type is demo.orderFeeds.traderIdMappings.TraderIdMappings} ]]\n      @Generated\n      model TraderIdMappings inherits demo.orderFeeds.traderIdMappings.TraderIdMappings {\n         caskInsertedAt : vyne.cask.CaskInsertedAt\n         caskMessageId : vyne.cask.CaskMessageId\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne.cask',
        'name': 'generated-schemas',
        'version': '1.7.0',
        'unversionedId': 'io.vyne.cask/generated-schemas',
        'id': 'io.vyne.cask/generated-schemas/1.7.0',
        'uriSafeId': 'io.vyne.cask:generated-schemas:1.7.0'
      },
      'packageQualifiedName': '[io.vyne.cask/generated-schemas/1.7.0]/vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'id': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings:0.0.0',
      'contentHash': '7be468'
    }],
    'typeParameters': [],
    'typeDoc': 'Generated by Cask.  Source type is demo.orderFeeds.traderIdMappings.TraderIdMappings}',
    'paramaterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
    'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'shortDisplayName': 'TraderIdMappings',
      'name': 'TraderIdMappings'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'shortDisplayName': 'InstrumentIdMapping',
      'name': 'InstrumentIdMapping'
    },
    'attributes': {
      'bankInstrumentId': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.InstrumentId',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.InstrumentId',
          'shortDisplayName': 'InstrumentId',
          'name': 'InstrumentId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.InstrumentId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      },
      'cusip': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Cusip',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'Id',
            'parameters': [],
            'parameterizedName': 'Id',
            'namespace': '',
            'longDisplayName': 'Id',
            'shortDisplayName': 'Id',
            'name': 'Id'
          }, 'params': {}
        }],
        'sourcedBy': null,
        'format': null
      },
      'isin': {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'demo.orderFeeds.Isin',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'Id',
            'parameters': [],
            'parameterizedName': 'Id',
            'namespace': '',
            'longDisplayName': 'Id',
            'shortDisplayName': 'Id',
            'name': 'Id'
          }, 'params': {}
        }],
        'sourcedBy': null,
        'format': null
      },
      'caskInsertedAt': {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'vyne.cask.CaskInsertedAt',
        'metadata': [],
        'sourcedBy': null,
        'format': {
          'patterns': ['yyyy-MM-dd\'T\'HH:mm:ss[.SSS]X'],
          'utcZoneOffsetInMinutes': null,
          'definesPattern': true
        }
      },
      'caskMessageId': {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskMessageId',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskMessageId',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskMessageId',
          'shortDisplayName': 'CaskMessageId',
          'name': 'CaskMessageId'
        },
        'modifiers': [],
        'typeDoc': null,
        'defaultValue': null,
        'nullable': false,
        'typeDisplayName': 'vyne.cask.CaskMessageId',
        'metadata': [],
        'sourcedBy': null,
        'format': null
      }
    },
    'modifiers': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'Generated',
        'parameters': [],
        'parameterizedName': 'Generated',
        'namespace': '',
        'longDisplayName': 'Generated',
        'shortDisplayName': 'Generated',
        'name': 'Generated'
      }, 'params': {}
    }],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'namespace': 'demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'shortDisplayName': 'InstrumentIdMapping',
      'name': 'InstrumentIdMapping'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'version': '0.0.0',
      'content': 'import vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskMessageId\nimport demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping\nnamespace vyne.cask.demo.orderFeeds.instrumentIdMappings {\n   [[ Generated by Cask.  Source type is demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping} ]]\n      @Generated\n      model InstrumentIdMapping inherits demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping {\n         caskInsertedAt : vyne.cask.CaskInsertedAt\n         caskMessageId : vyne.cask.CaskMessageId\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne.cask',
        'name': 'generated-schemas',
        'version': '1.7.0',
        'unversionedId': 'io.vyne.cask/generated-schemas',
        'id': 'io.vyne.cask/generated-schemas/1.7.0',
        'uriSafeId': 'io.vyne.cask:generated-schemas:1.7.0'
      },
      'packageQualifiedName': '[io.vyne.cask/generated-schemas/1.7.0]/vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'id': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping:0.0.0',
      'contentHash': '14c403'
    }],
    'typeParameters': [],
    'typeDoc': 'Generated by Cask.  Source type is demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping}',
    'paramaterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': null,
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
    'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'shortDisplayName': 'InstrumentIdMapping',
      'name': 'InstrumentIdMapping'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': false
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.jdbc.TableName',
      'parameters': [],
      'parameterizedName': 'io.vyne.jdbc.TableName',
      'namespace': 'io.vyne.jdbc',
      'longDisplayName': 'io.vyne.jdbc.TableName',
      'shortDisplayName': 'TableName',
      'name': 'TableName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'JdbcConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.jdbc {\n   TableName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/JdbcConnectors',
      'id': 'JdbcConnectors:0.0.0',
      'contentHash': 'df61fc'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.jdbc.TableName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.jdbc.TableName',
    'fullyQualifiedName': 'io.vyne.jdbc.TableName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.jdbc.TableName',
      'parameters': [],
      'parameterizedName': 'io.vyne.jdbc.TableName',
      'namespace': 'io.vyne.jdbc',
      'longDisplayName': 'io.vyne.jdbc.TableName',
      'shortDisplayName': 'TableName',
      'name': 'TableName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.jdbc.SchemaName',
      'parameters': [],
      'parameterizedName': 'io.vyne.jdbc.SchemaName',
      'namespace': 'io.vyne.jdbc',
      'longDisplayName': 'io.vyne.jdbc.SchemaName',
      'shortDisplayName': 'SchemaName',
      'name': 'SchemaName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'JdbcConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.jdbc {\n   SchemaName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/JdbcConnectors',
      'id': 'JdbcConnectors:0.0.0',
      'contentHash': '49e2fe'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.jdbc.SchemaName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.jdbc.SchemaName',
    'fullyQualifiedName': 'io.vyne.jdbc.SchemaName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.jdbc.SchemaName',
      'parameters': [],
      'parameterizedName': 'io.vyne.jdbc.SchemaName',
      'namespace': 'io.vyne.jdbc',
      'longDisplayName': 'io.vyne.jdbc.SchemaName',
      'shortDisplayName': 'SchemaName',
      'name': 'SchemaName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.kafka.ConnectionName',
      'parameters': [],
      'parameterizedName': 'io.vyne.kafka.ConnectionName',
      'namespace': 'io.vyne.kafka',
      'longDisplayName': 'io.vyne.kafka.ConnectionName',
      'shortDisplayName': 'ConnectionName',
      'name': 'ConnectionName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'KafkaConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.kafka {\n   ConnectionName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/KafkaConnectors',
      'id': 'KafkaConnectors:0.0.0',
      'contentHash': '28e454'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.kafka.ConnectionName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.kafka.ConnectionName',
    'fullyQualifiedName': 'io.vyne.kafka.ConnectionName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.kafka.ConnectionName',
      'parameters': [],
      'parameterizedName': 'io.vyne.kafka.ConnectionName',
      'namespace': 'io.vyne.kafka',
      'longDisplayName': 'io.vyne.kafka.ConnectionName',
      'shortDisplayName': 'ConnectionName',
      'name': 'ConnectionName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.kafka.TopicName',
      'parameters': [],
      'parameterizedName': 'io.vyne.kafka.TopicName',
      'namespace': 'io.vyne.kafka',
      'longDisplayName': 'io.vyne.kafka.TopicName',
      'shortDisplayName': 'TopicName',
      'name': 'TopicName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'KafkaConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.kafka {\n   TopicName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/KafkaConnectors',
      'id': 'KafkaConnectors:0.0.0',
      'contentHash': 'c6ba94'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.kafka.TopicName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.kafka.TopicName',
    'fullyQualifiedName': 'io.vyne.kafka.TopicName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.kafka.TopicName',
      'parameters': [],
      'parameterizedName': 'io.vyne.kafka.TopicName',
      'namespace': 'io.vyne.kafka',
      'longDisplayName': 'io.vyne.kafka.TopicName',
      'shortDisplayName': 'TopicName',
      'name': 'TopicName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.s3.ConnectionName',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.s3.ConnectionName',
      'namespace': 'io.vyne.aws.s3',
      'longDisplayName': 'io.vyne.aws.s3.ConnectionName',
      'shortDisplayName': 'ConnectionName',
      'name': 'ConnectionName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'AwsS3Connectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.s3 {\n   ConnectionName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsS3Connectors',
      'id': 'AwsS3Connectors:0.0.0',
      'contentHash': 'e2d418'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.aws.s3.ConnectionName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.s3.ConnectionName',
    'fullyQualifiedName': 'io.vyne.aws.s3.ConnectionName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.s3.ConnectionName',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.s3.ConnectionName',
      'namespace': 'io.vyne.aws.s3',
      'longDisplayName': 'io.vyne.aws.s3.ConnectionName',
      'shortDisplayName': 'ConnectionName',
      'name': 'ConnectionName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.s3.BucketName',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.s3.BucketName',
      'namespace': 'io.vyne.aws.s3',
      'longDisplayName': 'io.vyne.aws.s3.BucketName',
      'shortDisplayName': 'BucketName',
      'name': 'BucketName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'AwsS3Connectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.s3 {\n   BucketName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsS3Connectors',
      'id': 'AwsS3Connectors:0.0.0',
      'contentHash': '7ac5e3'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.aws.s3.BucketName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.s3.BucketName',
    'fullyQualifiedName': 'io.vyne.aws.s3.BucketName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.s3.BucketName',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.s3.BucketName',
      'namespace': 'io.vyne.aws.s3',
      'longDisplayName': 'io.vyne.aws.s3.BucketName',
      'shortDisplayName': 'BucketName',
      'name': 'BucketName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.sqs.ConnectionName',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.sqs.ConnectionName',
      'namespace': 'io.vyne.aws.sqs',
      'longDisplayName': 'io.vyne.aws.sqs.ConnectionName',
      'shortDisplayName': 'ConnectionName',
      'name': 'ConnectionName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'AwsSqsConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.sqs {\n   ConnectionName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsSqsConnectors',
      'id': 'AwsSqsConnectors:0.0.0',
      'contentHash': '2997f6'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.aws.sqs.ConnectionName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.sqs.ConnectionName',
    'fullyQualifiedName': 'io.vyne.aws.sqs.ConnectionName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.sqs.ConnectionName',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.sqs.ConnectionName',
      'namespace': 'io.vyne.aws.sqs',
      'longDisplayName': 'io.vyne.aws.sqs.ConnectionName',
      'shortDisplayName': 'ConnectionName',
      'name': 'ConnectionName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.sqs.QueueName',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.sqs.QueueName',
      'namespace': 'io.vyne.aws.sqs',
      'longDisplayName': 'io.vyne.aws.sqs.QueueName',
      'shortDisplayName': 'QueueName',
      'name': 'QueueName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'AwsSqsConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.sqs {\n   QueueName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsSqsConnectors',
      'id': 'AwsSqsConnectors:0.0.0',
      'contentHash': 'e52a2b'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.aws.sqs.QueueName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.sqs.QueueName',
    'fullyQualifiedName': 'io.vyne.aws.sqs.QueueName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.sqs.QueueName',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.sqs.QueueName',
      'namespace': 'io.vyne.aws.sqs',
      'longDisplayName': 'io.vyne.aws.sqs.QueueName',
      'shortDisplayName': 'QueueName',
      'name': 'QueueName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.azure.store.ConnectionName',
      'parameters': [],
      'parameterizedName': 'io.vyne.azure.store.ConnectionName',
      'namespace': 'io.vyne.azure.store',
      'longDisplayName': 'io.vyne.azure.store.ConnectionName',
      'shortDisplayName': 'ConnectionName',
      'name': 'ConnectionName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'AzureStoreConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.azure.store {\n   ConnectionName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AzureStoreConnectors',
      'id': 'AzureStoreConnectors:0.0.0',
      'contentHash': '93d191'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.azure.store.ConnectionName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.azure.store.ConnectionName',
    'fullyQualifiedName': 'io.vyne.azure.store.ConnectionName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.azure.store.ConnectionName',
      'parameters': [],
      'parameterizedName': 'io.vyne.azure.store.ConnectionName',
      'namespace': 'io.vyne.azure.store',
      'longDisplayName': 'io.vyne.azure.store.ConnectionName',
      'shortDisplayName': 'ConnectionName',
      'name': 'ConnectionName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.azure.store.AzureStoreContainer',
      'parameters': [],
      'parameterizedName': 'io.vyne.azure.store.AzureStoreContainer',
      'namespace': 'io.vyne.azure.store',
      'longDisplayName': 'io.vyne.azure.store.AzureStoreContainer',
      'shortDisplayName': 'AzureStoreContainer',
      'name': 'AzureStoreContainer'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'AzureStoreConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.azure.store {\n   AzureStoreContainer inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AzureStoreConnectors',
      'id': 'AzureStoreConnectors:0.0.0',
      'contentHash': '1bb1cc'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.azure.store.AzureStoreContainer',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.azure.store.AzureStoreContainer',
    'fullyQualifiedName': 'io.vyne.azure.store.AzureStoreContainer',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.azure.store.AzureStoreContainer',
      'parameters': [],
      'parameterizedName': 'io.vyne.azure.store.AzureStoreContainer',
      'namespace': 'io.vyne.azure.store',
      'longDisplayName': 'io.vyne.azure.store.AzureStoreContainer',
      'shortDisplayName': 'AzureStoreContainer',
      'name': 'AzureStoreContainer'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.lambda.ConnectionName',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.lambda.ConnectionName',
      'namespace': 'io.vyne.aws.lambda',
      'longDisplayName': 'io.vyne.aws.lambda.ConnectionName',
      'shortDisplayName': 'ConnectionName',
      'name': 'ConnectionName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'AwsLambdaConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.lambda {\n   ConnectionName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsLambdaConnectors',
      'id': 'AwsLambdaConnectors:0.0.0',
      'contentHash': 'ba8822'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.aws.lambda.ConnectionName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.lambda.ConnectionName',
    'fullyQualifiedName': 'io.vyne.aws.lambda.ConnectionName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.lambda.ConnectionName',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.lambda.ConnectionName',
      'namespace': 'io.vyne.aws.lambda',
      'longDisplayName': 'io.vyne.aws.lambda.ConnectionName',
      'shortDisplayName': 'ConnectionName',
      'name': 'ConnectionName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }, {
    'name': {
      'fullyQualifiedName': 'io.vyne.aws.lambda.OperationName',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.lambda.OperationName',
      'namespace': 'io.vyne.aws.lambda',
      'longDisplayName': 'io.vyne.aws.lambda.OperationName',
      'shortDisplayName': 'OperationName',
      'name': 'OperationName'
    },
    'attributes': {},
    'modifiers': [],
    'metadata': [],
    'aliasForType': null,
    'inheritsFrom': [{
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    }],
    'enumValues': [],
    'sources': [{
      'name': 'AwsLambdaConnectors',
      'version': '0.0.0',
      'content': 'namespace io.vyne.aws.lambda {\n   OperationName inherits String\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne',
        'name': 'core-types',
        'version': '1.0.0',
        'unversionedId': 'io.vyne/core-types',
        'id': 'io.vyne/core-types/1.0.0',
        'uriSafeId': 'io.vyne:core-types:1.0.0'
      },
      'packageQualifiedName': '[io.vyne/core-types/1.0.0]/AwsLambdaConnectors',
      'id': 'AwsLambdaConnectors:0.0.0',
      'contentHash': 'f4ed37'
    }],
    'typeParameters': [],
    'typeDoc': '',
    'paramaterizedName': 'io.vyne.aws.lambda.OperationName',
    'isTypeAlias': false,
    'formatAndZoneOffset': null,
    'offset': null,
    'format': null,
    'hasFormat': false,
    'declaresFormat': false,
    'basePrimitiveTypeName': {
      'fullyQualifiedName': 'lang.taxi.String',
      'parameters': [],
      'parameterizedName': 'lang.taxi.String',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.String',
      'shortDisplayName': 'String',
      'name': 'String'
    },
    'hasExpression': false,
    'unformattedTypeName': null,
    'isParameterType': false,
    'isClosed': false,
    'isPrimitive': false,
    'longDisplayName': 'io.vyne.aws.lambda.OperationName',
    'fullyQualifiedName': 'io.vyne.aws.lambda.OperationName',
    'memberQualifiedName': {
      'fullyQualifiedName': 'io.vyne.aws.lambda.OperationName',
      'parameters': [],
      'parameterizedName': 'io.vyne.aws.lambda.OperationName',
      'namespace': 'io.vyne.aws.lambda',
      'longDisplayName': 'io.vyne.aws.lambda.OperationName',
      'shortDisplayName': 'OperationName',
      'name': 'OperationName'
    },
    'underlyingTypeParameters': [],
    'isCollection': false,
    'isStream': false,
    'collectionType': null,
    'isScalar': true
  }],
  'services': [{
    'name': {
      'fullyQualifiedName': 'msci.MsciEsgService',
      'parameters': [],
      'parameterizedName': 'msci.MsciEsgService',
      'namespace': 'msci',
      'longDisplayName': 'msci.MsciEsgService',
      'shortDisplayName': 'MsciEsgService',
      'name': 'MsciEsgService'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'msci.MsciEsgService@@getMsciEsgData',
        'parameters': [],
        'parameterizedName': 'msci.MsciEsgService@@getMsciEsgData',
        'namespace': 'msci',
        'longDisplayName': 'msci.MsciEsgService / getMsciEsgData',
        'shortDisplayName': 'getMsciEsgData',
        'name': 'MsciEsgService@@getMsciEsgData'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        },
        'name': 'isin',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'value': 'isin' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'msci.EsgData',
        'parameters': [],
        'parameterizedName': 'msci.EsgData',
        'namespace': 'msci',
        'longDisplayName': 'msci.EsgData',
        'shortDisplayName': 'EsgData',
        'name': 'EsgData'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/msci/esgScores/{isin}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'msci.EsgData',
          'parameters': [],
          'parameterizedName': 'msci.EsgData',
          'namespace': 'msci',
          'longDisplayName': 'msci.EsgData',
          'shortDisplayName': 'EsgData',
          'name': 'EsgData'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'msci.EsgData',
        'parameters': [],
        'parameterizedName': 'msci.EsgData',
        'namespace': 'msci',
        'longDisplayName': 'msci.EsgData',
        'shortDisplayName': 'EsgData',
        'name': 'EsgData'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'msci.MsciEsgService@@getMsciEsgData',
        'parameters': [],
        'parameterizedName': 'msci.MsciEsgService@@getMsciEsgData',
        'namespace': 'msci',
        'longDisplayName': 'msci.MsciEsgService / getMsciEsgData',
        'shortDisplayName': 'getMsciEsgData',
        'name': 'MsciEsgService@@getMsciEsgData'
      },
      'name': 'getMsciEsgData'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'ServiceDiscoveryClient',
        'parameters': [],
        'parameterizedName': 'ServiceDiscoveryClient',
        'namespace': '',
        'longDisplayName': 'ServiceDiscoveryClient',
        'shortDisplayName': 'ServiceDiscoveryClient',
        'name': 'ServiceDiscoveryClient'
      }, 'params': { 'serviceName': 'esg-services' }
    }],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.Isin\nnamespace msci {\n   @ServiceDiscoveryClient(serviceName = "esg-services")\n       service MsciEsgService {\n           @HttpOperation(method = "GET", url = "/msci/esgScores/{isin}")\n           operation getMsciEsgData(@PathVariable("isin") isin: Isin):EsgData\n       }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi:0.0.0',
      'contentHash': 'e26089'
    }],
    'typeDoc': null,
    'lineage': null,
    'serviceKind': 'API',
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'msci.MsciEsgService@@getMsciEsgData',
        'parameters': [],
        'parameterizedName': 'msci.MsciEsgService@@getMsciEsgData',
        'namespace': 'msci',
        'longDisplayName': 'msci.MsciEsgService / getMsciEsgData',
        'shortDisplayName': 'getMsciEsgData',
        'name': 'MsciEsgService@@getMsciEsgData'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        },
        'name': 'isin',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'value': 'isin' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'msci.EsgData',
        'parameters': [],
        'parameterizedName': 'msci.EsgData',
        'namespace': 'msci',
        'longDisplayName': 'msci.EsgData',
        'shortDisplayName': 'EsgData',
        'name': 'EsgData'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/msci/esgScores/{isin}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'msci.EsgData',
          'parameters': [],
          'parameterizedName': 'msci.EsgData',
          'namespace': 'msci',
          'longDisplayName': 'msci.EsgData',
          'shortDisplayName': 'EsgData',
          'name': 'EsgData'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'msci.EsgData',
        'parameters': [],
        'parameterizedName': 'msci.EsgData',
        'namespace': 'msci',
        'longDisplayName': 'msci.EsgData',
        'shortDisplayName': 'EsgData',
        'name': 'EsgData'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'msci.MsciEsgService@@getMsciEsgData',
        'parameters': [],
        'parameterizedName': 'msci.MsciEsgService@@getMsciEsgData',
        'namespace': 'msci',
        'longDisplayName': 'msci.MsciEsgService / getMsciEsgData',
        'shortDisplayName': 'getMsciEsgData',
        'name': 'MsciEsgService@@getMsciEsgData'
      },
      'name': 'getMsciEsgData'
    }],
    'qualifiedName': 'msci.MsciEsgService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'msci.MsciEsgService',
      'parameters': [],
      'parameterizedName': 'msci.MsciEsgService',
      'namespace': 'msci',
      'longDisplayName': 'msci.MsciEsgService',
      'shortDisplayName': 'MsciEsgService',
      'name': 'MsciEsgService'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'refinitiv.RefinitivEsgService',
      'parameters': [],
      'parameterizedName': 'refinitiv.RefinitivEsgService',
      'namespace': 'refinitiv',
      'longDisplayName': 'refinitiv.RefinitivEsgService',
      'shortDisplayName': 'RefinitivEsgService',
      'name': 'RefinitivEsgService'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'refinitiv.RefinitivEsgService@@getAssetInfo',
        'parameters': [],
        'parameterizedName': 'refinitiv.RefinitivEsgService@@getAssetInfo',
        'namespace': 'refinitiv',
        'longDisplayName': 'refinitiv.RefinitivEsgService / getAssetInfo',
        'shortDisplayName': 'getAssetInfo',
        'name': 'RefinitivEsgService@@getAssetInfo'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        },
        'name': 'cusip',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'value': 'cusip' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'refinitiv.AssetInfo',
        'parameters': [],
        'parameterizedName': 'refinitiv.AssetInfo',
        'namespace': 'refinitiv',
        'longDisplayName': 'refinitiv.AssetInfo',
        'shortDisplayName': 'AssetInfo',
        'name': 'AssetInfo'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/refinitiv/assetInfo/{cusip}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'refinitiv.AssetInfo',
          'parameters': [],
          'parameterizedName': 'refinitiv.AssetInfo',
          'namespace': 'refinitiv',
          'longDisplayName': 'refinitiv.AssetInfo',
          'shortDisplayName': 'AssetInfo',
          'name': 'AssetInfo'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'refinitiv.AssetInfo',
        'parameters': [],
        'parameterizedName': 'refinitiv.AssetInfo',
        'namespace': 'refinitiv',
        'longDisplayName': 'refinitiv.AssetInfo',
        'shortDisplayName': 'AssetInfo',
        'name': 'AssetInfo'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'refinitiv.RefinitivEsgService@@getAssetInfo',
        'parameters': [],
        'parameterizedName': 'refinitiv.RefinitivEsgService@@getAssetInfo',
        'namespace': 'refinitiv',
        'longDisplayName': 'refinitiv.RefinitivEsgService / getAssetInfo',
        'shortDisplayName': 'getAssetInfo',
        'name': 'RefinitivEsgService@@getAssetInfo'
      },
      'name': 'getAssetInfo'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'ServiceDiscoveryClient',
        'parameters': [],
        'parameterizedName': 'ServiceDiscoveryClient',
        'namespace': '',
        'longDisplayName': 'ServiceDiscoveryClient',
        'shortDisplayName': 'ServiceDiscoveryClient',
        'name': 'ServiceDiscoveryClient'
      }, 'params': { 'serviceName': 'esg-services' }
    }],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.Cusip\nnamespace refinitiv {\n   @ServiceDiscoveryClient(serviceName = "esg-services")\n       service RefinitivEsgService {\n           @HttpOperation(method = "GET", url = "/refinitiv/assetInfo/{cusip}")\n           operation getAssetInfo(@PathVariable("cusip") cusip:Cusip):AssetInfo\n       }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/esg-data.taxi:0.0.0',
      'contentHash': 'a61f03'
    }],
    'typeDoc': null,
    'lineage': null,
    'serviceKind': 'API',
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'refinitiv.RefinitivEsgService@@getAssetInfo',
        'parameters': [],
        'parameterizedName': 'refinitiv.RefinitivEsgService@@getAssetInfo',
        'namespace': 'refinitiv',
        'longDisplayName': 'refinitiv.RefinitivEsgService / getAssetInfo',
        'shortDisplayName': 'getAssetInfo',
        'name': 'RefinitivEsgService@@getAssetInfo'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        },
        'name': 'cusip',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'value': 'cusip' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'refinitiv.AssetInfo',
        'parameters': [],
        'parameterizedName': 'refinitiv.AssetInfo',
        'namespace': 'refinitiv',
        'longDisplayName': 'refinitiv.AssetInfo',
        'shortDisplayName': 'AssetInfo',
        'name': 'AssetInfo'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/refinitiv/assetInfo/{cusip}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'refinitiv.AssetInfo',
          'parameters': [],
          'parameterizedName': 'refinitiv.AssetInfo',
          'namespace': 'refinitiv',
          'longDisplayName': 'refinitiv.AssetInfo',
          'shortDisplayName': 'AssetInfo',
          'name': 'AssetInfo'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'refinitiv.AssetInfo',
        'parameters': [],
        'parameterizedName': 'refinitiv.AssetInfo',
        'namespace': 'refinitiv',
        'longDisplayName': 'refinitiv.AssetInfo',
        'shortDisplayName': 'AssetInfo',
        'name': 'AssetInfo'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'refinitiv.RefinitivEsgService@@getAssetInfo',
        'parameters': [],
        'parameterizedName': 'refinitiv.RefinitivEsgService@@getAssetInfo',
        'namespace': 'refinitiv',
        'longDisplayName': 'refinitiv.RefinitivEsgService / getAssetInfo',
        'shortDisplayName': 'getAssetInfo',
        'name': 'RefinitivEsgService@@getAssetInfo'
      },
      'name': 'getAssetInfo'
    }],
    'qualifiedName': 'refinitiv.RefinitivEsgService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'refinitiv.RefinitivEsgService',
      'parameters': [],
      'parameterizedName': 'refinitiv.RefinitivEsgService',
      'namespace': 'refinitiv',
      'longDisplayName': 'refinitiv.RefinitivEsgService',
      'shortDisplayName': 'RefinitivEsgService',
      'name': 'RefinitivEsgService'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse',
      'namespace': 'demo.orderFeeds.dataWarehouse',
      'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse',
      'shortDisplayName': 'DataWarehouse',
      'name': 'DataWarehouse'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstruments',
        'namespace': 'demo.orderFeeds.dataWarehouse',
        'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'DataWarehouse@@getInstruments'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
        'shortDisplayName': 'Instrument[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
            'namespace': 'demo.orderFeeds.instrument',
            'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
            'shortDisplayName': 'Instrument',
            'name': 'Instrument'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
          'shortDisplayName': 'Instrument[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
        'shortDisplayName': 'Instrument[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstruments',
        'namespace': 'demo.orderFeeds.dataWarehouse',
        'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'DataWarehouse@@getInstruments'
      },
      'name': 'getInstruments'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstrument',
        'namespace': 'demo.orderFeeds.dataWarehouse',
        'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse / getInstrument',
        'shortDisplayName': 'getInstrument',
        'name': 'DataWarehouse@@getInstrument'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.InstrumentId',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.InstrumentId',
          'shortDisplayName': 'InstrumentId',
          'name': 'InstrumentId'
        },
        'name': 'id',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.InstrumentId',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.InstrumentId',
          'shortDisplayName': 'InstrumentId',
          'name': 'InstrumentId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstrument',
        'namespace': 'demo.orderFeeds.dataWarehouse',
        'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse / getInstrument',
        'shortDisplayName': 'getInstrument',
        'name': 'DataWarehouse@@getInstrument'
      },
      'name': 'getInstrument'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/data-warehouse.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.InstrumentId\nimport demo.orderFeeds.instrument.Instrument\nimport demo.orderFeeds.instrument.Instrument\nnamespace demo.orderFeeds.dataWarehouse {\n   service DataWarehouse {\n       lineage {\n           consumes operation demo.orderFeeds.instrument.InstrumentService.getInstruments\n           consumes operation demo.orderFeeds.icap.IcapOrderFeedService.getOrders\n           consumes operation demo.orderFeeds.bloomberg.BloombergOrderFeedService.getOrders\n       }\n       operation getInstruments(): Instrument[]\n       operation getInstrument(id: InstrumentId): Instrument\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/data-warehouse.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/data-warehouse.taxi:0.0.0',
      'contentHash': '0e40d5'
    }],
    'typeDoc': null,
    'lineage': {
      'consumes': [{
        'serviceName': 'demo.orderFeeds.instrument.InstrumentService',
        'operationName': 'getInstruments',
        'operationQualifiedName': {
          'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstruments',
          'shortDisplayName': 'getInstruments',
          'name': 'InstrumentService@@getInstruments'
        }
      }, {
        'serviceName': 'demo.orderFeeds.icap.IcapOrderFeedService',
        'operationName': 'getOrders',
        'operationQualifiedName': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrders',
          'shortDisplayName': 'getOrders',
          'name': 'IcapOrderFeedService@@getOrders'
        }
      }, {
        'serviceName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService',
        'operationName': 'getOrders',
        'operationQualifiedName': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrders',
          'shortDisplayName': 'getOrders',
          'name': 'BloombergOrderFeedService@@getOrders'
        }
      }], 'stores': [], 'metadata': []
    },
    'serviceKind': null,
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstruments',
        'namespace': 'demo.orderFeeds.dataWarehouse',
        'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'DataWarehouse@@getInstruments'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
        'shortDisplayName': 'Instrument[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
            'namespace': 'demo.orderFeeds.instrument',
            'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
            'shortDisplayName': 'Instrument',
            'name': 'Instrument'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
          'shortDisplayName': 'Instrument[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
        'shortDisplayName': 'Instrument[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstruments',
        'namespace': 'demo.orderFeeds.dataWarehouse',
        'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'DataWarehouse@@getInstruments'
      },
      'name': 'getInstruments'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstrument',
        'namespace': 'demo.orderFeeds.dataWarehouse',
        'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse / getInstrument',
        'shortDisplayName': 'getInstrument',
        'name': 'DataWarehouse@@getInstrument'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.InstrumentId',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.InstrumentId',
          'shortDisplayName': 'InstrumentId',
          'name': 'InstrumentId'
        },
        'name': 'id',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.InstrumentId',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.InstrumentId',
          'shortDisplayName': 'InstrumentId',
          'name': 'InstrumentId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstrument',
        'namespace': 'demo.orderFeeds.dataWarehouse',
        'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse / getInstrument',
        'shortDisplayName': 'getInstrument',
        'name': 'DataWarehouse@@getInstrument'
      },
      'name': 'getInstrument'
    }],
    'qualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse',
      'namespace': 'demo.orderFeeds.dataWarehouse',
      'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse',
      'shortDisplayName': 'DataWarehouse',
      'name': 'DataWarehouse'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService',
      'shortDisplayName': 'IcapOrderFeedService',
      'name': 'IcapOrderFeedService'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrders',
        'shortDisplayName': 'getOrders',
        'name': 'IcapOrderFeedService@@getOrders'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
          'shortDisplayName': 'IcapOrder',
          'name': 'IcapOrder'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.icap.IcapOrder>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrder[]',
        'shortDisplayName': 'IcapOrder[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/orders' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
            'namespace': 'demo.orderFeeds.icap',
            'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
            'shortDisplayName': 'IcapOrder',
            'name': 'IcapOrder'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.icap.IcapOrder>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrder[]',
          'shortDisplayName': 'IcapOrder[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
          'shortDisplayName': 'IcapOrder',
          'name': 'IcapOrder'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.icap.IcapOrder>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrder[]',
        'shortDisplayName': 'IcapOrder[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrders',
        'shortDisplayName': 'getOrders',
        'name': 'IcapOrderFeedService@@getOrders'
      },
      'name': 'getOrders'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrder',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrder',
        'shortDisplayName': 'getOrder',
        'name': 'IcapOrderFeedService@@getOrder'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrderId',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrderId',
          'shortDisplayName': 'IcapOrderId',
          'name': 'IcapOrderId'
        },
        'name': 'orderId',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrderId',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrderId',
          'shortDisplayName': 'IcapOrderId',
          'name': 'IcapOrderId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
        'shortDisplayName': 'IcapOrder',
        'name': 'IcapOrder'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/order/{orderId}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
          'shortDisplayName': 'IcapOrder',
          'name': 'IcapOrder'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
        'shortDisplayName': 'IcapOrder',
        'name': 'IcapOrder'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrder',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrder',
        'shortDisplayName': 'getOrder',
        'name': 'IcapOrderFeedService@@getOrder'
      },
      'name': 'getOrder'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'Datasource',
        'parameters': [],
        'parameterizedName': 'Datasource',
        'namespace': '',
        'longDisplayName': 'Datasource',
        'shortDisplayName': 'Datasource',
        'name': 'Datasource'
      }, 'params': {}
    }, {
      'name': {
        'fullyQualifiedName': 'ServiceDiscoveryClient',
        'parameters': [],
        'parameterizedName': 'ServiceDiscoveryClient',
        'namespace': '',
        'longDisplayName': 'ServiceDiscoveryClient',
        'shortDisplayName': 'ServiceDiscoveryClient',
        'name': 'ServiceDiscoveryClient'
      }, 'params': { 'serviceName': 'icap-order-feed' }
    }],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.icap {\n   @Datasource\n   @ServiceDiscoveryClient(serviceName = "icap-order-feed")\n   service IcapOrderFeedService {\n       @HttpOperation(method = \'GET\', url = \'/orders\')\n       operation getOrders(): IcapOrder[]\n       @HttpOperation(method = \'GET\', url = \'/order/{orderId}\')\n       operation getOrder(orderId: IcapOrderId): IcapOrder\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/icap-order-feed.taxi:0.0.0',
      'contentHash': '658697'
    }],
    'typeDoc': null,
    'lineage': null,
    'serviceKind': 'API',
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrders',
        'shortDisplayName': 'getOrders',
        'name': 'IcapOrderFeedService@@getOrders'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
          'shortDisplayName': 'IcapOrder',
          'name': 'IcapOrder'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.icap.IcapOrder>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrder[]',
        'shortDisplayName': 'IcapOrder[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/orders' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
            'namespace': 'demo.orderFeeds.icap',
            'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
            'shortDisplayName': 'IcapOrder',
            'name': 'IcapOrder'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.icap.IcapOrder>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrder[]',
          'shortDisplayName': 'IcapOrder[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
          'shortDisplayName': 'IcapOrder',
          'name': 'IcapOrder'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.icap.IcapOrder>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrder[]',
        'shortDisplayName': 'IcapOrder[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrders',
        'shortDisplayName': 'getOrders',
        'name': 'IcapOrderFeedService@@getOrders'
      },
      'name': 'getOrders'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrder',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrder',
        'shortDisplayName': 'getOrder',
        'name': 'IcapOrderFeedService@@getOrder'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrderId',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrderId',
          'shortDisplayName': 'IcapOrderId',
          'name': 'IcapOrderId'
        },
        'name': 'orderId',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrderId',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrderId',
          'shortDisplayName': 'IcapOrderId',
          'name': 'IcapOrderId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
        'shortDisplayName': 'IcapOrder',
        'name': 'IcapOrder'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/order/{orderId}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
          'shortDisplayName': 'IcapOrder',
          'name': 'IcapOrder'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
        'shortDisplayName': 'IcapOrder',
        'name': 'IcapOrder'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrder',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrder',
        'shortDisplayName': 'getOrder',
        'name': 'IcapOrderFeedService@@getOrder'
      },
      'name': 'getOrder'
    }],
    'qualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService',
      'shortDisplayName': 'IcapOrderFeedService',
      'name': 'IcapOrderFeedService'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.users.UserService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.UserService',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.UserService',
      'shortDisplayName': 'UserService',
      'name': 'UserService'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.users.UserService@@getTraders',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.UserService@@getTraders',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.UserService / getTraders',
        'shortDisplayName': 'getTraders',
        'name': 'UserService@@getTraders'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.Trader',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.Trader',
          'shortDisplayName': 'Trader',
          'name': 'Trader'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.users.Trader>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.users.Trader[]',
        'shortDisplayName': 'Trader[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/traders' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.users.Trader',
            'namespace': 'demo.orderFeeds.users',
            'longDisplayName': 'demo.orderFeeds.users.Trader',
            'shortDisplayName': 'Trader',
            'name': 'Trader'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.users.Trader>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.users.Trader[]',
          'shortDisplayName': 'Trader[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.Trader',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.Trader',
          'shortDisplayName': 'Trader',
          'name': 'Trader'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.users.Trader>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.users.Trader[]',
        'shortDisplayName': 'Trader[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.users.UserService@@getTraders',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.UserService@@getTraders',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.UserService / getTraders',
        'shortDisplayName': 'getTraders',
        'name': 'UserService@@getTraders'
      },
      'name': 'getTraders'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.users.UserService@@getTrader',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.UserService@@getTrader',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.UserService / getTrader',
        'shortDisplayName': 'getTrader',
        'name': 'UserService@@getTrader'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.BankTraderId',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
          'shortDisplayName': 'BankTraderId',
          'name': 'BankTraderId'
        },
        'name': 'id',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.BankTraderId',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
          'shortDisplayName': 'BankTraderId',
          'name': 'BankTraderId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.Trader',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.Trader',
        'shortDisplayName': 'Trader',
        'name': 'Trader'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/trader/{id}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.Trader',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.Trader',
          'shortDisplayName': 'Trader',
          'name': 'Trader'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.Trader',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.Trader',
        'shortDisplayName': 'Trader',
        'name': 'Trader'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.users.UserService@@getTrader',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.UserService@@getTrader',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.UserService / getTrader',
        'shortDisplayName': 'getTrader',
        'name': 'UserService@@getTrader'
      },
      'name': 'getTrader'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'ServiceDiscoveryClient',
        'parameters': [],
        'parameterizedName': 'ServiceDiscoveryClient',
        'namespace': '',
        'longDisplayName': 'ServiceDiscoveryClient',
        'shortDisplayName': 'ServiceDiscoveryClient',
        'name': 'ServiceDiscoveryClient'
      }, 'params': { 'serviceName': 'users-service' }
    }],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.users {\n   @ServiceDiscoveryClient(serviceName = "users-service")\n   service UserService {\n       @HttpOperation(method = \'GET\', url = \'/traders\')\n       operation getTraders(): Trader[]\n       @HttpOperation(method = \'GET\', url = \'/trader/{id}\')\n       operation getTrader(id: BankTraderId): Trader\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/users.taxi:0.0.0',
      'contentHash': 'e6aa7d'
    }],
    'typeDoc': null,
    'lineage': null,
    'serviceKind': 'API',
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.users.UserService@@getTraders',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.UserService@@getTraders',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.UserService / getTraders',
        'shortDisplayName': 'getTraders',
        'name': 'UserService@@getTraders'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.Trader',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.Trader',
          'shortDisplayName': 'Trader',
          'name': 'Trader'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.users.Trader>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.users.Trader[]',
        'shortDisplayName': 'Trader[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/traders' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.users.Trader',
            'namespace': 'demo.orderFeeds.users',
            'longDisplayName': 'demo.orderFeeds.users.Trader',
            'shortDisplayName': 'Trader',
            'name': 'Trader'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.users.Trader>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.users.Trader[]',
          'shortDisplayName': 'Trader[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.Trader',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.Trader',
          'shortDisplayName': 'Trader',
          'name': 'Trader'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.users.Trader>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.users.Trader[]',
        'shortDisplayName': 'Trader[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.users.UserService@@getTraders',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.UserService@@getTraders',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.UserService / getTraders',
        'shortDisplayName': 'getTraders',
        'name': 'UserService@@getTraders'
      },
      'name': 'getTraders'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.users.UserService@@getTrader',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.UserService@@getTrader',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.UserService / getTrader',
        'shortDisplayName': 'getTrader',
        'name': 'UserService@@getTrader'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.BankTraderId',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
          'shortDisplayName': 'BankTraderId',
          'name': 'BankTraderId'
        },
        'name': 'id',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.BankTraderId',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
          'shortDisplayName': 'BankTraderId',
          'name': 'BankTraderId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.Trader',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.Trader',
        'shortDisplayName': 'Trader',
        'name': 'Trader'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/trader/{id}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.Trader',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.Trader',
          'shortDisplayName': 'Trader',
          'name': 'Trader'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.Trader',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.Trader',
        'shortDisplayName': 'Trader',
        'name': 'Trader'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.users.UserService@@getTrader',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.UserService@@getTrader',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.UserService / getTrader',
        'shortDisplayName': 'getTrader',
        'name': 'UserService@@getTrader'
      },
      'name': 'getTrader'
    }],
    'qualifiedName': 'demo.orderFeeds.users.UserService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.UserService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.UserService',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.UserService',
      'shortDisplayName': 'UserService',
      'name': 'UserService'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService',
      'namespace': 'demo.orderFeeds.refinitiv',
      'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService',
      'shortDisplayName': 'RefinitivMarketDataService',
      'name': 'RefinitivMarketDataService'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
        'namespace': 'demo.orderFeeds.refinitiv',
        'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'RefinitivMarketDataService@@getInstruments'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'namespace': 'demo.orderFeeds.refinitiv',
          'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'shortDisplayName': 'RefinitivInstrument',
          'name': 'RefinitivInstrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.refinitiv.RefinitivInstrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument[]',
        'shortDisplayName': 'RefinitivInstrument[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
            'namespace': 'demo.orderFeeds.refinitiv',
            'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
            'shortDisplayName': 'RefinitivInstrument',
            'name': 'RefinitivInstrument'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.refinitiv.RefinitivInstrument>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument[]',
          'shortDisplayName': 'RefinitivInstrument[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'namespace': 'demo.orderFeeds.refinitiv',
          'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'shortDisplayName': 'RefinitivInstrument',
          'name': 'RefinitivInstrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.refinitiv.RefinitivInstrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument[]',
        'shortDisplayName': 'RefinitivInstrument[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
        'namespace': 'demo.orderFeeds.refinitiv',
        'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'RefinitivMarketDataService@@getInstruments'
      },
      'name': 'getInstruments'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/refinitiv-market-data.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.refinitiv {\n   service RefinitivMarketDataService {\n       operation getInstruments(): RefinitivInstrument[]\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/refinitiv-market-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/refinitiv-market-data.taxi:0.0.0',
      'contentHash': 'e153d4'
    }],
    'typeDoc': null,
    'lineage': null,
    'serviceKind': null,
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
        'namespace': 'demo.orderFeeds.refinitiv',
        'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'RefinitivMarketDataService@@getInstruments'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'namespace': 'demo.orderFeeds.refinitiv',
          'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'shortDisplayName': 'RefinitivInstrument',
          'name': 'RefinitivInstrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.refinitiv.RefinitivInstrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument[]',
        'shortDisplayName': 'RefinitivInstrument[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
            'namespace': 'demo.orderFeeds.refinitiv',
            'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
            'shortDisplayName': 'RefinitivInstrument',
            'name': 'RefinitivInstrument'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.refinitiv.RefinitivInstrument>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument[]',
          'shortDisplayName': 'RefinitivInstrument[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'namespace': 'demo.orderFeeds.refinitiv',
          'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'shortDisplayName': 'RefinitivInstrument',
          'name': 'RefinitivInstrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.refinitiv.RefinitivInstrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument[]',
        'shortDisplayName': 'RefinitivInstrument[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
        'namespace': 'demo.orderFeeds.refinitiv',
        'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'RefinitivMarketDataService@@getInstruments'
      },
      'name': 'getInstruments'
    }],
    'qualifiedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService',
      'namespace': 'demo.orderFeeds.refinitiv',
      'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService',
      'shortDisplayName': 'RefinitivMarketDataService',
      'name': 'RefinitivMarketDataService'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem',
      'shortDisplayName': 'FixedIncomeTradingSystem',
      'name': 'FixedIncomeTradingSystem'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem@@getTrades',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem@@getTrades',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem / getTrades',
        'shortDisplayName': 'getTrades',
        'name': 'FixedIncomeTradingSystem@@getTrades'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.trading.BondTrade',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.BondTrade',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.BondTrade',
          'shortDisplayName': 'BondTrade',
          'name': 'BondTrade'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.BondTrade>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.trading.BondTrade[]',
        'shortDisplayName': 'BondTrade[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.trading.BondTrade',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.trading.BondTrade',
            'namespace': 'demo.orderFeeds.trading',
            'longDisplayName': 'demo.orderFeeds.trading.BondTrade',
            'shortDisplayName': 'BondTrade',
            'name': 'BondTrade'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.BondTrade>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.trading.BondTrade[]',
          'shortDisplayName': 'BondTrade[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.trading.BondTrade',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.BondTrade',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.BondTrade',
          'shortDisplayName': 'BondTrade',
          'name': 'BondTrade'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.BondTrade>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.trading.BondTrade[]',
        'shortDisplayName': 'BondTrade[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem@@getTrades',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem@@getTrades',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem / getTrades',
        'shortDisplayName': 'getTrades',
        'name': 'FixedIncomeTradingSystem@@getTrades'
      },
      'name': 'getTrades'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.trading {\n   service FixedIncomeTradingSystem {\n       lineage {\n           consumes operation demo.orderFeeds.instrument.InstrumentService.getInstruments\n           consumes operation demo.orderFeeds.icap.IcapOrderFeedService.getOrders\n           consumes operation demo.orderFeeds.bloomberg.BloombergOrderFeedService.getOrders\n       }\n       operation getTrades(): BondTrade[]\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi:0.0.0',
      'contentHash': '508d29'
    }],
    'typeDoc': null,
    'lineage': {
      'consumes': [{
        'serviceName': 'demo.orderFeeds.instrument.InstrumentService',
        'operationName': 'getInstruments',
        'operationQualifiedName': {
          'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstruments',
          'shortDisplayName': 'getInstruments',
          'name': 'InstrumentService@@getInstruments'
        }
      }, {
        'serviceName': 'demo.orderFeeds.icap.IcapOrderFeedService',
        'operationName': 'getOrders',
        'operationQualifiedName': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrders',
          'shortDisplayName': 'getOrders',
          'name': 'IcapOrderFeedService@@getOrders'
        }
      }, {
        'serviceName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService',
        'operationName': 'getOrders',
        'operationQualifiedName': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrders',
          'shortDisplayName': 'getOrders',
          'name': 'BloombergOrderFeedService@@getOrders'
        }
      }], 'stores': [], 'metadata': []
    },
    'serviceKind': null,
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem@@getTrades',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem@@getTrades',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem / getTrades',
        'shortDisplayName': 'getTrades',
        'name': 'FixedIncomeTradingSystem@@getTrades'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.trading.BondTrade',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.BondTrade',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.BondTrade',
          'shortDisplayName': 'BondTrade',
          'name': 'BondTrade'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.BondTrade>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.trading.BondTrade[]',
        'shortDisplayName': 'BondTrade[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.trading.BondTrade',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.trading.BondTrade',
            'namespace': 'demo.orderFeeds.trading',
            'longDisplayName': 'demo.orderFeeds.trading.BondTrade',
            'shortDisplayName': 'BondTrade',
            'name': 'BondTrade'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.BondTrade>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.trading.BondTrade[]',
          'shortDisplayName': 'BondTrade[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.trading.BondTrade',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.BondTrade',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.BondTrade',
          'shortDisplayName': 'BondTrade',
          'name': 'BondTrade'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.BondTrade>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.trading.BondTrade[]',
        'shortDisplayName': 'BondTrade[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem@@getTrades',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem@@getTrades',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem / getTrades',
        'shortDisplayName': 'getTrades',
        'name': 'FixedIncomeTradingSystem@@getTrades'
      },
      'name': 'getTrades'
    }],
    'qualifiedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem',
      'shortDisplayName': 'FixedIncomeTradingSystem',
      'name': 'FixedIncomeTradingSystem'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.FxTradingSystem',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.FxTradingSystem',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.FxTradingSystem',
      'shortDisplayName': 'FxTradingSystem',
      'name': 'FxTradingSystem'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.FxTradingSystem@@getTrades',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.FxTradingSystem@@getTrades',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.FxTradingSystem / getTrades',
        'shortDisplayName': 'getTrades',
        'name': 'FxTradingSystem@@getTrades'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.trading.FxTrade',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.FxTrade',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.FxTrade',
          'shortDisplayName': 'FxTrade',
          'name': 'FxTrade'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.FxTrade>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.trading.FxTrade[]',
        'shortDisplayName': 'FxTrade[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.trading.FxTrade',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.trading.FxTrade',
            'namespace': 'demo.orderFeeds.trading',
            'longDisplayName': 'demo.orderFeeds.trading.FxTrade',
            'shortDisplayName': 'FxTrade',
            'name': 'FxTrade'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.FxTrade>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.trading.FxTrade[]',
          'shortDisplayName': 'FxTrade[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.trading.FxTrade',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.FxTrade',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.FxTrade',
          'shortDisplayName': 'FxTrade',
          'name': 'FxTrade'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.FxTrade>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.trading.FxTrade[]',
        'shortDisplayName': 'FxTrade[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.FxTradingSystem@@getTrades',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.FxTradingSystem@@getTrades',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.FxTradingSystem / getTrades',
        'shortDisplayName': 'getTrades',
        'name': 'FxTradingSystem@@getTrades'
      },
      'name': 'getTrades'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.trading {\n   service FxTradingSystem {\n       lineage {\n           consumes operation demo.orderFeeds.instrument.InstrumentService.getInstruments\n           consumes operation demo.orderFeeds.icap.IcapOrderFeedService.getOrders\n           consumes operation demo.orderFeeds.bloomberg.BloombergOrderFeedService.getOrders\n           consumes operation demo.orderFeeds.trading.DateService.getTradeDate\n       }\n       operation getTrades(): FxTrade[]\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi:0.0.0',
      'contentHash': '0f4df3'
    }],
    'typeDoc': null,
    'lineage': {
      'consumes': [{
        'serviceName': 'demo.orderFeeds.instrument.InstrumentService',
        'operationName': 'getInstruments',
        'operationQualifiedName': {
          'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstruments',
          'shortDisplayName': 'getInstruments',
          'name': 'InstrumentService@@getInstruments'
        }
      }, {
        'serviceName': 'demo.orderFeeds.icap.IcapOrderFeedService',
        'operationName': 'getOrders',
        'operationQualifiedName': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrders',
          'shortDisplayName': 'getOrders',
          'name': 'IcapOrderFeedService@@getOrders'
        }
      }, {
        'serviceName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService',
        'operationName': 'getOrders',
        'operationQualifiedName': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrders',
          'shortDisplayName': 'getOrders',
          'name': 'BloombergOrderFeedService@@getOrders'
        }
      }, {
        'serviceName': 'demo.orderFeeds.trading.DateService',
        'operationName': 'getTradeDate',
        'operationQualifiedName': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.DateService / getTradeDate',
          'shortDisplayName': 'getTradeDate',
          'name': 'DateService@@getTradeDate'
        }
      }], 'stores': [], 'metadata': []
    },
    'serviceKind': null,
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.FxTradingSystem@@getTrades',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.FxTradingSystem@@getTrades',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.FxTradingSystem / getTrades',
        'shortDisplayName': 'getTrades',
        'name': 'FxTradingSystem@@getTrades'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.trading.FxTrade',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.FxTrade',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.FxTrade',
          'shortDisplayName': 'FxTrade',
          'name': 'FxTrade'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.FxTrade>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.trading.FxTrade[]',
        'shortDisplayName': 'FxTrade[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.trading.FxTrade',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.trading.FxTrade',
            'namespace': 'demo.orderFeeds.trading',
            'longDisplayName': 'demo.orderFeeds.trading.FxTrade',
            'shortDisplayName': 'FxTrade',
            'name': 'FxTrade'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.FxTrade>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.trading.FxTrade[]',
          'shortDisplayName': 'FxTrade[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.trading.FxTrade',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.FxTrade',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.FxTrade',
          'shortDisplayName': 'FxTrade',
          'name': 'FxTrade'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.FxTrade>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.trading.FxTrade[]',
        'shortDisplayName': 'FxTrade[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.FxTradingSystem@@getTrades',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.FxTradingSystem@@getTrades',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.FxTradingSystem / getTrades',
        'shortDisplayName': 'getTrades',
        'name': 'FxTradingSystem@@getTrades'
      },
      'name': 'getTrades'
    }],
    'qualifiedName': 'demo.orderFeeds.trading.FxTradingSystem',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.FxTradingSystem',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.FxTradingSystem',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.FxTradingSystem',
      'shortDisplayName': 'FxTradingSystem',
      'name': 'FxTradingSystem'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.DateService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.DateService',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.DateService',
      'shortDisplayName': 'DateService',
      'name': 'DateService'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.DateService / getTradeDate',
        'shortDisplayName': 'getTradeDate',
        'name': 'DateService@@getTradeDate'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementPeriod',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.SettlementPeriod',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.SettlementPeriod',
          'shortDisplayName': 'SettlementPeriod',
          'name': 'SettlementPeriod'
        },
        'name': 'period',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementPeriod',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.SettlementPeriod',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.SettlementPeriod',
          'shortDisplayName': 'SettlementPeriod',
          'name': 'SettlementPeriod'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.CurrencyPair',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.CurrencyPair',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.CurrencyPair',
          'shortDisplayName': 'CurrencyPair',
          'name': 'CurrencyPair'
        },
        'name': 'currencyPair',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.CurrencyPair',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.CurrencyPair',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.CurrencyPair',
          'shortDisplayName': 'CurrencyPair',
          'name': 'CurrencyPair'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
        'shortDisplayName': 'SettlementDate',
        'name': 'SettlementDate'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
          'shortDisplayName': 'SettlementDate',
          'name': 'SettlementDate'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
        'shortDisplayName': 'SettlementDate',
        'name': 'SettlementDate'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.DateService / getTradeDate',
        'shortDisplayName': 'getTradeDate',
        'name': 'DateService@@getTradeDate'
      },
      'name': 'getTradeDate'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.trading {\n   service DateService {\n       operation getTradeDate(period: SettlementPeriod, currencyPair: CurrencyPair): SettlementDate\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/trading-system.taxi:0.0.0',
      'contentHash': 'f80a2d'
    }],
    'typeDoc': null,
    'lineage': null,
    'serviceKind': null,
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.DateService / getTradeDate',
        'shortDisplayName': 'getTradeDate',
        'name': 'DateService@@getTradeDate'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementPeriod',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.SettlementPeriod',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.SettlementPeriod',
          'shortDisplayName': 'SettlementPeriod',
          'name': 'SettlementPeriod'
        },
        'name': 'period',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementPeriod',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.SettlementPeriod',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.SettlementPeriod',
          'shortDisplayName': 'SettlementPeriod',
          'name': 'SettlementPeriod'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.CurrencyPair',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.CurrencyPair',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.CurrencyPair',
          'shortDisplayName': 'CurrencyPair',
          'name': 'CurrencyPair'
        },
        'name': 'currencyPair',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.CurrencyPair',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.CurrencyPair',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.CurrencyPair',
          'shortDisplayName': 'CurrencyPair',
          'name': 'CurrencyPair'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
        'shortDisplayName': 'SettlementDate',
        'name': 'SettlementDate'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
          'shortDisplayName': 'SettlementDate',
          'name': 'SettlementDate'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
        'shortDisplayName': 'SettlementDate',
        'name': 'SettlementDate'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.DateService / getTradeDate',
        'shortDisplayName': 'getTradeDate',
        'name': 'DateService@@getTradeDate'
      },
      'name': 'getTradeDate'
    }],
    'qualifiedName': 'demo.orderFeeds.trading.DateService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.DateService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.DateService',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.DateService',
      'shortDisplayName': 'DateService',
      'name': 'DateService'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService',
      'shortDisplayName': 'BloombergOrderFeedService',
      'name': 'BloombergOrderFeedService'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrders',
        'shortDisplayName': 'getOrders',
        'name': 'BloombergOrderFeedService@@getOrders'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'shortDisplayName': 'BloombergOrder',
          'name': 'BloombergOrder'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.bloomberg.BloombergOrder>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder[]',
        'shortDisplayName': 'BloombergOrder[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/orders' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
            'namespace': 'demo.orderFeeds.bloomberg',
            'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
            'shortDisplayName': 'BloombergOrder',
            'name': 'BloombergOrder'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.bloomberg.BloombergOrder>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder[]',
          'shortDisplayName': 'BloombergOrder[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'shortDisplayName': 'BloombergOrder',
          'name': 'BloombergOrder'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.bloomberg.BloombergOrder>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder[]',
        'shortDisplayName': 'BloombergOrder[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrders',
        'shortDisplayName': 'getOrders',
        'name': 'BloombergOrderFeedService@@getOrders'
      },
      'name': 'getOrders'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrder',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrder',
        'shortDisplayName': 'getOrder',
        'name': 'BloombergOrderFeedService@@getOrder'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'shortDisplayName': 'BloombergOrderId',
          'name': 'BloombergOrderId'
        },
        'name': 'orderId',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'shortDisplayName': 'BloombergOrderId',
          'name': 'BloombergOrderId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'shortDisplayName': 'BloombergOrder',
        'name': 'BloombergOrder'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/order/{orderId}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'shortDisplayName': 'BloombergOrder',
          'name': 'BloombergOrder'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'shortDisplayName': 'BloombergOrder',
        'name': 'BloombergOrder'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrder',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrder',
        'shortDisplayName': 'getOrder',
        'name': 'BloombergOrderFeedService@@getOrder'
      },
      'name': 'getOrder'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'Datasource',
        'parameters': [],
        'parameterizedName': 'Datasource',
        'namespace': '',
        'longDisplayName': 'Datasource',
        'shortDisplayName': 'Datasource',
        'name': 'Datasource'
      }, 'params': {}
    }, {
      'name': {
        'fullyQualifiedName': 'ServiceDiscoveryClient',
        'parameters': [],
        'parameterizedName': 'ServiceDiscoveryClient',
        'namespace': '',
        'longDisplayName': 'ServiceDiscoveryClient',
        'shortDisplayName': 'ServiceDiscoveryClient',
        'name': 'ServiceDiscoveryClient'
      }, 'params': { 'serviceName': 'bloomberg-order-feed' }
    }],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.bloomberg {\n   @Datasource\n   @ServiceDiscoveryClient(serviceName = "bloomberg-order-feed")\n   service BloombergOrderFeedService {\n       @HttpOperation(method = \'GET\', url = \'/orders\')\n       operation getOrders(): BloombergOrder[]\n       @HttpOperation(method = \'GET\', url = \'/order/{orderId}\')\n       operation getOrder(orderId: BloombergOrderId): BloombergOrder\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bloomberg-order-feed.taxi:0.0.0',
      'contentHash': '74ac76'
    }],
    'typeDoc': null,
    'lineage': null,
    'serviceKind': 'API',
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrders',
        'shortDisplayName': 'getOrders',
        'name': 'BloombergOrderFeedService@@getOrders'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'shortDisplayName': 'BloombergOrder',
          'name': 'BloombergOrder'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.bloomberg.BloombergOrder>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder[]',
        'shortDisplayName': 'BloombergOrder[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/orders' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
            'namespace': 'demo.orderFeeds.bloomberg',
            'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
            'shortDisplayName': 'BloombergOrder',
            'name': 'BloombergOrder'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.bloomberg.BloombergOrder>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder[]',
          'shortDisplayName': 'BloombergOrder[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'shortDisplayName': 'BloombergOrder',
          'name': 'BloombergOrder'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.bloomberg.BloombergOrder>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder[]',
        'shortDisplayName': 'BloombergOrder[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrders',
        'shortDisplayName': 'getOrders',
        'name': 'BloombergOrderFeedService@@getOrders'
      },
      'name': 'getOrders'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrder',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrder',
        'shortDisplayName': 'getOrder',
        'name': 'BloombergOrderFeedService@@getOrder'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'shortDisplayName': 'BloombergOrderId',
          'name': 'BloombergOrderId'
        },
        'name': 'orderId',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
          'shortDisplayName': 'BloombergOrderId',
          'name': 'BloombergOrderId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'shortDisplayName': 'BloombergOrder',
        'name': 'BloombergOrder'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/order/{orderId}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'shortDisplayName': 'BloombergOrder',
          'name': 'BloombergOrder'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'shortDisplayName': 'BloombergOrder',
        'name': 'BloombergOrder'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrder',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrder',
        'shortDisplayName': 'getOrder',
        'name': 'BloombergOrderFeedService@@getOrder'
      },
      'name': 'getOrder'
    }],
    'qualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService',
      'shortDisplayName': 'BloombergOrderFeedService',
      'name': 'BloombergOrderFeedService'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService',
      'namespace': 'demo.orderFeeds.instrument',
      'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService',
      'shortDisplayName': 'InstrumentService',
      'name': 'InstrumentService'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'InstrumentService@@getInstruments'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
        'shortDisplayName': 'Instrument[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/instruments' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
            'namespace': 'demo.orderFeeds.instrument',
            'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
            'shortDisplayName': 'Instrument',
            'name': 'Instrument'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
          'shortDisplayName': 'Instrument[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
        'shortDisplayName': 'Instrument[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'InstrumentService@@getInstruments'
      },
      'name': 'getInstruments'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstrument',
        'shortDisplayName': 'getInstrument',
        'name': 'InstrumentService@@getInstrument'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.InstrumentId',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.InstrumentId',
          'shortDisplayName': 'InstrumentId',
          'name': 'InstrumentId'
        },
        'name': 'id',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.InstrumentId',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.InstrumentId',
          'shortDisplayName': 'InstrumentId',
          'name': 'InstrumentId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/instrument/{id}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstrument',
        'shortDisplayName': 'getInstrument',
        'name': 'InstrumentService@@getInstrument'
      },
      'name': 'getInstrument'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'ServiceDiscoveryClient',
        'parameters': [],
        'parameterizedName': 'ServiceDiscoveryClient',
        'namespace': '',
        'longDisplayName': 'ServiceDiscoveryClient',
        'shortDisplayName': 'ServiceDiscoveryClient',
        'name': 'ServiceDiscoveryClient'
      }, 'params': { 'serviceName': 'instrument-ref-service' }
    }],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/instrument.taxi',
      'version': '0.0.0',
      'content': 'import demo.orderFeeds.InstrumentId\nnamespace demo.orderFeeds.instrument {\n   @ServiceDiscoveryClient(serviceName = "instrument-ref-service")\n   service InstrumentService {\n       lineage {\n           consumes operation demo.orderFeeds.reuters.ReutersMarketDataService.getInstruments\n           consumes operation demo.orderFeeds.refinitiv.RefinitivMarketDataService.getInstruments\n       }\n       @HttpOperation(method = \'GET\', url = \'/instruments\')\n       operation getInstruments(): Instrument[]\n       @HttpOperation(method = \'GET\', url = \'/instrument/{id}\')\n       operation getInstrument(id: InstrumentId): Instrument\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/instrument.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/instrument.taxi:0.0.0',
      'contentHash': '419b7d'
    }],
    'typeDoc': null,
    'lineage': {
      'consumes': [{
        'serviceName': 'demo.orderFeeds.reuters.ReutersMarketDataService',
        'operationName': 'getInstruments',
        'operationQualifiedName': {
          'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
          'namespace': 'demo.orderFeeds.reuters',
          'longDisplayName': 'demo.orderFeeds.reuters.ReutersMarketDataService / getInstruments',
          'shortDisplayName': 'getInstruments',
          'name': 'ReutersMarketDataService@@getInstruments'
        }
      }, {
        'serviceName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService',
        'operationName': 'getInstruments',
        'operationQualifiedName': {
          'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
          'namespace': 'demo.orderFeeds.refinitiv',
          'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService / getInstruments',
          'shortDisplayName': 'getInstruments',
          'name': 'RefinitivMarketDataService@@getInstruments'
        }
      }], 'stores': [], 'metadata': []
    },
    'serviceKind': 'API',
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'InstrumentService@@getInstruments'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
        'shortDisplayName': 'Instrument[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/instruments' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
            'namespace': 'demo.orderFeeds.instrument',
            'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
            'shortDisplayName': 'Instrument',
            'name': 'Instrument'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
          'shortDisplayName': 'Instrument[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
        'shortDisplayName': 'Instrument[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'InstrumentService@@getInstruments'
      },
      'name': 'getInstruments'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstrument',
        'shortDisplayName': 'getInstrument',
        'name': 'InstrumentService@@getInstrument'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.InstrumentId',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.InstrumentId',
          'shortDisplayName': 'InstrumentId',
          'name': 'InstrumentId'
        },
        'name': 'id',
        'metadata': [],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.InstrumentId',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.InstrumentId',
          'shortDisplayName': 'InstrumentId',
          'name': 'InstrumentId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/instrument/{id}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstrument',
        'shortDisplayName': 'getInstrument',
        'name': 'InstrumentService@@getInstrument'
      },
      'name': 'getInstrument'
    }],
    'qualifiedName': 'demo.orderFeeds.instrument.InstrumentService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService',
      'namespace': 'demo.orderFeeds.instrument',
      'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService',
      'shortDisplayName': 'InstrumentService',
      'name': 'InstrumentService'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersMarketDataService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.reuters.ReutersMarketDataService',
      'namespace': 'demo.orderFeeds.reuters',
      'longDisplayName': 'demo.orderFeeds.reuters.ReutersMarketDataService',
      'shortDisplayName': 'ReutersMarketDataService',
      'name': 'ReutersMarketDataService'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
        'namespace': 'demo.orderFeeds.reuters',
        'longDisplayName': 'demo.orderFeeds.reuters.ReutersMarketDataService / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'ReutersMarketDataService@@getInstruments'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'namespace': 'demo.orderFeeds.reuters',
          'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'shortDisplayName': 'ReutersInstrument',
          'name': 'ReutersInstrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.reuters.ReutersInstrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument[]',
        'shortDisplayName': 'ReutersInstrument[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrument',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrument',
            'namespace': 'demo.orderFeeds.reuters',
            'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument',
            'shortDisplayName': 'ReutersInstrument',
            'name': 'ReutersInstrument'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.reuters.ReutersInstrument>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument[]',
          'shortDisplayName': 'ReutersInstrument[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'namespace': 'demo.orderFeeds.reuters',
          'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'shortDisplayName': 'ReutersInstrument',
          'name': 'ReutersInstrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.reuters.ReutersInstrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument[]',
        'shortDisplayName': 'ReutersInstrument[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
        'namespace': 'demo.orderFeeds.reuters',
        'longDisplayName': 'demo.orderFeeds.reuters.ReutersMarketDataService / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'ReutersMarketDataService@@getInstruments'
      },
      'name': 'getInstruments'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/reuters-market-data.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.reuters {\n   service ReutersMarketDataService {\n       operation getInstruments(): ReutersInstrument[]\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/reuters-market-data.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/reuters-market-data.taxi:0.0.0',
      'contentHash': 'c7ae79'
    }],
    'typeDoc': null,
    'lineage': null,
    'serviceKind': null,
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
        'namespace': 'demo.orderFeeds.reuters',
        'longDisplayName': 'demo.orderFeeds.reuters.ReutersMarketDataService / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'ReutersMarketDataService@@getInstruments'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'namespace': 'demo.orderFeeds.reuters',
          'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'shortDisplayName': 'ReutersInstrument',
          'name': 'ReutersInstrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.reuters.ReutersInstrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument[]',
        'shortDisplayName': 'ReutersInstrument[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrument',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrument',
            'namespace': 'demo.orderFeeds.reuters',
            'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument',
            'shortDisplayName': 'ReutersInstrument',
            'name': 'ReutersInstrument'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.reuters.ReutersInstrument>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument[]',
          'shortDisplayName': 'ReutersInstrument[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'namespace': 'demo.orderFeeds.reuters',
          'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'shortDisplayName': 'ReutersInstrument',
          'name': 'ReutersInstrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.reuters.ReutersInstrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument[]',
        'shortDisplayName': 'ReutersInstrument[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
        'namespace': 'demo.orderFeeds.reuters',
        'longDisplayName': 'demo.orderFeeds.reuters.ReutersMarketDataService / getInstruments',
        'shortDisplayName': 'getInstruments',
        'name': 'ReutersMarketDataService@@getInstruments'
      },
      'name': 'getInstruments'
    }],
    'qualifiedName': 'demo.orderFeeds.reuters.ReutersMarketDataService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersMarketDataService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.reuters.ReutersMarketDataService',
      'namespace': 'demo.orderFeeds.reuters',
      'longDisplayName': 'demo.orderFeeds.reuters.ReutersMarketDataService',
      'shortDisplayName': 'ReutersMarketDataService',
      'name': 'ReutersMarketDataService'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.ClientService',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.ClientService',
      'shortDisplayName': 'ClientService',
      'name': 'ClientService'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService@@getClients',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.ClientService@@getClients',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.ClientService / getClients',
        'shortDisplayName': 'getClients',
        'name': 'ClientService@@getClients'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.Client',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.Client',
          'shortDisplayName': 'Client',
          'name': 'Client'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.clients.Client>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.clients.Client[]',
        'shortDisplayName': 'Client[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/clients' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.clients.Client',
            'namespace': 'demo.orderFeeds.clients',
            'longDisplayName': 'demo.orderFeeds.clients.Client',
            'shortDisplayName': 'Client',
            'name': 'Client'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.clients.Client>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.clients.Client[]',
          'shortDisplayName': 'Client[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.Client',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.Client',
          'shortDisplayName': 'Client',
          'name': 'Client'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.clients.Client>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.clients.Client[]',
        'shortDisplayName': 'Client[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService@@getClients',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.ClientService@@getClients',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.ClientService / getClients',
        'shortDisplayName': 'getClients',
        'name': 'ClientService@@getClients'
      },
      'name': 'getClients'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService@@getClient',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.ClientService@@getClient',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.ClientService / getClient',
        'shortDisplayName': 'getClient',
        'name': 'ClientService@@getClient'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.clients.BankClientId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.BankClientId',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.BankClientId',
          'shortDisplayName': 'BankClientId',
          'name': 'BankClientId'
        },
        'name': 'id',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'id' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.clients.BankClientId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.BankClientId',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.BankClientId',
          'shortDisplayName': 'BankClientId',
          'name': 'BankClientId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.Client',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.Client',
        'shortDisplayName': 'Client',
        'name': 'Client'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/client/{id}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.Client',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.Client',
          'shortDisplayName': 'Client',
          'name': 'Client'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.Client',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.Client',
        'shortDisplayName': 'Client',
        'name': 'Client'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService@@getClient',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.ClientService@@getClient',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.ClientService / getClient',
        'shortDisplayName': 'getClient',
        'name': 'ClientService@@getClient'
      },
      'name': 'getClient'
    }],
    'queryOperations': [],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'ServiceDiscoveryClient',
        'parameters': [],
        'parameterizedName': 'ServiceDiscoveryClient',
        'namespace': '',
        'longDisplayName': 'ServiceDiscoveryClient',
        'shortDisplayName': 'ServiceDiscoveryClient',
        'name': 'ServiceDiscoveryClient'
      }, 'params': { 'serviceName': 'client-service' }
    }],
    'sourceCode': [{
      'name': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi',
      'version': '0.0.0',
      'content': 'namespace demo.orderFeeds.clients {\n   @ServiceDiscoveryClient(serviceName = "client-service")\n   service ClientService {\n       @HttpOperation(method = \'GET\', url = \'/clients\')\n       operation getClients(): Client[]\n       @HttpOperation(method = \'GET\', url = \'/client/{id}\')\n       operation getClient(@PathVariable(name = "id") id: BankClientId): Client\n   }\n}',
      'packageIdentifier': {
        'organisation': 'demo.orderFeeds',
        'name': 'OrdersEnrichmentAndLineage',
        'version': '0.1.0',
        'unversionedId': 'demo.orderFeeds/OrdersEnrichmentAndLineage',
        'id': 'demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0',
        'uriSafeId': 'demo.orderFeeds:OrdersEnrichmentAndLineage:0.1.0'
      },
      'packageQualifiedName': '[demo.orderFeeds/OrdersEnrichmentAndLineage/0.1.0]/file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi',
      'id': 'file:///home/martypitt/dev/vyne-demos/orders-enrichment-and-lineage/taxonomy/./src/bank-clients.taxi:0.0.0',
      'contentHash': 'cc4f44'
    }],
    'typeDoc': null,
    'lineage': null,
    'serviceKind': 'API',
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService@@getClients',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.ClientService@@getClients',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.ClientService / getClients',
        'shortDisplayName': 'getClients',
        'name': 'ClientService@@getClients'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.Client',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.Client',
          'shortDisplayName': 'Client',
          'name': 'Client'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.clients.Client>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.clients.Client[]',
        'shortDisplayName': 'Client[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/clients' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.clients.Client',
            'namespace': 'demo.orderFeeds.clients',
            'longDisplayName': 'demo.orderFeeds.clients.Client',
            'shortDisplayName': 'Client',
            'name': 'Client'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.clients.Client>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.clients.Client[]',
          'shortDisplayName': 'Client[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.Client',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.Client',
          'shortDisplayName': 'Client',
          'name': 'Client'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.clients.Client>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.clients.Client[]',
        'shortDisplayName': 'Client[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService@@getClients',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.ClientService@@getClients',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.ClientService / getClients',
        'shortDisplayName': 'getClients',
        'name': 'ClientService@@getClients'
      },
      'name': 'getClients'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService@@getClient',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.ClientService@@getClient',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.ClientService / getClient',
        'shortDisplayName': 'getClient',
        'name': 'ClientService@@getClient'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.clients.BankClientId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.BankClientId',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.BankClientId',
          'shortDisplayName': 'BankClientId',
          'name': 'BankClientId'
        },
        'name': 'id',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'id' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.clients.BankClientId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.BankClientId',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.BankClientId',
          'shortDisplayName': 'BankClientId',
          'name': 'BankClientId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.Client',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.Client',
        'shortDisplayName': 'Client',
        'name': 'Client'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/client/{id}' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.Client',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.Client',
          'shortDisplayName': 'Client',
          'name': 'Client'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.Client',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.Client',
        'shortDisplayName': 'Client',
        'name': 'Client'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService@@getClient',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.ClientService@@getClient',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.ClientService / getClient',
        'shortDisplayName': 'getClient',
        'name': 'ClientService@@getClient'
      },
      'name': 'getClient'
    }],
    'qualifiedName': 'demo.orderFeeds.clients.ClientService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.ClientService',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.ClientService',
      'shortDisplayName': 'ClientService',
      'name': 'ClientService'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService',
      'shortDisplayName': 'TraderIdMappingsCaskService',
      'name': 'TraderIdMappingsCaskService'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@getAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@getAll',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / getAll',
        'shortDisplayName': 'getAll',
        'name': 'TraderIdMappingsCaskService@@getAll'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/api/cask/findAll/demo/orderFeeds/traderIdMappings/TraderIdMappings' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
          'shortDisplayName': 'TraderIdMappings[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@getAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@getAll',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / getAll',
        'shortDisplayName': 'getAll',
        'name': 'TraderIdMappingsCaskService@@getAll'
      },
      'name': 'getAll'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetween',
        'shortDisplayName': 'findByCaskInsertedAtBetween',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetween'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/Between/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
          'shortDisplayName': 'TraderIdMappings[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetween',
        'shortDisplayName': 'findByCaskInsertedAtBetween',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetween'
      },
      'name': 'findByCaskInsertedAtBetween'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGteLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGteLte',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/BetweenGteLte/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
          'shortDisplayName': 'TraderIdMappings[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGteLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGteLte',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte'
      },
      'name': 'findByCaskInsertedAtBetweenGteLte'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGtLt',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLt',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/BetweenGtLt/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
          'shortDisplayName': 'TraderIdMappings[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGtLt',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLt',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt'
      },
      'name': 'findByCaskInsertedAtBetweenGtLt'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGtLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLte',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/BetweenGtLte/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
          'shortDisplayName': 'TraderIdMappings[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGtLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLte',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte'
      },
      'name': 'findByCaskInsertedAtBetweenGtLte'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamAll',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamAll',
        'shortDisplayName': 'streamAll',
        'name': 'TraderIdMappingsCaskService@@streamAll'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/api/cask/streamAll/demo/orderFeeds/traderIdMappings/TraderIdMappings' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Stream',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'shortDisplayName': 'Stream<TraderIdMappings>',
          'name': 'Stream'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamAll',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamAll',
        'shortDisplayName': 'streamAll',
        'name': 'TraderIdMappingsCaskService@@streamAll'
      },
      'name': 'streamAll'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamByCaskInsertedAtBetween',
        'shortDisplayName': 'streamByCaskInsertedAtBetween',
        'name': 'TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings><vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/streamBetween/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Stream',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings><vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'shortDisplayName': 'Stream<TraderIdMappings>',
          'name': 'Stream'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings><vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamByCaskInsertedAtBetween',
        'shortDisplayName': 'streamByCaskInsertedAtBetween',
        'name': 'TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween'
      },
      'name': 'streamByCaskInsertedAtBetween'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByBloombergId',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByBloombergId',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findSingleByBloombergId',
        'shortDisplayName': 'findSingleByBloombergId',
        'name': 'TraderIdMappingsCaskService@@findSingleByBloombergId'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'shortDisplayName': 'BloombergTraderId',
          'name': 'BloombergTraderId'
        },
        'name': 'id',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'id' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'shortDisplayName': 'BloombergTraderId',
          'name': 'BloombergTraderId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/findSingleBy/demo/orderFeeds/traderIdMappings/TraderIdMappings/bloombergId/{id}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'demo.orderFeeds.bloomberg',
              'typeName': 'BloombergTraderId',
              'parameters': [],
              'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
              'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
              'firstTypeParameterOrSelf': 'demo.orderFeeds.bloomberg.BloombergTraderId'
            },
            'description': 'type demo.orderFeeds.bloomberg.BloombergTraderId',
            'taxi': 'demo.orderFeeds.bloomberg.BloombergTraderId'
          },
          'operator': 'EQUAL',
          'expectedValue': { 'path': { 'parts': ['id'], 'path': 'id' }, 'taxi': 'id' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByBloombergId',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByBloombergId',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findSingleByBloombergId',
        'shortDisplayName': 'findSingleByBloombergId',
        'name': 'TraderIdMappingsCaskService@@findSingleByBloombergId'
      },
      'name': 'findSingleByBloombergId'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByIcapId',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByIcapId',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findSingleByIcapId',
        'shortDisplayName': 'findSingleByIcapId',
        'name': 'TraderIdMappingsCaskService@@findSingleByIcapId'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
          'shortDisplayName': 'IcapTraderId',
          'name': 'IcapTraderId'
        },
        'name': 'id',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'id' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
          'shortDisplayName': 'IcapTraderId',
          'name': 'IcapTraderId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/findSingleBy/demo/orderFeeds/traderIdMappings/TraderIdMappings/icapId/{id}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'demo.orderFeeds.icap',
              'typeName': 'IcapTraderId',
              'parameters': [],
              'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
              'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
              'firstTypeParameterOrSelf': 'demo.orderFeeds.icap.IcapTraderId'
            }, 'description': 'type demo.orderFeeds.icap.IcapTraderId', 'taxi': 'demo.orderFeeds.icap.IcapTraderId'
          },
          'operator': 'EQUAL',
          'expectedValue': { 'path': { 'parts': ['id'], 'path': 'id' }, 'taxi': 'id' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByIcapId',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByIcapId',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findSingleByIcapId',
        'shortDisplayName': 'findSingleByIcapId',
        'name': 'TraderIdMappingsCaskService@@findSingleByIcapId'
      },
      'name': 'findSingleByIcapId'
    }],
    'queryOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamVyneQlQueryTraderIdMappings',
        'shortDisplayName': 'streamVyneQlQueryTraderIdMappings',
        'name': 'TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        },
        'name': 'body',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'RequestBody',
            'parameters': [],
            'parameterizedName': 'RequestBody',
            'namespace': '',
            'longDisplayName': 'RequestBody',
            'shortDisplayName': 'RequestBody',
            'name': 'RequestBody'
          }, 'params': {}
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'POST', 'url': '/api/continuous/vyneQl' }
      }],
      'grammar': 'vyneQl',
      'capabilities': [{ 'supportedOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'] }],
      'typeDoc': null,
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Stream',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'shortDisplayName': 'Stream<TraderIdMappings>',
          'name': 'Stream'
        }, 'constraints': []
      },
      'operationType': null,
      'hasFilterCapability': true,
      'supportedFilterOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'],
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamVyneQlQueryTraderIdMappings',
        'shortDisplayName': 'streamVyneQlQueryTraderIdMappings',
        'name': 'TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings'
      },
      'name': 'streamVyneQlQueryTraderIdMappings'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / vyneQlQueryTraderIdMappings',
        'shortDisplayName': 'vyneQlQueryTraderIdMappings',
        'name': 'TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        },
        'name': 'body',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'RequestBody',
            'parameters': [],
            'parameterizedName': 'RequestBody',
            'namespace': '',
            'longDisplayName': 'RequestBody',
            'shortDisplayName': 'RequestBody',
            'name': 'RequestBody'
          }, 'params': {}
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'POST', 'url': '/api/vyneQl' }
      }],
      'grammar': 'vyneQl',
      'capabilities': [{ 'supportedOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'] }],
      'typeDoc': null,
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
          'shortDisplayName': 'TraderIdMappings[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'operationType': null,
      'hasFilterCapability': true,
      'supportedFilterOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'],
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / vyneQlQueryTraderIdMappings',
        'shortDisplayName': 'vyneQlQueryTraderIdMappings',
        'name': 'TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings'
      },
      'name': 'vyneQlQueryTraderIdMappings'
    }],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'ServiceDiscoveryClient',
        'parameters': [],
        'parameterizedName': 'ServiceDiscoveryClient',
        'namespace': '',
        'longDisplayName': 'ServiceDiscoveryClient',
        'shortDisplayName': 'ServiceDiscoveryClient',
        'name': 'ServiceDiscoveryClient'
      }, 'params': { 'serviceName': 'cask' }
    }, {
      'name': {
        'fullyQualifiedName': 'Datasource',
        'parameters': [],
        'parameterizedName': 'Datasource',
        'namespace': '',
        'longDisplayName': 'Datasource',
        'shortDisplayName': 'Datasource',
        'name': 'Datasource'
      }, 'params': {}
    }],
    'sourceCode': [{
      'name': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'version': '0.0.0',
      'content': 'import vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport lang.taxi.Stream\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport lang.taxi.Stream\nimport vyne.vyneQl.VyneQlQuery\nimport lang.taxi.Stream\nimport vyne.vyneQl.VyneQlQuery\nimport demo.orderFeeds.bloomberg.BloombergTraderId\nimport demo.orderFeeds.traderIdMappings.TraderIdMappings\nimport demo.orderFeeds.icap.IcapTraderId\nimport demo.orderFeeds.traderIdMappings.TraderIdMappings\nimport demo.orderFeeds.traderIdMappings.TraderIdMappings\nimport demo.orderFeeds.traderIdMappings.TraderIdMappings\nimport demo.orderFeeds.traderIdMappings.TraderIdMappings\nimport demo.orderFeeds.traderIdMappings.TraderIdMappings\nnamespace vyne.cask.demo.orderFeeds.traderIdMappings {\n   @ServiceDiscoveryClient(serviceName = "cask")\n      @Datasource\n      service TraderIdMappingsCaskService {\n         @HttpOperation(method = "GET" , url = "/api/cask/findAll/demo/orderFeeds/traderIdMappings/TraderIdMappings")\n         operation getAll(  ) : demo.orderFeeds.traderIdMappings.TraderIdMappings[]\n         @HttpOperation(method = "GET" , url = "/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/Between/{start}/{end}")\n         operation findByCaskInsertedAtBetween( @PathVariable(name = "start") start : vyne.cask.CaskInsertedAt, @PathVariable(name = "end") end : vyne.cask.CaskInsertedAt ) : TraderIdMappings[]( vyne.cask.CaskInsertedAt >= start, vyne.cask.CaskInsertedAt < end )\n         @HttpOperation(method = "GET" , url = "/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/BetweenGteLte/{start}/{end}")\n         operation findByCaskInsertedAtBetweenGteLte( @PathVariable(name = "start") start : vyne.cask.CaskInsertedAt, @PathVariable(name = "end") end : vyne.cask.CaskInsertedAt ) : TraderIdMappings[]( vyne.cask.CaskInsertedAt >= start, vyne.cask.CaskInsertedAt <= end )\n         @HttpOperation(method = "GET" , url = "/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/BetweenGtLt/{start}/{end}")\n         operation findByCaskInsertedAtBetweenGtLt( @PathVariable(name = "start") start : vyne.cask.CaskInsertedAt, @PathVariable(name = "end") end : vyne.cask.CaskInsertedAt ) : TraderIdMappings[]( vyne.cask.CaskInsertedAt > start, vyne.cask.CaskInsertedAt < end )\n         @HttpOperation(method = "GET" , url = "/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/BetweenGtLte/{start}/{end}")\n         operation findByCaskInsertedAtBetweenGtLte( @PathVariable(name = "start") start : vyne.cask.CaskInsertedAt, @PathVariable(name = "end") end : vyne.cask.CaskInsertedAt ) : TraderIdMappings[]( vyne.cask.CaskInsertedAt > start, vyne.cask.CaskInsertedAt <= end )\n         @HttpOperation(method = "GET" , url = "/api/cask/streamAll/demo/orderFeeds/traderIdMappings/TraderIdMappings")\n         operation streamAll(  ) : Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>\n         @HttpOperation(method = "GET" , url = "/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/streamBetween/{start}/{end}")\n         operation streamByCaskInsertedAtBetween( @PathVariable(name = "start") start : vyne.cask.CaskInsertedAt, @PathVariable(name = "end") end : vyne.cask.CaskInsertedAt ) : Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>( vyne.cask.CaskInsertedAt >= start, vyne.cask.CaskInsertedAt < end )\n         @HttpOperation(method = "POST", url = "/api/continuous/vyneQl")\n         vyneQl query streamVyneQlQueryTraderIdMappings(@RequestBody body: vyne.vyneQl.VyneQlQuery):lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings> with capabilities {\n            filter(==,!=,in,like,>,<,>=,<=)\n         }\n         @HttpOperation(method = "POST", url = "/api/vyneQl")\n         vyneQl query vyneQlQueryTraderIdMappings(@RequestBody body: vyne.vyneQl.VyneQlQuery):lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings> with capabilities {\n            filter(==,!=,in,like,>,<,>=,<=)\n         }\n         @HttpOperation(method = "GET" , url = "/api/cask/findSingleBy/demo/orderFeeds/traderIdMappings/TraderIdMappings/bloombergId/{id}")\n         operation findSingleByBloombergId( @PathVariable(name = "id") id : demo.orderFeeds.bloomberg.BloombergTraderId ) : demo.orderFeeds.traderIdMappings.TraderIdMappings( demo.orderFeeds.bloomberg.BloombergTraderId == id )\n         @HttpOperation(method = "GET" , url = "/api/cask/findSingleBy/demo/orderFeeds/traderIdMappings/TraderIdMappings/icapId/{id}")\n         operation findSingleByIcapId( @PathVariable(name = "id") id : demo.orderFeeds.icap.IcapTraderId ) : demo.orderFeeds.traderIdMappings.TraderIdMappings( demo.orderFeeds.icap.IcapTraderId == id )\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne.cask',
        'name': 'generated-schemas',
        'version': '1.7.0',
        'unversionedId': 'io.vyne.cask/generated-schemas',
        'id': 'io.vyne.cask/generated-schemas/1.7.0',
        'uriSafeId': 'io.vyne.cask:generated-schemas:1.7.0'
      },
      'packageQualifiedName': '[io.vyne.cask/generated-schemas/1.7.0]/vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'id': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings:0.0.0',
      'contentHash': '93e0ad'
    }],
    'typeDoc': null,
    'lineage': null,
    'serviceKind': 'API',
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@getAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@getAll',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / getAll',
        'shortDisplayName': 'getAll',
        'name': 'TraderIdMappingsCaskService@@getAll'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/api/cask/findAll/demo/orderFeeds/traderIdMappings/TraderIdMappings' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
          'shortDisplayName': 'TraderIdMappings[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@getAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@getAll',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / getAll',
        'shortDisplayName': 'getAll',
        'name': 'TraderIdMappingsCaskService@@getAll'
      },
      'name': 'getAll'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetween',
        'shortDisplayName': 'findByCaskInsertedAtBetween',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetween'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/Between/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
          'shortDisplayName': 'TraderIdMappings[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetween',
        'shortDisplayName': 'findByCaskInsertedAtBetween',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetween'
      },
      'name': 'findByCaskInsertedAtBetween'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGteLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGteLte',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/BetweenGteLte/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
          'shortDisplayName': 'TraderIdMappings[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGteLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGteLte',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte'
      },
      'name': 'findByCaskInsertedAtBetweenGteLte'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGtLt',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLt',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/BetweenGtLt/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
          'shortDisplayName': 'TraderIdMappings[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGtLt',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLt',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt'
      },
      'name': 'findByCaskInsertedAtBetweenGtLt'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGtLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLte',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/BetweenGtLte/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
          'shortDisplayName': 'TraderIdMappings[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGtLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLte',
        'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte'
      },
      'name': 'findByCaskInsertedAtBetweenGtLte'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamAll',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamAll',
        'shortDisplayName': 'streamAll',
        'name': 'TraderIdMappingsCaskService@@streamAll'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'GET', 'url': '/api/cask/streamAll/demo/orderFeeds/traderIdMappings/TraderIdMappings' }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Stream',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'shortDisplayName': 'Stream<TraderIdMappings>',
          'name': 'Stream'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamAll',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamAll',
        'shortDisplayName': 'streamAll',
        'name': 'TraderIdMappingsCaskService@@streamAll'
      },
      'name': 'streamAll'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamByCaskInsertedAtBetween',
        'shortDisplayName': 'streamByCaskInsertedAtBetween',
        'name': 'TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings><vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/streamBetween/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Stream',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings><vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'shortDisplayName': 'Stream<TraderIdMappings>',
          'name': 'Stream'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings><vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamByCaskInsertedAtBetween',
        'shortDisplayName': 'streamByCaskInsertedAtBetween',
        'name': 'TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween'
      },
      'name': 'streamByCaskInsertedAtBetween'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByBloombergId',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByBloombergId',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findSingleByBloombergId',
        'shortDisplayName': 'findSingleByBloombergId',
        'name': 'TraderIdMappingsCaskService@@findSingleByBloombergId'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'shortDisplayName': 'BloombergTraderId',
          'name': 'BloombergTraderId'
        },
        'name': 'id',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'id' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
          'shortDisplayName': 'BloombergTraderId',
          'name': 'BloombergTraderId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/findSingleBy/demo/orderFeeds/traderIdMappings/TraderIdMappings/bloombergId/{id}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'demo.orderFeeds.bloomberg',
              'typeName': 'BloombergTraderId',
              'parameters': [],
              'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
              'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
              'firstTypeParameterOrSelf': 'demo.orderFeeds.bloomberg.BloombergTraderId'
            },
            'description': 'type demo.orderFeeds.bloomberg.BloombergTraderId',
            'taxi': 'demo.orderFeeds.bloomberg.BloombergTraderId'
          },
          'operator': 'EQUAL',
          'expectedValue': { 'path': { 'parts': ['id'], 'path': 'id' }, 'taxi': 'id' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByBloombergId',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByBloombergId',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findSingleByBloombergId',
        'shortDisplayName': 'findSingleByBloombergId',
        'name': 'TraderIdMappingsCaskService@@findSingleByBloombergId'
      },
      'name': 'findSingleByBloombergId'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByIcapId',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByIcapId',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findSingleByIcapId',
        'shortDisplayName': 'findSingleByIcapId',
        'name': 'TraderIdMappingsCaskService@@findSingleByIcapId'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
          'shortDisplayName': 'IcapTraderId',
          'name': 'IcapTraderId'
        },
        'name': 'id',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'id' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
          'shortDisplayName': 'IcapTraderId',
          'name': 'IcapTraderId'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/findSingleBy/demo/orderFeeds/traderIdMappings/TraderIdMappings/icapId/{id}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'demo.orderFeeds.icap',
              'typeName': 'IcapTraderId',
              'parameters': [],
              'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
              'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
              'firstTypeParameterOrSelf': 'demo.orderFeeds.icap.IcapTraderId'
            }, 'description': 'type demo.orderFeeds.icap.IcapTraderId', 'taxi': 'demo.orderFeeds.icap.IcapTraderId'
          },
          'operator': 'EQUAL',
          'expectedValue': { 'path': { 'parts': ['id'], 'path': 'id' }, 'taxi': 'id' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByIcapId',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByIcapId',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findSingleByIcapId',
        'shortDisplayName': 'findSingleByIcapId',
        'name': 'TraderIdMappingsCaskService@@findSingleByIcapId'
      },
      'name': 'findSingleByIcapId'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamVyneQlQueryTraderIdMappings',
        'shortDisplayName': 'streamVyneQlQueryTraderIdMappings',
        'name': 'TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        },
        'name': 'body',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'RequestBody',
            'parameters': [],
            'parameterizedName': 'RequestBody',
            'namespace': '',
            'longDisplayName': 'RequestBody',
            'shortDisplayName': 'RequestBody',
            'name': 'RequestBody'
          }, 'params': {}
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'POST', 'url': '/api/continuous/vyneQl' }
      }],
      'grammar': 'vyneQl',
      'capabilities': [{ 'supportedOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'] }],
      'typeDoc': null,
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Stream',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'shortDisplayName': 'Stream<TraderIdMappings>',
          'name': 'Stream'
        }, 'constraints': []
      },
      'operationType': null,
      'hasFilterCapability': true,
      'supportedFilterOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'],
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamVyneQlQueryTraderIdMappings',
        'shortDisplayName': 'streamVyneQlQueryTraderIdMappings',
        'name': 'TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings'
      },
      'name': 'streamVyneQlQueryTraderIdMappings'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / vyneQlQueryTraderIdMappings',
        'shortDisplayName': 'vyneQlQueryTraderIdMappings',
        'name': 'TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        },
        'name': 'body',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'RequestBody',
            'parameters': [],
            'parameterizedName': 'RequestBody',
            'namespace': '',
            'longDisplayName': 'RequestBody',
            'shortDisplayName': 'RequestBody',
            'name': 'RequestBody'
          }, 'params': {}
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'POST', 'url': '/api/vyneQl' }
      }],
      'grammar': 'vyneQl',
      'capabilities': [{ 'supportedOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'] }],
      'typeDoc': null,
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'namespace': 'demo.orderFeeds.traderIdMappings',
            'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
            'shortDisplayName': 'TraderIdMappings',
            'name': 'TraderIdMappings'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
          'shortDisplayName': 'TraderIdMappings[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'operationType': null,
      'hasFilterCapability': true,
      'supportedFilterOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'],
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / vyneQlQueryTraderIdMappings',
        'shortDisplayName': 'vyneQlQueryTraderIdMappings',
        'name': 'TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings'
      },
      'name': 'vyneQlQueryTraderIdMappings'
    }],
    'qualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService',
      'shortDisplayName': 'TraderIdMappingsCaskService',
      'name': 'TraderIdMappingsCaskService'
    }
  }, {
    'name': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService',
      'shortDisplayName': 'InstrumentIdMappingCaskService',
      'name': 'InstrumentIdMappingCaskService'
    },
    'operations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@getAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@getAll',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / getAll',
        'shortDisplayName': 'getAll',
        'name': 'InstrumentIdMappingCaskService@@getAll'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/findAll/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
          'shortDisplayName': 'InstrumentIdMapping[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@getAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@getAll',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / getAll',
        'shortDisplayName': 'getAll',
        'name': 'InstrumentIdMappingCaskService@@getAll'
      },
      'name': 'getAll'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetween',
        'shortDisplayName': 'findByCaskInsertedAtBetween',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/Between/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
          'shortDisplayName': 'InstrumentIdMapping[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetween',
        'shortDisplayName': 'findByCaskInsertedAtBetween',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween'
      },
      'name': 'findByCaskInsertedAtBetween'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGteLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGteLte',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/BetweenGteLte/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
          'shortDisplayName': 'InstrumentIdMapping[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGteLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGteLte',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte'
      },
      'name': 'findByCaskInsertedAtBetweenGteLte'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGtLt',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLt',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/BetweenGtLt/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
          'shortDisplayName': 'InstrumentIdMapping[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGtLt',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLt',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt'
      },
      'name': 'findByCaskInsertedAtBetweenGtLt'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGtLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLte',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/BetweenGtLte/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
          'shortDisplayName': 'InstrumentIdMapping[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGtLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLte',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte'
      },
      'name': 'findByCaskInsertedAtBetweenGtLte'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamAll',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamAll',
        'shortDisplayName': 'streamAll',
        'name': 'InstrumentIdMappingCaskService@@streamAll'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/streamAll/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Stream',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'shortDisplayName': 'Stream<InstrumentIdMapping>',
          'name': 'Stream'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamAll',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamAll',
        'shortDisplayName': 'streamAll',
        'name': 'InstrumentIdMappingCaskService@@streamAll'
      },
      'name': 'streamAll'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamByCaskInsertedAtBetween',
        'shortDisplayName': 'streamByCaskInsertedAtBetween',
        'name': 'InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/streamBetween/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Stream',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'shortDisplayName': 'Stream<InstrumentIdMapping>',
          'name': 'Stream'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamByCaskInsertedAtBetween',
        'shortDisplayName': 'streamByCaskInsertedAtBetween',
        'name': 'InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween'
      },
      'name': 'streamByCaskInsertedAtBetween'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByCusip',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByCusip',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findSingleByCusip',
        'shortDisplayName': 'findSingleByCusip',
        'name': 'InstrumentIdMappingCaskService@@findSingleByCusip'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        },
        'name': 'id',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'id' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/findSingleBy/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/cusip/{id}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'demo.orderFeeds',
              'typeName': 'Cusip',
              'parameters': [],
              'parameterizedName': 'demo.orderFeeds.Cusip',
              'fullyQualifiedName': 'demo.orderFeeds.Cusip',
              'firstTypeParameterOrSelf': 'demo.orderFeeds.Cusip'
            }, 'description': 'type demo.orderFeeds.Cusip', 'taxi': 'demo.orderFeeds.Cusip'
          },
          'operator': 'EQUAL',
          'expectedValue': { 'path': { 'parts': ['id'], 'path': 'id' }, 'taxi': 'id' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByCusip',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByCusip',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findSingleByCusip',
        'shortDisplayName': 'findSingleByCusip',
        'name': 'InstrumentIdMappingCaskService@@findSingleByCusip'
      },
      'name': 'findSingleByCusip'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByIsin',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByIsin',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findSingleByIsin',
        'shortDisplayName': 'findSingleByIsin',
        'name': 'InstrumentIdMappingCaskService@@findSingleByIsin'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        },
        'name': 'id',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'id' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/findSingleBy/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/isin/{id}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'demo.orderFeeds',
              'typeName': 'Isin',
              'parameters': [],
              'parameterizedName': 'demo.orderFeeds.Isin',
              'fullyQualifiedName': 'demo.orderFeeds.Isin',
              'firstTypeParameterOrSelf': 'demo.orderFeeds.Isin'
            }, 'description': 'type demo.orderFeeds.Isin', 'taxi': 'demo.orderFeeds.Isin'
          },
          'operator': 'EQUAL',
          'expectedValue': { 'path': { 'parts': ['id'], 'path': 'id' }, 'taxi': 'id' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByIsin',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByIsin',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findSingleByIsin',
        'shortDisplayName': 'findSingleByIsin',
        'name': 'InstrumentIdMappingCaskService@@findSingleByIsin'
      },
      'name': 'findSingleByIsin'
    }],
    'queryOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamVyneQlQueryInstrumentIdMapping',
        'shortDisplayName': 'streamVyneQlQueryInstrumentIdMapping',
        'name': 'InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        },
        'name': 'body',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'RequestBody',
            'parameters': [],
            'parameterizedName': 'RequestBody',
            'namespace': '',
            'longDisplayName': 'RequestBody',
            'shortDisplayName': 'RequestBody',
            'name': 'RequestBody'
          }, 'params': {}
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'POST', 'url': '/api/continuous/vyneQl' }
      }],
      'grammar': 'vyneQl',
      'capabilities': [{ 'supportedOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'] }],
      'typeDoc': null,
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Stream',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'shortDisplayName': 'Stream<InstrumentIdMapping>',
          'name': 'Stream'
        }, 'constraints': []
      },
      'operationType': null,
      'hasFilterCapability': true,
      'supportedFilterOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'],
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamVyneQlQueryInstrumentIdMapping',
        'shortDisplayName': 'streamVyneQlQueryInstrumentIdMapping',
        'name': 'InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping'
      },
      'name': 'streamVyneQlQueryInstrumentIdMapping'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / vyneQlQueryInstrumentIdMapping',
        'shortDisplayName': 'vyneQlQueryInstrumentIdMapping',
        'name': 'InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        },
        'name': 'body',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'RequestBody',
            'parameters': [],
            'parameterizedName': 'RequestBody',
            'namespace': '',
            'longDisplayName': 'RequestBody',
            'shortDisplayName': 'RequestBody',
            'name': 'RequestBody'
          }, 'params': {}
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'POST', 'url': '/api/vyneQl' }
      }],
      'grammar': 'vyneQl',
      'capabilities': [{ 'supportedOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'] }],
      'typeDoc': null,
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
          'shortDisplayName': 'InstrumentIdMapping[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'operationType': null,
      'hasFilterCapability': true,
      'supportedFilterOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'],
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / vyneQlQueryInstrumentIdMapping',
        'shortDisplayName': 'vyneQlQueryInstrumentIdMapping',
        'name': 'InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping'
      },
      'name': 'vyneQlQueryInstrumentIdMapping'
    }],
    'streamOperations': [],
    'tableOperations': [],
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'ServiceDiscoveryClient',
        'parameters': [],
        'parameterizedName': 'ServiceDiscoveryClient',
        'namespace': '',
        'longDisplayName': 'ServiceDiscoveryClient',
        'shortDisplayName': 'ServiceDiscoveryClient',
        'name': 'ServiceDiscoveryClient'
      }, 'params': { 'serviceName': 'cask' }
    }, {
      'name': {
        'fullyQualifiedName': 'Datasource',
        'parameters': [],
        'parameterizedName': 'Datasource',
        'namespace': '',
        'longDisplayName': 'Datasource',
        'shortDisplayName': 'Datasource',
        'name': 'Datasource'
      }, 'params': {}
    }],
    'sourceCode': [{
      'name': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'version': '0.0.0',
      'content': 'import vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport lang.taxi.Stream\nimport vyne.cask.CaskInsertedAt\nimport vyne.cask.CaskInsertedAt\nimport lang.taxi.Stream\nimport vyne.vyneQl.VyneQlQuery\nimport lang.taxi.Stream\nimport vyne.vyneQl.VyneQlQuery\nimport demo.orderFeeds.Cusip\nimport demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping\nimport demo.orderFeeds.Isin\nimport demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping\nimport demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping\nimport demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping\nimport demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping\nimport demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping\nnamespace vyne.cask.demo.orderFeeds.instrumentIdMappings {\n   @ServiceDiscoveryClient(serviceName = "cask")\n      @Datasource\n      service InstrumentIdMappingCaskService {\n         @HttpOperation(method = "GET" , url = "/api/cask/findAll/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping")\n         operation getAll(  ) : demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]\n         @HttpOperation(method = "GET" , url = "/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/Between/{start}/{end}")\n         operation findByCaskInsertedAtBetween( @PathVariable(name = "start") start : vyne.cask.CaskInsertedAt, @PathVariable(name = "end") end : vyne.cask.CaskInsertedAt ) : InstrumentIdMapping[]( vyne.cask.CaskInsertedAt >= start, vyne.cask.CaskInsertedAt < end )\n         @HttpOperation(method = "GET" , url = "/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/BetweenGteLte/{start}/{end}")\n         operation findByCaskInsertedAtBetweenGteLte( @PathVariable(name = "start") start : vyne.cask.CaskInsertedAt, @PathVariable(name = "end") end : vyne.cask.CaskInsertedAt ) : InstrumentIdMapping[]( vyne.cask.CaskInsertedAt >= start, vyne.cask.CaskInsertedAt <= end )\n         @HttpOperation(method = "GET" , url = "/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/BetweenGtLt/{start}/{end}")\n         operation findByCaskInsertedAtBetweenGtLt( @PathVariable(name = "start") start : vyne.cask.CaskInsertedAt, @PathVariable(name = "end") end : vyne.cask.CaskInsertedAt ) : InstrumentIdMapping[]( vyne.cask.CaskInsertedAt > start, vyne.cask.CaskInsertedAt < end )\n         @HttpOperation(method = "GET" , url = "/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/BetweenGtLte/{start}/{end}")\n         operation findByCaskInsertedAtBetweenGtLte( @PathVariable(name = "start") start : vyne.cask.CaskInsertedAt, @PathVariable(name = "end") end : vyne.cask.CaskInsertedAt ) : InstrumentIdMapping[]( vyne.cask.CaskInsertedAt > start, vyne.cask.CaskInsertedAt <= end )\n         @HttpOperation(method = "GET" , url = "/api/cask/streamAll/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping")\n         operation streamAll(  ) : Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>\n         @HttpOperation(method = "GET" , url = "/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/streamBetween/{start}/{end}")\n         operation streamByCaskInsertedAtBetween( @PathVariable(name = "start") start : vyne.cask.CaskInsertedAt, @PathVariable(name = "end") end : vyne.cask.CaskInsertedAt ) : Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>( vyne.cask.CaskInsertedAt >= start, vyne.cask.CaskInsertedAt < end )\n         @HttpOperation(method = "POST", url = "/api/continuous/vyneQl")\n         vyneQl query streamVyneQlQueryInstrumentIdMapping(@RequestBody body: vyne.vyneQl.VyneQlQuery):lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping> with capabilities {\n            filter(==,!=,in,like,>,<,>=,<=)\n         }\n         @HttpOperation(method = "POST", url = "/api/vyneQl")\n         vyneQl query vyneQlQueryInstrumentIdMapping(@RequestBody body: vyne.vyneQl.VyneQlQuery):lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping> with capabilities {\n            filter(==,!=,in,like,>,<,>=,<=)\n         }\n         @HttpOperation(method = "GET" , url = "/api/cask/findSingleBy/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/cusip/{id}")\n         operation findSingleByCusip( @PathVariable(name = "id") id : demo.orderFeeds.Cusip ) : demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping( demo.orderFeeds.Cusip == id )\n         @HttpOperation(method = "GET" , url = "/api/cask/findSingleBy/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/isin/{id}")\n         operation findSingleByIsin( @PathVariable(name = "id") id : demo.orderFeeds.Isin ) : demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping( demo.orderFeeds.Isin == id )\n      }\n}',
      'packageIdentifier': {
        'organisation': 'io.vyne.cask',
        'name': 'generated-schemas',
        'version': '1.7.0',
        'unversionedId': 'io.vyne.cask/generated-schemas',
        'id': 'io.vyne.cask/generated-schemas/1.7.0',
        'uriSafeId': 'io.vyne.cask:generated-schemas:1.7.0'
      },
      'packageQualifiedName': '[io.vyne.cask/generated-schemas/1.7.0]/vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'id': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping:0.0.0',
      'contentHash': 'aeab1a'
    }],
    'typeDoc': null,
    'lineage': null,
    'serviceKind': 'API',
    'remoteOperations': [{
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@getAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@getAll',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / getAll',
        'shortDisplayName': 'getAll',
        'name': 'InstrumentIdMappingCaskService@@getAll'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/findAll/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
          'shortDisplayName': 'InstrumentIdMapping[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@getAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@getAll',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / getAll',
        'shortDisplayName': 'getAll',
        'name': 'InstrumentIdMappingCaskService@@getAll'
      },
      'name': 'getAll'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetween',
        'shortDisplayName': 'findByCaskInsertedAtBetween',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/Between/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
          'shortDisplayName': 'InstrumentIdMapping[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetween',
        'shortDisplayName': 'findByCaskInsertedAtBetween',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween'
      },
      'name': 'findByCaskInsertedAtBetween'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGteLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGteLte',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/BetweenGteLte/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
          'shortDisplayName': 'InstrumentIdMapping[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGteLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGteLte',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte'
      },
      'name': 'findByCaskInsertedAtBetweenGteLte'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGtLt',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLt',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/BetweenGtLt/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
          'shortDisplayName': 'InstrumentIdMapping[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGtLt',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLt',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt'
      },
      'name': 'findByCaskInsertedAtBetweenGtLt'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGtLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLte',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/BetweenGtLte/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
          'shortDisplayName': 'InstrumentIdMapping[]',
          'name': 'Array'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGtLte',
        'shortDisplayName': 'findByCaskInsertedAtBetweenGtLte',
        'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte'
      },
      'name': 'findByCaskInsertedAtBetweenGtLte'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamAll',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamAll',
        'shortDisplayName': 'streamAll',
        'name': 'InstrumentIdMappingCaskService@@streamAll'
      },
      'parameters': [],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/streamAll/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Stream',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'shortDisplayName': 'Stream<InstrumentIdMapping>',
          'name': 'Stream'
        }, 'constraints': []
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamAll',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamAll',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamAll',
        'shortDisplayName': 'streamAll',
        'name': 'InstrumentIdMappingCaskService@@streamAll'
      },
      'name': 'streamAll'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamByCaskInsertedAtBetween',
        'shortDisplayName': 'streamByCaskInsertedAtBetween',
        'name': 'InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'start',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'start' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }, {
        'type': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        },
        'name': 'end',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'end' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
          'parameters': [],
          'parameterizedName': 'vyne.cask.CaskInsertedAt',
          'namespace': 'vyne.cask',
          'longDisplayName': 'vyne.cask.CaskInsertedAt',
          'shortDisplayName': 'CaskInsertedAt',
          'name': 'CaskInsertedAt'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/streamBetween/{start}/{end}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Stream',
          'parameters': [{
            'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'shortDisplayName': 'Stream<InstrumentIdMapping>',
          'name': 'Stream'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'GREATER_THAN_OR_EQUAL_TO',
          'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
          'compilationUnits': []
        }, {
          'propertyIdentifier': {
            'type': {
              'namespace': 'vyne.cask',
              'typeName': 'CaskInsertedAt',
              'parameters': [],
              'parameterizedName': 'vyne.cask.CaskInsertedAt',
              'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
              'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
            }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
          },
          'operator': 'LESS_THAN',
          'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamByCaskInsertedAtBetween',
        'shortDisplayName': 'streamByCaskInsertedAtBetween',
        'name': 'InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween'
      },
      'name': 'streamByCaskInsertedAtBetween'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByCusip',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByCusip',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findSingleByCusip',
        'shortDisplayName': 'findSingleByCusip',
        'name': 'InstrumentIdMappingCaskService@@findSingleByCusip'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        },
        'name': 'id',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'id' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.Cusip',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Cusip',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Cusip',
          'shortDisplayName': 'Cusip',
          'name': 'Cusip'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/findSingleBy/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/cusip/{id}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'demo.orderFeeds',
              'typeName': 'Cusip',
              'parameters': [],
              'parameterizedName': 'demo.orderFeeds.Cusip',
              'fullyQualifiedName': 'demo.orderFeeds.Cusip',
              'firstTypeParameterOrSelf': 'demo.orderFeeds.Cusip'
            }, 'description': 'type demo.orderFeeds.Cusip', 'taxi': 'demo.orderFeeds.Cusip'
          },
          'operator': 'EQUAL',
          'expectedValue': { 'path': { 'parts': ['id'], 'path': 'id' }, 'taxi': 'id' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByCusip',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByCusip',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findSingleByCusip',
        'shortDisplayName': 'findSingleByCusip',
        'name': 'InstrumentIdMappingCaskService@@findSingleByCusip'
      },
      'name': 'findSingleByCusip'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByIsin',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByIsin',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findSingleByIsin',
        'shortDisplayName': 'findSingleByIsin',
        'name': 'InstrumentIdMappingCaskService@@findSingleByIsin'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        },
        'name': 'id',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'PathVariable',
            'parameters': [],
            'parameterizedName': 'PathVariable',
            'namespace': '',
            'longDisplayName': 'PathVariable',
            'shortDisplayName': 'PathVariable',
            'name': 'PathVariable'
          }, 'params': { 'name': 'id' }
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'demo.orderFeeds.Isin',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.Isin',
          'namespace': 'demo.orderFeeds',
          'longDisplayName': 'demo.orderFeeds.Isin',
          'shortDisplayName': 'Isin',
          'name': 'Isin'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      },
      'operationType': null,
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        },
        'params': {
          'method': 'GET',
          'url': '/api/cask/findSingleBy/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/isin/{id}'
        }
      }],
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        },
        'constraints': [{
          'propertyIdentifier': {
            'type': {
              'namespace': 'demo.orderFeeds',
              'typeName': 'Isin',
              'parameters': [],
              'parameterizedName': 'demo.orderFeeds.Isin',
              'fullyQualifiedName': 'demo.orderFeeds.Isin',
              'firstTypeParameterOrSelf': 'demo.orderFeeds.Isin'
            }, 'description': 'type demo.orderFeeds.Isin', 'taxi': 'demo.orderFeeds.Isin'
          },
          'operator': 'EQUAL',
          'expectedValue': { 'path': { 'parts': ['id'], 'path': 'id' }, 'taxi': 'id' },
          'compilationUnits': []
        }]
      },
      'typeDoc': null,
      'returnTypeName': {
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByIsin',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByIsin',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findSingleByIsin',
        'shortDisplayName': 'findSingleByIsin',
        'name': 'InstrumentIdMappingCaskService@@findSingleByIsin'
      },
      'name': 'findSingleByIsin'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamVyneQlQueryInstrumentIdMapping',
        'shortDisplayName': 'streamVyneQlQueryInstrumentIdMapping',
        'name': 'InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        },
        'name': 'body',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'RequestBody',
            'parameters': [],
            'parameterizedName': 'RequestBody',
            'namespace': '',
            'longDisplayName': 'RequestBody',
            'shortDisplayName': 'RequestBody',
            'name': 'RequestBody'
          }, 'params': {}
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'POST', 'url': '/api/continuous/vyneQl' }
      }],
      'grammar': 'vyneQl',
      'capabilities': [{ 'supportedOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'] }],
      'typeDoc': null,
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Stream',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'shortDisplayName': 'Stream<InstrumentIdMapping>',
          'name': 'Stream'
        }, 'constraints': []
      },
      'operationType': null,
      'hasFilterCapability': true,
      'supportedFilterOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'],
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamVyneQlQueryInstrumentIdMapping',
        'shortDisplayName': 'streamVyneQlQueryInstrumentIdMapping',
        'name': 'InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping'
      },
      'name': 'streamVyneQlQueryInstrumentIdMapping'
    }, {
      'qualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / vyneQlQueryInstrumentIdMapping',
        'shortDisplayName': 'vyneQlQueryInstrumentIdMapping',
        'name': 'InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping'
      },
      'parameters': [{
        'type': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        },
        'name': 'body',
        'metadata': [{
          'name': {
            'fullyQualifiedName': 'RequestBody',
            'parameters': [],
            'parameterizedName': 'RequestBody',
            'namespace': '',
            'longDisplayName': 'RequestBody',
            'shortDisplayName': 'RequestBody',
            'name': 'RequestBody'
          }, 'params': {}
        }],
        'constraints': [],
        'typeName': {
          'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
          'parameters': [],
          'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
          'namespace': 'vyne.vyneQl',
          'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
          'shortDisplayName': 'VyneQlQuery',
          'name': 'VyneQlQuery'
        }
      }],
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'HttpOperation',
          'parameters': [],
          'parameterizedName': 'HttpOperation',
          'namespace': '',
          'longDisplayName': 'HttpOperation',
          'shortDisplayName': 'HttpOperation',
          'name': 'HttpOperation'
        }, 'params': { 'method': 'POST', 'url': '/api/vyneQl' }
      }],
      'grammar': 'vyneQl',
      'capabilities': [{ 'supportedOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'] }],
      'typeDoc': null,
      'contract': {
        'returnType': {
          'fullyQualifiedName': 'lang.taxi.Array',
          'parameters': [{
            'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'namespace': 'demo.orderFeeds.instrumentIdMappings',
            'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
            'shortDisplayName': 'InstrumentIdMapping',
            'name': 'InstrumentIdMapping'
          }],
          'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
          'namespace': 'lang.taxi',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
          'shortDisplayName': 'InstrumentIdMapping[]',
          'name': 'Array'
        }, 'constraints': []
      },
      'operationType': null,
      'hasFilterCapability': true,
      'supportedFilterOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'],
      'returnTypeName': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'memberQualifiedName': {
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / vyneQlQueryInstrumentIdMapping',
        'shortDisplayName': 'vyneQlQueryInstrumentIdMapping',
        'name': 'InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping'
      },
      'name': 'vyneQlQueryInstrumentIdMapping'
    }],
    'qualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService',
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService',
      'shortDisplayName': 'InstrumentIdMappingCaskService',
      'name': 'InstrumentIdMappingCaskService'
    }
  }],
  'dynamicMetadata': [{
    'fullyQualifiedName': 'ServiceDiscoveryClient',
    'parameters': [],
    'parameterizedName': 'ServiceDiscoveryClient',
    'namespace': '',
    'longDisplayName': 'ServiceDiscoveryClient',
    'shortDisplayName': 'ServiceDiscoveryClient',
    'name': 'ServiceDiscoveryClient'
  }, {
    'fullyQualifiedName': 'HttpOperation',
    'parameters': [],
    'parameterizedName': 'HttpOperation',
    'namespace': '',
    'longDisplayName': 'HttpOperation',
    'shortDisplayName': 'HttpOperation',
    'name': 'HttpOperation'
  }, {
    'fullyQualifiedName': 'Datasource',
    'parameters': [],
    'parameterizedName': 'Datasource',
    'namespace': '',
    'longDisplayName': 'Datasource',
    'shortDisplayName': 'Datasource',
    'name': 'Datasource'
  }, {
    'fullyQualifiedName': 'Id',
    'parameters': [],
    'parameterizedName': 'Id',
    'namespace': '',
    'longDisplayName': 'Id',
    'shortDisplayName': 'Id',
    'name': 'Id'
  }, {
    'fullyQualifiedName': 'FirstNotEmpty',
    'parameters': [],
    'parameterizedName': 'FirstNotEmpty',
    'namespace': '',
    'longDisplayName': 'FirstNotEmpty',
    'shortDisplayName': 'FirstNotEmpty',
    'name': 'FirstNotEmpty'
  }, {
    'fullyQualifiedName': 'CDE',
    'parameters': [],
    'parameterizedName': 'CDE',
    'namespace': '',
    'longDisplayName': 'CDE',
    'shortDisplayName': 'CDE',
    'name': 'CDE'
  }, {
    'fullyQualifiedName': 'ApprovedDataSource',
    'parameters': [],
    'parameterizedName': 'ApprovedDataSource',
    'namespace': '',
    'longDisplayName': 'ApprovedDataSource',
    'shortDisplayName': 'ApprovedDataSource',
    'name': 'ApprovedDataSource'
  }, {
    'fullyQualifiedName': 'Generated',
    'parameters': [],
    'parameterizedName': 'Generated',
    'namespace': '',
    'longDisplayName': 'Generated',
    'shortDisplayName': 'Generated',
    'name': 'Generated'
  }],
  'metadataTypes': [],
  'operations': [{
    'qualifiedName': {
      'fullyQualifiedName': 'msci.MsciEsgService@@getMsciEsgData',
      'parameters': [],
      'parameterizedName': 'msci.MsciEsgService@@getMsciEsgData',
      'namespace': 'msci',
      'longDisplayName': 'msci.MsciEsgService / getMsciEsgData',
      'shortDisplayName': 'getMsciEsgData',
      'name': 'MsciEsgService@@getMsciEsgData'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.Isin',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.Isin',
        'namespace': 'demo.orderFeeds',
        'longDisplayName': 'demo.orderFeeds.Isin',
        'shortDisplayName': 'Isin',
        'name': 'Isin'
      },
      'name': 'isin',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'value': 'isin' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.Isin',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.Isin',
        'namespace': 'demo.orderFeeds',
        'longDisplayName': 'demo.orderFeeds.Isin',
        'shortDisplayName': 'Isin',
        'name': 'Isin'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'msci.EsgData',
      'parameters': [],
      'parameterizedName': 'msci.EsgData',
      'namespace': 'msci',
      'longDisplayName': 'msci.EsgData',
      'shortDisplayName': 'EsgData',
      'name': 'EsgData'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/msci/esgScores/{isin}' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'msci.EsgData',
        'parameters': [],
        'parameterizedName': 'msci.EsgData',
        'namespace': 'msci',
        'longDisplayName': 'msci.EsgData',
        'shortDisplayName': 'EsgData',
        'name': 'EsgData'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'msci.EsgData',
      'parameters': [],
      'parameterizedName': 'msci.EsgData',
      'namespace': 'msci',
      'longDisplayName': 'msci.EsgData',
      'shortDisplayName': 'EsgData',
      'name': 'EsgData'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'msci.MsciEsgService@@getMsciEsgData',
      'parameters': [],
      'parameterizedName': 'msci.MsciEsgService@@getMsciEsgData',
      'namespace': 'msci',
      'longDisplayName': 'msci.MsciEsgService / getMsciEsgData',
      'shortDisplayName': 'getMsciEsgData',
      'name': 'MsciEsgService@@getMsciEsgData'
    },
    'name': 'getMsciEsgData'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'refinitiv.RefinitivEsgService@@getAssetInfo',
      'parameters': [],
      'parameterizedName': 'refinitiv.RefinitivEsgService@@getAssetInfo',
      'namespace': 'refinitiv',
      'longDisplayName': 'refinitiv.RefinitivEsgService / getAssetInfo',
      'shortDisplayName': 'getAssetInfo',
      'name': 'RefinitivEsgService@@getAssetInfo'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.Cusip',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.Cusip',
        'namespace': 'demo.orderFeeds',
        'longDisplayName': 'demo.orderFeeds.Cusip',
        'shortDisplayName': 'Cusip',
        'name': 'Cusip'
      },
      'name': 'cusip',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'value': 'cusip' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.Cusip',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.Cusip',
        'namespace': 'demo.orderFeeds',
        'longDisplayName': 'demo.orderFeeds.Cusip',
        'shortDisplayName': 'Cusip',
        'name': 'Cusip'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'refinitiv.AssetInfo',
      'parameters': [],
      'parameterizedName': 'refinitiv.AssetInfo',
      'namespace': 'refinitiv',
      'longDisplayName': 'refinitiv.AssetInfo',
      'shortDisplayName': 'AssetInfo',
      'name': 'AssetInfo'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/refinitiv/assetInfo/{cusip}' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'refinitiv.AssetInfo',
        'parameters': [],
        'parameterizedName': 'refinitiv.AssetInfo',
        'namespace': 'refinitiv',
        'longDisplayName': 'refinitiv.AssetInfo',
        'shortDisplayName': 'AssetInfo',
        'name': 'AssetInfo'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'refinitiv.AssetInfo',
      'parameters': [],
      'parameterizedName': 'refinitiv.AssetInfo',
      'namespace': 'refinitiv',
      'longDisplayName': 'refinitiv.AssetInfo',
      'shortDisplayName': 'AssetInfo',
      'name': 'AssetInfo'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'refinitiv.RefinitivEsgService@@getAssetInfo',
      'parameters': [],
      'parameterizedName': 'refinitiv.RefinitivEsgService@@getAssetInfo',
      'namespace': 'refinitiv',
      'longDisplayName': 'refinitiv.RefinitivEsgService / getAssetInfo',
      'shortDisplayName': 'getAssetInfo',
      'name': 'RefinitivEsgService@@getAssetInfo'
    },
    'name': 'getAssetInfo'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstruments',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstruments',
      'namespace': 'demo.orderFeeds.dataWarehouse',
      'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse / getInstruments',
      'shortDisplayName': 'getInstruments',
      'name': 'DataWarehouse@@getInstruments'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
      'shortDisplayName': 'Instrument[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
        'shortDisplayName': 'Instrument[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
      'shortDisplayName': 'Instrument[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstruments',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstruments',
      'namespace': 'demo.orderFeeds.dataWarehouse',
      'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse / getInstruments',
      'shortDisplayName': 'getInstruments',
      'name': 'DataWarehouse@@getInstruments'
    },
    'name': 'getInstruments'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstrument',
      'namespace': 'demo.orderFeeds.dataWarehouse',
      'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse / getInstrument',
      'shortDisplayName': 'getInstrument',
      'name': 'DataWarehouse@@getInstrument'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.InstrumentId',
        'namespace': 'demo.orderFeeds',
        'longDisplayName': 'demo.orderFeeds.InstrumentId',
        'shortDisplayName': 'InstrumentId',
        'name': 'InstrumentId'
      },
      'name': 'id',
      'metadata': [],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.InstrumentId',
        'namespace': 'demo.orderFeeds',
        'longDisplayName': 'demo.orderFeeds.InstrumentId',
        'shortDisplayName': 'InstrumentId',
        'name': 'InstrumentId'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
      'namespace': 'demo.orderFeeds.instrument',
      'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
      'shortDisplayName': 'Instrument',
      'name': 'Instrument'
    },
    'operationType': null,
    'metadata': [],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
      'namespace': 'demo.orderFeeds.instrument',
      'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
      'shortDisplayName': 'Instrument',
      'name': 'Instrument'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.dataWarehouse.DataWarehouse@@getInstrument',
      'namespace': 'demo.orderFeeds.dataWarehouse',
      'longDisplayName': 'demo.orderFeeds.dataWarehouse.DataWarehouse / getInstrument',
      'shortDisplayName': 'getInstrument',
      'name': 'DataWarehouse@@getInstrument'
    },
    'name': 'getInstrument'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrders',
      'shortDisplayName': 'getOrders',
      'name': 'IcapOrderFeedService@@getOrders'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
        'shortDisplayName': 'IcapOrder',
        'name': 'IcapOrder'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.icap.IcapOrder>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrder[]',
      'shortDisplayName': 'IcapOrder[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/orders' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
          'namespace': 'demo.orderFeeds.icap',
          'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
          'shortDisplayName': 'IcapOrder',
          'name': 'IcapOrder'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.icap.IcapOrder>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrder[]',
        'shortDisplayName': 'IcapOrder[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
        'shortDisplayName': 'IcapOrder',
        'name': 'IcapOrder'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.icap.IcapOrder>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrder[]',
      'shortDisplayName': 'IcapOrder[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrders',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrders',
      'shortDisplayName': 'getOrders',
      'name': 'IcapOrderFeedService@@getOrders'
    },
    'name': 'getOrders'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrder',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrder',
      'shortDisplayName': 'getOrder',
      'name': 'IcapOrderFeedService@@getOrder'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrderId',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrderId',
        'shortDisplayName': 'IcapOrderId',
        'name': 'IcapOrderId'
      },
      'name': 'orderId',
      'metadata': [],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrderId',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrderId',
        'shortDisplayName': 'IcapOrderId',
        'name': 'IcapOrderId'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
      'shortDisplayName': 'IcapOrder',
      'name': 'IcapOrder'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/order/{orderId}' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
        'shortDisplayName': 'IcapOrder',
        'name': 'IcapOrder'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapOrder',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrder',
      'shortDisplayName': 'IcapOrder',
      'name': 'IcapOrder'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.icap.IcapOrderFeedService@@getOrder',
      'namespace': 'demo.orderFeeds.icap',
      'longDisplayName': 'demo.orderFeeds.icap.IcapOrderFeedService / getOrder',
      'shortDisplayName': 'getOrder',
      'name': 'IcapOrderFeedService@@getOrder'
    },
    'name': 'getOrder'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.UserService@@getTraders',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.UserService@@getTraders',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.UserService / getTraders',
      'shortDisplayName': 'getTraders',
      'name': 'UserService@@getTraders'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.Trader',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.Trader',
        'shortDisplayName': 'Trader',
        'name': 'Trader'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.users.Trader>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.users.Trader[]',
      'shortDisplayName': 'Trader[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/traders' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.users.Trader',
          'namespace': 'demo.orderFeeds.users',
          'longDisplayName': 'demo.orderFeeds.users.Trader',
          'shortDisplayName': 'Trader',
          'name': 'Trader'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.users.Trader>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.users.Trader[]',
        'shortDisplayName': 'Trader[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.Trader',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.Trader',
        'shortDisplayName': 'Trader',
        'name': 'Trader'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.users.Trader>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.users.Trader[]',
      'shortDisplayName': 'Trader[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.UserService@@getTraders',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.UserService@@getTraders',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.UserService / getTraders',
      'shortDisplayName': 'getTraders',
      'name': 'UserService@@getTraders'
    },
    'name': 'getTraders'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.UserService@@getTrader',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.UserService@@getTrader',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.UserService / getTrader',
      'shortDisplayName': 'getTrader',
      'name': 'UserService@@getTrader'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.BankTraderId',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
        'shortDisplayName': 'BankTraderId',
        'name': 'BankTraderId'
      },
      'name': 'id',
      'metadata': [],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.users.BankTraderId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.BankTraderId',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.BankTraderId',
        'shortDisplayName': 'BankTraderId',
        'name': 'BankTraderId'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.Trader',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.Trader',
      'shortDisplayName': 'Trader',
      'name': 'Trader'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/trader/{id}' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.users.Trader',
        'namespace': 'demo.orderFeeds.users',
        'longDisplayName': 'demo.orderFeeds.users.Trader',
        'shortDisplayName': 'Trader',
        'name': 'Trader'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.Trader',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.Trader',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.Trader',
      'shortDisplayName': 'Trader',
      'name': 'Trader'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.users.UserService@@getTrader',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.users.UserService@@getTrader',
      'namespace': 'demo.orderFeeds.users',
      'longDisplayName': 'demo.orderFeeds.users.UserService / getTrader',
      'shortDisplayName': 'getTrader',
      'name': 'UserService@@getTrader'
    },
    'name': 'getTrader'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
      'namespace': 'demo.orderFeeds.refinitiv',
      'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService / getInstruments',
      'shortDisplayName': 'getInstruments',
      'name': 'RefinitivMarketDataService@@getInstruments'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
        'namespace': 'demo.orderFeeds.refinitiv',
        'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
        'shortDisplayName': 'RefinitivInstrument',
        'name': 'RefinitivInstrument'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.refinitiv.RefinitivInstrument>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument[]',
      'shortDisplayName': 'RefinitivInstrument[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'namespace': 'demo.orderFeeds.refinitiv',
          'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
          'shortDisplayName': 'RefinitivInstrument',
          'name': 'RefinitivInstrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.refinitiv.RefinitivInstrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument[]',
        'shortDisplayName': 'RefinitivInstrument[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
        'namespace': 'demo.orderFeeds.refinitiv',
        'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument',
        'shortDisplayName': 'RefinitivInstrument',
        'name': 'RefinitivInstrument'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.refinitiv.RefinitivInstrument>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivInstrument[]',
      'shortDisplayName': 'RefinitivInstrument[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService@@getInstruments',
      'namespace': 'demo.orderFeeds.refinitiv',
      'longDisplayName': 'demo.orderFeeds.refinitiv.RefinitivMarketDataService / getInstruments',
      'shortDisplayName': 'getInstruments',
      'name': 'RefinitivMarketDataService@@getInstruments'
    },
    'name': 'getInstruments'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem@@getTrades',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem@@getTrades',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem / getTrades',
      'shortDisplayName': 'getTrades',
      'name': 'FixedIncomeTradingSystem@@getTrades'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.trading.BondTrade',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.BondTrade',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.BondTrade',
        'shortDisplayName': 'BondTrade',
        'name': 'BondTrade'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.BondTrade>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.trading.BondTrade[]',
      'shortDisplayName': 'BondTrade[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.trading.BondTrade',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.BondTrade',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.BondTrade',
          'shortDisplayName': 'BondTrade',
          'name': 'BondTrade'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.BondTrade>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.trading.BondTrade[]',
        'shortDisplayName': 'BondTrade[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.trading.BondTrade',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.BondTrade',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.BondTrade',
        'shortDisplayName': 'BondTrade',
        'name': 'BondTrade'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.BondTrade>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.trading.BondTrade[]',
      'shortDisplayName': 'BondTrade[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem@@getTrades',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem@@getTrades',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.FixedIncomeTradingSystem / getTrades',
      'shortDisplayName': 'getTrades',
      'name': 'FixedIncomeTradingSystem@@getTrades'
    },
    'name': 'getTrades'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.FxTradingSystem@@getTrades',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.FxTradingSystem@@getTrades',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.FxTradingSystem / getTrades',
      'shortDisplayName': 'getTrades',
      'name': 'FxTradingSystem@@getTrades'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.trading.FxTrade',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.FxTrade',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.FxTrade',
        'shortDisplayName': 'FxTrade',
        'name': 'FxTrade'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.FxTrade>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.trading.FxTrade[]',
      'shortDisplayName': 'FxTrade[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.trading.FxTrade',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.trading.FxTrade',
          'namespace': 'demo.orderFeeds.trading',
          'longDisplayName': 'demo.orderFeeds.trading.FxTrade',
          'shortDisplayName': 'FxTrade',
          'name': 'FxTrade'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.FxTrade>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.trading.FxTrade[]',
        'shortDisplayName': 'FxTrade[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.trading.FxTrade',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.FxTrade',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.FxTrade',
        'shortDisplayName': 'FxTrade',
        'name': 'FxTrade'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.trading.FxTrade>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.trading.FxTrade[]',
      'shortDisplayName': 'FxTrade[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.FxTradingSystem@@getTrades',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.FxTradingSystem@@getTrades',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.FxTradingSystem / getTrades',
      'shortDisplayName': 'getTrades',
      'name': 'FxTradingSystem@@getTrades'
    },
    'name': 'getTrades'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.DateService / getTradeDate',
      'shortDisplayName': 'getTradeDate',
      'name': 'DateService@@getTradeDate'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementPeriod',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.SettlementPeriod',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.SettlementPeriod',
        'shortDisplayName': 'SettlementPeriod',
        'name': 'SettlementPeriod'
      },
      'name': 'period',
      'metadata': [],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementPeriod',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.SettlementPeriod',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.SettlementPeriod',
        'shortDisplayName': 'SettlementPeriod',
        'name': 'SettlementPeriod'
      }
    }, {
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.CurrencyPair',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.CurrencyPair',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.CurrencyPair',
        'shortDisplayName': 'CurrencyPair',
        'name': 'CurrencyPair'
      },
      'name': 'currencyPair',
      'metadata': [],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.CurrencyPair',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.CurrencyPair',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.CurrencyPair',
        'shortDisplayName': 'CurrencyPair',
        'name': 'CurrencyPair'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
      'shortDisplayName': 'SettlementDate',
      'name': 'SettlementDate'
    },
    'operationType': null,
    'metadata': [],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
        'namespace': 'demo.orderFeeds.trading',
        'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
        'shortDisplayName': 'SettlementDate',
        'name': 'SettlementDate'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.SettlementDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.SettlementDate',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.SettlementDate',
      'shortDisplayName': 'SettlementDate',
      'name': 'SettlementDate'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.trading.DateService@@getTradeDate',
      'namespace': 'demo.orderFeeds.trading',
      'longDisplayName': 'demo.orderFeeds.trading.DateService / getTradeDate',
      'shortDisplayName': 'getTradeDate',
      'name': 'DateService@@getTradeDate'
    },
    'name': 'getTradeDate'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrders',
      'shortDisplayName': 'getOrders',
      'name': 'BloombergOrderFeedService@@getOrders'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'shortDisplayName': 'BloombergOrder',
        'name': 'BloombergOrder'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.bloomberg.BloombergOrder>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder[]',
      'shortDisplayName': 'BloombergOrder[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/orders' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'namespace': 'demo.orderFeeds.bloomberg',
          'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
          'shortDisplayName': 'BloombergOrder',
          'name': 'BloombergOrder'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.bloomberg.BloombergOrder>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder[]',
        'shortDisplayName': 'BloombergOrder[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'shortDisplayName': 'BloombergOrder',
        'name': 'BloombergOrder'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.bloomberg.BloombergOrder>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder[]',
      'shortDisplayName': 'BloombergOrder[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrders',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrders',
      'shortDisplayName': 'getOrders',
      'name': 'BloombergOrderFeedService@@getOrders'
    },
    'name': 'getOrders'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrder',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrder',
      'shortDisplayName': 'getOrder',
      'name': 'BloombergOrderFeedService@@getOrder'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
        'shortDisplayName': 'BloombergOrderId',
        'name': 'BloombergOrderId'
      },
      'name': 'orderId',
      'metadata': [],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderId',
        'shortDisplayName': 'BloombergOrderId',
        'name': 'BloombergOrderId'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
      'shortDisplayName': 'BloombergOrder',
      'name': 'BloombergOrder'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/order/{orderId}' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
        'shortDisplayName': 'BloombergOrder',
        'name': 'BloombergOrder'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrder',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrder',
      'shortDisplayName': 'BloombergOrder',
      'name': 'BloombergOrder'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrder',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService@@getOrder',
      'namespace': 'demo.orderFeeds.bloomberg',
      'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergOrderFeedService / getOrder',
      'shortDisplayName': 'getOrder',
      'name': 'BloombergOrderFeedService@@getOrder'
    },
    'name': 'getOrder'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
      'namespace': 'demo.orderFeeds.instrument',
      'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstruments',
      'shortDisplayName': 'getInstruments',
      'name': 'InstrumentService@@getInstruments'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
      'shortDisplayName': 'Instrument[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/instruments' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
          'namespace': 'demo.orderFeeds.instrument',
          'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
          'shortDisplayName': 'Instrument',
          'name': 'Instrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
        'shortDisplayName': 'Instrument[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrument.Instrument>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.instrument.Instrument[]',
      'shortDisplayName': 'Instrument[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstruments',
      'namespace': 'demo.orderFeeds.instrument',
      'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstruments',
      'shortDisplayName': 'getInstruments',
      'name': 'InstrumentService@@getInstruments'
    },
    'name': 'getInstruments'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstrument',
      'namespace': 'demo.orderFeeds.instrument',
      'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstrument',
      'shortDisplayName': 'getInstrument',
      'name': 'InstrumentService@@getInstrument'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.InstrumentId',
        'namespace': 'demo.orderFeeds',
        'longDisplayName': 'demo.orderFeeds.InstrumentId',
        'shortDisplayName': 'InstrumentId',
        'name': 'InstrumentId'
      },
      'name': 'id',
      'metadata': [],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.InstrumentId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.InstrumentId',
        'namespace': 'demo.orderFeeds',
        'longDisplayName': 'demo.orderFeeds.InstrumentId',
        'shortDisplayName': 'InstrumentId',
        'name': 'InstrumentId'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
      'namespace': 'demo.orderFeeds.instrument',
      'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
      'shortDisplayName': 'Instrument',
      'name': 'Instrument'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/instrument/{id}' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
        'namespace': 'demo.orderFeeds.instrument',
        'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
        'shortDisplayName': 'Instrument',
        'name': 'Instrument'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.instrument.Instrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrument.Instrument',
      'namespace': 'demo.orderFeeds.instrument',
      'longDisplayName': 'demo.orderFeeds.instrument.Instrument',
      'shortDisplayName': 'Instrument',
      'name': 'Instrument'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstrument',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrument.InstrumentService@@getInstrument',
      'namespace': 'demo.orderFeeds.instrument',
      'longDisplayName': 'demo.orderFeeds.instrument.InstrumentService / getInstrument',
      'shortDisplayName': 'getInstrument',
      'name': 'InstrumentService@@getInstrument'
    },
    'name': 'getInstrument'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
      'namespace': 'demo.orderFeeds.reuters',
      'longDisplayName': 'demo.orderFeeds.reuters.ReutersMarketDataService / getInstruments',
      'shortDisplayName': 'getInstruments',
      'name': 'ReutersMarketDataService@@getInstruments'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrument',
        'namespace': 'demo.orderFeeds.reuters',
        'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument',
        'shortDisplayName': 'ReutersInstrument',
        'name': 'ReutersInstrument'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.reuters.ReutersInstrument>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument[]',
      'shortDisplayName': 'ReutersInstrument[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'namespace': 'demo.orderFeeds.reuters',
          'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument',
          'shortDisplayName': 'ReutersInstrument',
          'name': 'ReutersInstrument'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.reuters.ReutersInstrument>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument[]',
        'shortDisplayName': 'ReutersInstrument[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersInstrument',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.reuters.ReutersInstrument',
        'namespace': 'demo.orderFeeds.reuters',
        'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument',
        'shortDisplayName': 'ReutersInstrument',
        'name': 'ReutersInstrument'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.reuters.ReutersInstrument>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.reuters.ReutersInstrument[]',
      'shortDisplayName': 'ReutersInstrument[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.reuters.ReutersMarketDataService@@getInstruments',
      'namespace': 'demo.orderFeeds.reuters',
      'longDisplayName': 'demo.orderFeeds.reuters.ReutersMarketDataService / getInstruments',
      'shortDisplayName': 'getInstruments',
      'name': 'ReutersMarketDataService@@getInstruments'
    },
    'name': 'getInstruments'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService@@getClients',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.ClientService@@getClients',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.ClientService / getClients',
      'shortDisplayName': 'getClients',
      'name': 'ClientService@@getClients'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.Client',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.Client',
        'shortDisplayName': 'Client',
        'name': 'Client'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.clients.Client>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.clients.Client[]',
      'shortDisplayName': 'Client[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/clients' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.clients.Client',
          'namespace': 'demo.orderFeeds.clients',
          'longDisplayName': 'demo.orderFeeds.clients.Client',
          'shortDisplayName': 'Client',
          'name': 'Client'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.clients.Client>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.clients.Client[]',
        'shortDisplayName': 'Client[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.Client',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.Client',
        'shortDisplayName': 'Client',
        'name': 'Client'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.clients.Client>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.clients.Client[]',
      'shortDisplayName': 'Client[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService@@getClients',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.ClientService@@getClients',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.ClientService / getClients',
      'shortDisplayName': 'getClients',
      'name': 'ClientService@@getClients'
    },
    'name': 'getClients'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService@@getClient',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.ClientService@@getClient',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.ClientService / getClient',
      'shortDisplayName': 'getClient',
      'name': 'ClientService@@getClient'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.BankClientId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.BankClientId',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.BankClientId',
        'shortDisplayName': 'BankClientId',
        'name': 'BankClientId'
      },
      'name': 'id',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'id' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.BankClientId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.BankClientId',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.BankClientId',
        'shortDisplayName': 'BankClientId',
        'name': 'BankClientId'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.Client',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.Client',
      'shortDisplayName': 'Client',
      'name': 'Client'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/client/{id}' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.clients.Client',
        'namespace': 'demo.orderFeeds.clients',
        'longDisplayName': 'demo.orderFeeds.clients.Client',
        'shortDisplayName': 'Client',
        'name': 'Client'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.Client',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.Client',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.Client',
      'shortDisplayName': 'Client',
      'name': 'Client'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'demo.orderFeeds.clients.ClientService@@getClient',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.clients.ClientService@@getClient',
      'namespace': 'demo.orderFeeds.clients',
      'longDisplayName': 'demo.orderFeeds.clients.ClientService / getClient',
      'shortDisplayName': 'getClient',
      'name': 'ClientService@@getClient'
    },
    'name': 'getClient'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@getAll',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@getAll',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / getAll',
      'shortDisplayName': 'getAll',
      'name': 'TraderIdMappingsCaskService@@getAll'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
      'shortDisplayName': 'TraderIdMappings[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/api/cask/findAll/demo/orderFeeds/traderIdMappings/TraderIdMappings' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
      'shortDisplayName': 'TraderIdMappings[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@getAll',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@getAll',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / getAll',
      'shortDisplayName': 'getAll',
      'name': 'TraderIdMappingsCaskService@@getAll'
    },
    'name': 'getAll'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetween',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetween',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetween',
      'shortDisplayName': 'findByCaskInsertedAtBetween',
      'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetween'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'start',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'start' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }, {
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'end',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'end' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
      'shortDisplayName': 'TraderIdMappings[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/Between/{start}/{end}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'GREATER_THAN_OR_EQUAL_TO',
        'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
        'compilationUnits': []
      }, {
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'LESS_THAN',
        'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
      'shortDisplayName': 'TraderIdMappings[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetween',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetween',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetween',
      'shortDisplayName': 'findByCaskInsertedAtBetween',
      'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetween'
    },
    'name': 'findByCaskInsertedAtBetween'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGteLte',
      'shortDisplayName': 'findByCaskInsertedAtBetweenGteLte',
      'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'start',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'start' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }, {
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'end',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'end' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
      'shortDisplayName': 'TraderIdMappings[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/BetweenGteLte/{start}/{end}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'GREATER_THAN_OR_EQUAL_TO',
        'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
        'compilationUnits': []
      }, {
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'LESS_THAN_OR_EQUAL_TO',
        'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
      'shortDisplayName': 'TraderIdMappings[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGteLte',
      'shortDisplayName': 'findByCaskInsertedAtBetweenGteLte',
      'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGteLte'
    },
    'name': 'findByCaskInsertedAtBetweenGteLte'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGtLt',
      'shortDisplayName': 'findByCaskInsertedAtBetweenGtLt',
      'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'start',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'start' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }, {
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'end',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'end' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
      'shortDisplayName': 'TraderIdMappings[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/BetweenGtLt/{start}/{end}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'GREATER_THAN',
        'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
        'compilationUnits': []
      }, {
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'LESS_THAN',
        'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
      'shortDisplayName': 'TraderIdMappings[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGtLt',
      'shortDisplayName': 'findByCaskInsertedAtBetweenGtLt',
      'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLt'
    },
    'name': 'findByCaskInsertedAtBetweenGtLt'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGtLte',
      'shortDisplayName': 'findByCaskInsertedAtBetweenGtLte',
      'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'start',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'start' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }, {
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'end',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'end' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
      'shortDisplayName': 'TraderIdMappings[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/BetweenGtLte/{start}/{end}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'GREATER_THAN',
        'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
        'compilationUnits': []
      }, {
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'LESS_THAN_OR_EQUAL_TO',
        'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
      'shortDisplayName': 'TraderIdMappings[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findByCaskInsertedAtBetweenGtLte',
      'shortDisplayName': 'findByCaskInsertedAtBetweenGtLte',
      'name': 'TraderIdMappingsCaskService@@findByCaskInsertedAtBetweenGtLte'
    },
    'name': 'findByCaskInsertedAtBetweenGtLte'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamAll',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamAll',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamAll',
      'shortDisplayName': 'streamAll',
      'name': 'TraderIdMappingsCaskService@@streamAll'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'shortDisplayName': 'Stream<TraderIdMappings>',
      'name': 'Stream'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'GET', 'url': '/api/cask/streamAll/demo/orderFeeds/traderIdMappings/TraderIdMappings' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'shortDisplayName': 'Stream<TraderIdMappings>',
      'name': 'Stream'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamAll',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamAll',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamAll',
      'shortDisplayName': 'streamAll',
      'name': 'TraderIdMappingsCaskService@@streamAll'
    },
    'name': 'streamAll'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamByCaskInsertedAtBetween',
      'shortDisplayName': 'streamByCaskInsertedAtBetween',
      'name': 'TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'start',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'start' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }, {
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'end',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'end' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings><vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'shortDisplayName': 'Stream<TraderIdMappings>',
      'name': 'Stream'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/demo/orderFeeds/traderIdMappings/TraderIdMappings/CaskInsertedAt/streamBetween/{start}/{end}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings><vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'GREATER_THAN_OR_EQUAL_TO',
        'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
        'compilationUnits': []
      }, {
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'LESS_THAN',
        'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings><vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'shortDisplayName': 'Stream<TraderIdMappings>',
      'name': 'Stream'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamByCaskInsertedAtBetween',
      'shortDisplayName': 'streamByCaskInsertedAtBetween',
      'name': 'TraderIdMappingsCaskService@@streamByCaskInsertedAtBetween'
    },
    'name': 'streamByCaskInsertedAtBetween'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByBloombergId',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByBloombergId',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findSingleByBloombergId',
      'shortDisplayName': 'findSingleByBloombergId',
      'name': 'TraderIdMappingsCaskService@@findSingleByBloombergId'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
        'shortDisplayName': 'BloombergTraderId',
        'name': 'BloombergTraderId'
      },
      'name': 'id',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'id' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
        'namespace': 'demo.orderFeeds.bloomberg',
        'longDisplayName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
        'shortDisplayName': 'BloombergTraderId',
        'name': 'BloombergTraderId'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'namespace': 'demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'shortDisplayName': 'TraderIdMappings',
      'name': 'TraderIdMappings'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/findSingleBy/demo/orderFeeds/traderIdMappings/TraderIdMappings/bloombergId/{id}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'demo.orderFeeds.bloomberg',
            'typeName': 'BloombergTraderId',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
            'fullyQualifiedName': 'demo.orderFeeds.bloomberg.BloombergTraderId',
            'firstTypeParameterOrSelf': 'demo.orderFeeds.bloomberg.BloombergTraderId'
          },
          'description': 'type demo.orderFeeds.bloomberg.BloombergTraderId',
          'taxi': 'demo.orderFeeds.bloomberg.BloombergTraderId'
        },
        'operator': 'EQUAL',
        'expectedValue': { 'path': { 'parts': ['id'], 'path': 'id' }, 'taxi': 'id' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'namespace': 'demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'shortDisplayName': 'TraderIdMappings',
      'name': 'TraderIdMappings'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByBloombergId',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByBloombergId',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findSingleByBloombergId',
      'shortDisplayName': 'findSingleByBloombergId',
      'name': 'TraderIdMappingsCaskService@@findSingleByBloombergId'
    },
    'name': 'findSingleByBloombergId'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByIcapId',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByIcapId',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findSingleByIcapId',
      'shortDisplayName': 'findSingleByIcapId',
      'name': 'TraderIdMappingsCaskService@@findSingleByIcapId'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
        'shortDisplayName': 'IcapTraderId',
        'name': 'IcapTraderId'
      },
      'name': 'id',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'id' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
        'namespace': 'demo.orderFeeds.icap',
        'longDisplayName': 'demo.orderFeeds.icap.IcapTraderId',
        'shortDisplayName': 'IcapTraderId',
        'name': 'IcapTraderId'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'namespace': 'demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'shortDisplayName': 'TraderIdMappings',
      'name': 'TraderIdMappings'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/findSingleBy/demo/orderFeeds/traderIdMappings/TraderIdMappings/icapId/{id}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'demo.orderFeeds.icap',
            'typeName': 'IcapTraderId',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.icap.IcapTraderId',
            'fullyQualifiedName': 'demo.orderFeeds.icap.IcapTraderId',
            'firstTypeParameterOrSelf': 'demo.orderFeeds.icap.IcapTraderId'
          }, 'description': 'type demo.orderFeeds.icap.IcapTraderId', 'taxi': 'demo.orderFeeds.icap.IcapTraderId'
        },
        'operator': 'EQUAL',
        'expectedValue': { 'path': { 'parts': ['id'], 'path': 'id' }, 'taxi': 'id' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'namespace': 'demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
      'shortDisplayName': 'TraderIdMappings',
      'name': 'TraderIdMappings'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByIcapId',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@findSingleByIcapId',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / findSingleByIcapId',
      'shortDisplayName': 'findSingleByIcapId',
      'name': 'TraderIdMappingsCaskService@@findSingleByIcapId'
    },
    'name': 'findSingleByIcapId'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@getAll',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@getAll',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / getAll',
      'shortDisplayName': 'getAll',
      'name': 'InstrumentIdMappingCaskService@@getAll'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
      'shortDisplayName': 'InstrumentIdMapping[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': { 'method': 'GET', 'url': '/api/cask/findAll/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping' }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
      'shortDisplayName': 'InstrumentIdMapping[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@getAll',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@getAll',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / getAll',
      'shortDisplayName': 'getAll',
      'name': 'InstrumentIdMappingCaskService@@getAll'
    },
    'name': 'getAll'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetween',
      'shortDisplayName': 'findByCaskInsertedAtBetween',
      'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'start',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'start' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }, {
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'end',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'end' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
      'shortDisplayName': 'InstrumentIdMapping[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/Between/{start}/{end}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'GREATER_THAN_OR_EQUAL_TO',
        'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
        'compilationUnits': []
      }, {
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'LESS_THAN',
        'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
      'shortDisplayName': 'InstrumentIdMapping[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetween',
      'shortDisplayName': 'findByCaskInsertedAtBetween',
      'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetween'
    },
    'name': 'findByCaskInsertedAtBetween'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGteLte',
      'shortDisplayName': 'findByCaskInsertedAtBetweenGteLte',
      'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'start',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'start' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }, {
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'end',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'end' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
      'shortDisplayName': 'InstrumentIdMapping[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/BetweenGteLte/{start}/{end}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'GREATER_THAN_OR_EQUAL_TO',
        'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
        'compilationUnits': []
      }, {
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'LESS_THAN_OR_EQUAL_TO',
        'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
      'shortDisplayName': 'InstrumentIdMapping[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGteLte',
      'shortDisplayName': 'findByCaskInsertedAtBetweenGteLte',
      'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGteLte'
    },
    'name': 'findByCaskInsertedAtBetweenGteLte'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGtLt',
      'shortDisplayName': 'findByCaskInsertedAtBetweenGtLt',
      'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'start',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'start' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }, {
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'end',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'end' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
      'shortDisplayName': 'InstrumentIdMapping[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/BetweenGtLt/{start}/{end}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'GREATER_THAN',
        'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
        'compilationUnits': []
      }, {
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'LESS_THAN',
        'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
      'shortDisplayName': 'InstrumentIdMapping[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGtLt',
      'shortDisplayName': 'findByCaskInsertedAtBetweenGtLt',
      'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLt'
    },
    'name': 'findByCaskInsertedAtBetweenGtLt'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGtLte',
      'shortDisplayName': 'findByCaskInsertedAtBetweenGtLte',
      'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'start',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'start' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }, {
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'end',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'end' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
      'shortDisplayName': 'InstrumentIdMapping[]',
      'name': 'Array'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/BetweenGtLte/{start}/{end}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'GREATER_THAN',
        'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
        'compilationUnits': []
      }, {
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'LESS_THAN_OR_EQUAL_TO',
        'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Array<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
      'shortDisplayName': 'InstrumentIdMapping[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findByCaskInsertedAtBetweenGtLte',
      'shortDisplayName': 'findByCaskInsertedAtBetweenGtLte',
      'name': 'InstrumentIdMappingCaskService@@findByCaskInsertedAtBetweenGtLte'
    },
    'name': 'findByCaskInsertedAtBetweenGtLte'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamAll',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamAll',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamAll',
      'shortDisplayName': 'streamAll',
      'name': 'InstrumentIdMappingCaskService@@streamAll'
    },
    'parameters': [],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'shortDisplayName': 'Stream<InstrumentIdMapping>',
      'name': 'Stream'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/streamAll/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      }, 'constraints': []
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'shortDisplayName': 'Stream<InstrumentIdMapping>',
      'name': 'Stream'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamAll',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamAll',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamAll',
      'shortDisplayName': 'streamAll',
      'name': 'InstrumentIdMappingCaskService@@streamAll'
    },
    'name': 'streamAll'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamByCaskInsertedAtBetween',
      'shortDisplayName': 'streamByCaskInsertedAtBetween',
      'name': 'InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'start',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'start' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }, {
      'type': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      },
      'name': 'end',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'end' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
        'parameters': [],
        'parameterizedName': 'vyne.cask.CaskInsertedAt',
        'namespace': 'vyne.cask',
        'longDisplayName': 'vyne.cask.CaskInsertedAt',
        'shortDisplayName': 'CaskInsertedAt',
        'name': 'CaskInsertedAt'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'shortDisplayName': 'Stream<InstrumentIdMapping>',
      'name': 'Stream'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/CaskInsertedAt/streamBetween/{start}/{end}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'GREATER_THAN_OR_EQUAL_TO',
        'expectedValue': { 'path': { 'parts': ['start'], 'path': 'start' }, 'taxi': 'start' },
        'compilationUnits': []
      }, {
        'propertyIdentifier': {
          'type': {
            'namespace': 'vyne.cask',
            'typeName': 'CaskInsertedAt',
            'parameters': [],
            'parameterizedName': 'vyne.cask.CaskInsertedAt',
            'fullyQualifiedName': 'vyne.cask.CaskInsertedAt',
            'firstTypeParameterOrSelf': 'vyne.cask.CaskInsertedAt'
          }, 'description': 'type vyne.cask.CaskInsertedAt', 'taxi': 'vyne.cask.CaskInsertedAt'
        },
        'operator': 'LESS_THAN',
        'expectedValue': { 'path': { 'parts': ['end'], 'path': 'end' }, 'taxi': 'end' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [{
        'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream<vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'shortDisplayName': 'Stream<InstrumentIdMapping>',
      'name': 'Stream'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamByCaskInsertedAtBetween',
      'shortDisplayName': 'streamByCaskInsertedAtBetween',
      'name': 'InstrumentIdMappingCaskService@@streamByCaskInsertedAtBetween'
    },
    'name': 'streamByCaskInsertedAtBetween'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByCusip',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByCusip',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findSingleByCusip',
      'shortDisplayName': 'findSingleByCusip',
      'name': 'InstrumentIdMappingCaskService@@findSingleByCusip'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.Cusip',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.Cusip',
        'namespace': 'demo.orderFeeds',
        'longDisplayName': 'demo.orderFeeds.Cusip',
        'shortDisplayName': 'Cusip',
        'name': 'Cusip'
      },
      'name': 'id',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'id' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.Cusip',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.Cusip',
        'namespace': 'demo.orderFeeds',
        'longDisplayName': 'demo.orderFeeds.Cusip',
        'shortDisplayName': 'Cusip',
        'name': 'Cusip'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'namespace': 'demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'shortDisplayName': 'InstrumentIdMapping',
      'name': 'InstrumentIdMapping'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/findSingleBy/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/cusip/{id}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'demo.orderFeeds',
            'typeName': 'Cusip',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.Cusip',
            'fullyQualifiedName': 'demo.orderFeeds.Cusip',
            'firstTypeParameterOrSelf': 'demo.orderFeeds.Cusip'
          }, 'description': 'type demo.orderFeeds.Cusip', 'taxi': 'demo.orderFeeds.Cusip'
        },
        'operator': 'EQUAL',
        'expectedValue': { 'path': { 'parts': ['id'], 'path': 'id' }, 'taxi': 'id' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'namespace': 'demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'shortDisplayName': 'InstrumentIdMapping',
      'name': 'InstrumentIdMapping'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByCusip',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByCusip',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findSingleByCusip',
      'shortDisplayName': 'findSingleByCusip',
      'name': 'InstrumentIdMappingCaskService@@findSingleByCusip'
    },
    'name': 'findSingleByCusip'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByIsin',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByIsin',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findSingleByIsin',
      'shortDisplayName': 'findSingleByIsin',
      'name': 'InstrumentIdMappingCaskService@@findSingleByIsin'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'demo.orderFeeds.Isin',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.Isin',
        'namespace': 'demo.orderFeeds',
        'longDisplayName': 'demo.orderFeeds.Isin',
        'shortDisplayName': 'Isin',
        'name': 'Isin'
      },
      'name': 'id',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'PathVariable',
          'parameters': [],
          'parameterizedName': 'PathVariable',
          'namespace': '',
          'longDisplayName': 'PathVariable',
          'shortDisplayName': 'PathVariable',
          'name': 'PathVariable'
        }, 'params': { 'name': 'id' }
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'demo.orderFeeds.Isin',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.Isin',
        'namespace': 'demo.orderFeeds',
        'longDisplayName': 'demo.orderFeeds.Isin',
        'shortDisplayName': 'Isin',
        'name': 'Isin'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'namespace': 'demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'shortDisplayName': 'InstrumentIdMapping',
      'name': 'InstrumentIdMapping'
    },
    'operationType': null,
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      },
      'params': {
        'method': 'GET',
        'url': '/api/cask/findSingleBy/demo/orderFeeds/instrumentIdMappings/InstrumentIdMapping/isin/{id}'
      }
    }],
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      },
      'constraints': [{
        'propertyIdentifier': {
          'type': {
            'namespace': 'demo.orderFeeds',
            'typeName': 'Isin',
            'parameters': [],
            'parameterizedName': 'demo.orderFeeds.Isin',
            'fullyQualifiedName': 'demo.orderFeeds.Isin',
            'firstTypeParameterOrSelf': 'demo.orderFeeds.Isin'
          }, 'description': 'type demo.orderFeeds.Isin', 'taxi': 'demo.orderFeeds.Isin'
        },
        'operator': 'EQUAL',
        'expectedValue': { 'path': { 'parts': ['id'], 'path': 'id' }, 'taxi': 'id' },
        'compilationUnits': []
      }]
    },
    'typeDoc': null,
    'returnTypeName': {
      'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'namespace': 'demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
      'shortDisplayName': 'InstrumentIdMapping',
      'name': 'InstrumentIdMapping'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByIsin',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@findSingleByIsin',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / findSingleByIsin',
      'shortDisplayName': 'findSingleByIsin',
      'name': 'InstrumentIdMappingCaskService@@findSingleByIsin'
    },
    'name': 'findSingleByIsin'
  }],
  'queryOperations': [{
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamVyneQlQueryTraderIdMappings',
      'shortDisplayName': 'streamVyneQlQueryTraderIdMappings',
      'name': 'TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
        'parameters': [],
        'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
        'namespace': 'vyne.vyneQl',
        'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
        'shortDisplayName': 'VyneQlQuery',
        'name': 'VyneQlQuery'
      },
      'name': 'body',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'RequestBody',
          'parameters': [],
          'parameterizedName': 'RequestBody',
          'namespace': '',
          'longDisplayName': 'RequestBody',
          'shortDisplayName': 'RequestBody',
          'name': 'RequestBody'
        }, 'params': {}
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
        'parameters': [],
        'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
        'namespace': 'vyne.vyneQl',
        'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
        'shortDisplayName': 'VyneQlQuery',
        'name': 'VyneQlQuery'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'shortDisplayName': 'Stream<TraderIdMappings>',
      'name': 'Stream'
    },
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'POST', 'url': '/api/continuous/vyneQl' }
    }],
    'grammar': 'vyneQl',
    'capabilities': [{ 'supportedOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'] }],
    'typeDoc': null,
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'shortDisplayName': 'Stream<TraderIdMappings>',
        'name': 'Stream'
      }, 'constraints': []
    },
    'operationType': null,
    'hasFilterCapability': true,
    'supportedFilterOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'],
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.traderIdMappings.TraderIdMappings><demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'shortDisplayName': 'Stream<TraderIdMappings>',
      'name': 'Stream'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / streamVyneQlQueryTraderIdMappings',
      'shortDisplayName': 'streamVyneQlQueryTraderIdMappings',
      'name': 'TraderIdMappingsCaskService@@streamVyneQlQueryTraderIdMappings'
    },
    'name': 'streamVyneQlQueryTraderIdMappings'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / vyneQlQueryTraderIdMappings',
      'shortDisplayName': 'vyneQlQueryTraderIdMappings',
      'name': 'TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
        'parameters': [],
        'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
        'namespace': 'vyne.vyneQl',
        'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
        'shortDisplayName': 'VyneQlQuery',
        'name': 'VyneQlQuery'
      },
      'name': 'body',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'RequestBody',
          'parameters': [],
          'parameterizedName': 'RequestBody',
          'namespace': '',
          'longDisplayName': 'RequestBody',
          'shortDisplayName': 'RequestBody',
          'name': 'RequestBody'
        }, 'params': {}
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
        'parameters': [],
        'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
        'namespace': 'vyne.vyneQl',
        'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
        'shortDisplayName': 'VyneQlQuery',
        'name': 'VyneQlQuery'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
      'shortDisplayName': 'TraderIdMappings[]',
      'name': 'Array'
    },
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'POST', 'url': '/api/vyneQl' }
    }],
    'grammar': 'vyneQl',
    'capabilities': [{ 'supportedOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'] }],
    'typeDoc': null,
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'namespace': 'demo.orderFeeds.traderIdMappings',
          'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
          'shortDisplayName': 'TraderIdMappings',
          'name': 'TraderIdMappings'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
        'shortDisplayName': 'TraderIdMappings[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'operationType': null,
    'hasFilterCapability': true,
    'supportedFilterOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'],
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'namespace': 'demo.orderFeeds.traderIdMappings',
        'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings',
        'shortDisplayName': 'TraderIdMappings',
        'name': 'TraderIdMappings'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.traderIdMappings.TraderIdMappings>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.traderIdMappings.TraderIdMappings[]',
      'shortDisplayName': 'TraderIdMappings[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings',
      'namespace': 'vyne.cask.demo.orderFeeds.traderIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.traderIdMappings.TraderIdMappingsCaskService / vyneQlQueryTraderIdMappings',
      'shortDisplayName': 'vyneQlQueryTraderIdMappings',
      'name': 'TraderIdMappingsCaskService@@vyneQlQueryTraderIdMappings'
    },
    'name': 'vyneQlQueryTraderIdMappings'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamVyneQlQueryInstrumentIdMapping',
      'shortDisplayName': 'streamVyneQlQueryInstrumentIdMapping',
      'name': 'InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
        'parameters': [],
        'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
        'namespace': 'vyne.vyneQl',
        'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
        'shortDisplayName': 'VyneQlQuery',
        'name': 'VyneQlQuery'
      },
      'name': 'body',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'RequestBody',
          'parameters': [],
          'parameterizedName': 'RequestBody',
          'namespace': '',
          'longDisplayName': 'RequestBody',
          'shortDisplayName': 'RequestBody',
          'name': 'RequestBody'
        }, 'params': {}
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
        'parameters': [],
        'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
        'namespace': 'vyne.vyneQl',
        'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
        'shortDisplayName': 'VyneQlQuery',
        'name': 'VyneQlQuery'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'shortDisplayName': 'Stream<InstrumentIdMapping>',
      'name': 'Stream'
    },
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'POST', 'url': '/api/continuous/vyneQl' }
    }],
    'grammar': 'vyneQl',
    'capabilities': [{ 'supportedOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'] }],
    'typeDoc': null,
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Stream',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'shortDisplayName': 'Stream<InstrumentIdMapping>',
        'name': 'Stream'
      }, 'constraints': []
    },
    'operationType': null,
    'hasFilterCapability': true,
    'supportedFilterOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'],
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Stream',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'lang.taxi.Stream<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping><demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'shortDisplayName': 'Stream<InstrumentIdMapping>',
      'name': 'Stream'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / streamVyneQlQueryInstrumentIdMapping',
      'shortDisplayName': 'streamVyneQlQueryInstrumentIdMapping',
      'name': 'InstrumentIdMappingCaskService@@streamVyneQlQueryInstrumentIdMapping'
    },
    'name': 'streamVyneQlQueryInstrumentIdMapping'
  }, {
    'qualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / vyneQlQueryInstrumentIdMapping',
      'shortDisplayName': 'vyneQlQueryInstrumentIdMapping',
      'name': 'InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping'
    },
    'parameters': [{
      'type': {
        'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
        'parameters': [],
        'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
        'namespace': 'vyne.vyneQl',
        'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
        'shortDisplayName': 'VyneQlQuery',
        'name': 'VyneQlQuery'
      },
      'name': 'body',
      'metadata': [{
        'name': {
          'fullyQualifiedName': 'RequestBody',
          'parameters': [],
          'parameterizedName': 'RequestBody',
          'namespace': '',
          'longDisplayName': 'RequestBody',
          'shortDisplayName': 'RequestBody',
          'name': 'RequestBody'
        }, 'params': {}
      }],
      'constraints': [],
      'typeName': {
        'fullyQualifiedName': 'vyne.vyneQl.VyneQlQuery',
        'parameters': [],
        'parameterizedName': 'vyne.vyneQl.VyneQlQuery',
        'namespace': 'vyne.vyneQl',
        'longDisplayName': 'vyne.vyneQl.VyneQlQuery',
        'shortDisplayName': 'VyneQlQuery',
        'name': 'VyneQlQuery'
      }
    }],
    'returnType': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
      'shortDisplayName': 'InstrumentIdMapping[]',
      'name': 'Array'
    },
    'metadata': [{
      'name': {
        'fullyQualifiedName': 'HttpOperation',
        'parameters': [],
        'parameterizedName': 'HttpOperation',
        'namespace': '',
        'longDisplayName': 'HttpOperation',
        'shortDisplayName': 'HttpOperation',
        'name': 'HttpOperation'
      }, 'params': { 'method': 'POST', 'url': '/api/vyneQl' }
    }],
    'grammar': 'vyneQl',
    'capabilities': [{ 'supportedOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'] }],
    'typeDoc': null,
    'contract': {
      'returnType': {
        'fullyQualifiedName': 'lang.taxi.Array',
        'parameters': [{
          'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'parameters': [],
          'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'namespace': 'demo.orderFeeds.instrumentIdMappings',
          'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
          'shortDisplayName': 'InstrumentIdMapping',
          'name': 'InstrumentIdMapping'
        }],
        'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
        'namespace': 'lang.taxi',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
        'shortDisplayName': 'InstrumentIdMapping[]',
        'name': 'Array'
      }, 'constraints': []
    },
    'operationType': null,
    'hasFilterCapability': true,
    'supportedFilterOperations': ['EQUAL', 'NOT_EQUAL', 'IN', 'LIKE', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL_TO', 'LESS_THAN_OR_EQUAL_TO'],
    'returnTypeName': {
      'fullyQualifiedName': 'lang.taxi.Array',
      'parameters': [{
        'fullyQualifiedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'parameters': [],
        'parameterizedName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'namespace': 'demo.orderFeeds.instrumentIdMappings',
        'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping',
        'shortDisplayName': 'InstrumentIdMapping',
        'name': 'InstrumentIdMapping'
      }],
      'parameterizedName': 'lang.taxi.Array<demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping>',
      'namespace': 'lang.taxi',
      'longDisplayName': 'demo.orderFeeds.instrumentIdMappings.InstrumentIdMapping[]',
      'shortDisplayName': 'InstrumentIdMapping[]',
      'name': 'Array'
    },
    'memberQualifiedName': {
      'fullyQualifiedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping',
      'parameters': [],
      'parameterizedName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping',
      'namespace': 'vyne.cask.demo.orderFeeds.instrumentIdMappings',
      'longDisplayName': 'vyne.cask.demo.orderFeeds.instrumentIdMappings.InstrumentIdMappingCaskService / vyneQlQueryInstrumentIdMapping',
      'shortDisplayName': 'vyneQlQueryInstrumentIdMapping',
      'name': 'InstrumentIdMappingCaskService@@vyneQlQueryInstrumentIdMapping'
    },
    'name': 'vyneQlQueryInstrumentIdMapping'
  }]
} as any as Schema


