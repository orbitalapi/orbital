export const IMPORT_RESULT = {
  "types": [
    {
      "name": {
        "fullyQualifiedName": "com.spotify.LinkedTrackObject",
        "parameters": [],
        "name": "LinkedTrackObject",
        "parameterizedName": "com.spotify.LinkedTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.LinkedTrackObject",
        "shortDisplayName": "LinkedTrackObject"
      },
      "attributes": {
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeLinkedTrackObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeLinkedTrackObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type: \"track\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model LinkedTrackObject {\n         [[ Known external URLs for this track.\n         ]]\n         external_urls : AnonymousTypeLinkedTrackObjectExternal_urls\n         [[ A link to the Web API endpoint providing full details of the track.\n         ]]\n         href : String\n         [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track.\n         ]]\n         id : String\n         [[ The object type: \"track\".\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track.\n         ]]\n         uri : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "c90577",
        "fullHash": "06771294f211f17f60722348917521ca7c3a97dd4ca6bbf68574dd64f6b57cc7"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.LinkedTrackObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.LinkedTrackObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.LinkedTrackObject",
        "parameters": [],
        "name": "LinkedTrackObject",
        "parameterizedName": "com.spotify.LinkedTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.LinkedTrackObject",
        "shortDisplayName": "LinkedTrackObject"
      },
      "fullyQualifiedName": "com.spotify.LinkedTrackObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeLinkedTrackObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeLinkedTrackObjectExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Known external URLs for this track.\n      ]]\n      type AnonymousTypeLinkedTrackObjectExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "e27608",
        "fullHash": "b0b4dfc9cd856fb84954d801d6b4c282f97360ce5ee5bace8e595932b65d5a1e"
      }],
      "typeParameters": [],
      "typeDoc": "Known external URLs for this track.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeLinkedTrackObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeLinkedTrackObjectExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ExternalUrlObject {\n         [[ The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.\n         ]]\n         spotify : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5dcb85",
        "fullHash": "65156e0f653c0099485f429dd01e88e4e5bbb7bd7a17af88b5563bfbcbd5693d"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ExternalUrlObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ExternalUrlObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      },
      "fullyQualifiedName": "com.spotify.ExternalUrlObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.TrackRestrictionObject",
        "parameters": [],
        "name": "TrackRestrictionObject",
        "parameterizedName": "com.spotify.TrackRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TrackRestrictionObject",
        "shortDisplayName": "TrackRestrictionObject"
      },
      "attributes": {
        "reason": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The reason for the restriction. Supported values:\n     - `market` - The content item is not available in the given market.\n     - `product` - The content item is not available for the user's subscription type.\n     - `explicit` - The content item is explicit and the user's account is set to not play explicit content.\n     Additional reasons may be added in the future.\n     **Note**: If you use this field, make sure that your application safely handles unknown values.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model TrackRestrictionObject {\n         [[ The reason for the restriction. Supported values:\n         - `market` - The content item is not available in the given market.\n         - `product` - The content item is not available for the user's subscription type.\n         - `explicit` - The content item is explicit and the user's account is set to not play explicit content.\n         Additional reasons may be added in the future.\n         **Note**: If you use this field, make sure that your application safely handles unknown values.\n         ]]\n         reason : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "cf1d52",
        "fullHash": "5a7daddb79561c5009da51b31a96080cc22f25b38c889dd9da251d1e8f1dc3ff"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.TrackRestrictionObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.TrackRestrictionObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.TrackRestrictionObject",
        "parameters": [],
        "name": "TrackRestrictionObject",
        "parameterizedName": "com.spotify.TrackRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TrackRestrictionObject",
        "shortDisplayName": "TrackRestrictionObject"
      },
      "fullyQualifiedName": "com.spotify.TrackRestrictionObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AlbumRestrictionObject",
        "parameters": [],
        "name": "AlbumRestrictionObject",
        "parameterizedName": "com.spotify.AlbumRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumRestrictionObject",
        "shortDisplayName": "AlbumRestrictionObject"
      },
      "attributes": {
        "reason": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The reason for the restriction. Albums may be restricted if the content is not available in a given market, to the user's subscription type, or when the user's account is set to not play explicit content.\n     Additional reasons may be added in the future.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AlbumRestrictionObject {\n         [[ The reason for the restriction. Albums may be restricted if the content is not available in a given market, to the user's subscription type, or when the user's account is set to not play explicit content.\n         Additional reasons may be added in the future.\n         ]]\n         reason : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "b95e38",
        "fullHash": "e8a90d18bd369a4e884ea3c347223871f9e0a3baf388bdf8f554124ecf58f818"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AlbumRestrictionObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AlbumRestrictionObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AlbumRestrictionObject",
        "parameters": [],
        "name": "AlbumRestrictionObject",
        "parameterizedName": "com.spotify.AlbumRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumRestrictionObject",
        "shortDisplayName": "AlbumRestrictionObject"
      },
      "fullyQualifiedName": "com.spotify.AlbumRestrictionObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.EpisodeRestrictionObject",
        "parameters": [],
        "name": "EpisodeRestrictionObject",
        "parameterizedName": "com.spotify.EpisodeRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodeRestrictionObject",
        "shortDisplayName": "EpisodeRestrictionObject"
      },
      "attributes": {
        "reason": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The reason for the restriction. Supported values:\n     - `market` - The content item is not available in the given market.\n     - `product` - The content item is not available for the user's subscription type.\n     - `explicit` - The content item is explicit and the user's account is set to not play explicit content.\n     Additional reasons may be added in the future.\n     **Note**: If you use this field, make sure that your application safely handles unknown values.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model EpisodeRestrictionObject {\n         [[ The reason for the restriction. Supported values:\n         - `market` - The content item is not available in the given market.\n         - `product` - The content item is not available for the user's subscription type.\n         - `explicit` - The content item is explicit and the user's account is set to not play explicit content.\n         Additional reasons may be added in the future.\n         **Note**: If you use this field, make sure that your application safely handles unknown values.\n         ]]\n         reason : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "ebf753",
        "fullHash": "ca70f2c388fd38800769cc72b25fb8e699e2110c604030ea0ef3b7706701ee0d"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.EpisodeRestrictionObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.EpisodeRestrictionObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.EpisodeRestrictionObject",
        "parameters": [],
        "name": "EpisodeRestrictionObject",
        "parameterizedName": "com.spotify.EpisodeRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodeRestrictionObject",
        "shortDisplayName": "EpisodeRestrictionObject"
      },
      "fullyQualifiedName": "com.spotify.EpisodeRestrictionObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ChapterRestrictionObject",
        "parameters": [],
        "name": "ChapterRestrictionObject",
        "parameterizedName": "com.spotify.ChapterRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChapterRestrictionObject",
        "shortDisplayName": "ChapterRestrictionObject"
      },
      "attributes": {
        "reason": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The reason for the restriction. Supported values:\n     - `market` - The content item is not available in the given market.\n     - `product` - The content item is not available for the user's subscription type.\n     - `explicit` - The content item is explicit and the user's account is set to not play explicit content.\n     - `payment_required` - Payment is required to play the content item.\n     Additional reasons may be added in the future.\n     **Note**: If you use this field, make sure that your application safely handles unknown values.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ChapterRestrictionObject {\n         [[ The reason for the restriction. Supported values:\n         - `market` - The content item is not available in the given market.\n         - `product` - The content item is not available for the user's subscription type.\n         - `explicit` - The content item is explicit and the user's account is set to not play explicit content.\n         - `payment_required` - Payment is required to play the content item.\n         Additional reasons may be added in the future.\n         **Note**: If you use this field, make sure that your application safely handles unknown values.\n         ]]\n         reason : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5aa6ae",
        "fullHash": "90d402c6a629d69b5d8aaeaef143b094de8d7c99aeb715cf585e4e8216331726"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ChapterRestrictionObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ChapterRestrictionObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ChapterRestrictionObject",
        "parameters": [],
        "name": "ChapterRestrictionObject",
        "parameterizedName": "com.spotify.ChapterRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChapterRestrictionObject",
        "shortDisplayName": "ChapterRestrictionObject"
      },
      "fullyQualifiedName": "com.spotify.ChapterRestrictionObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ArtistObject",
        "parameters": [],
        "name": "ArtistObject",
        "parameterizedName": "com.spotify.ArtistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ArtistObject",
        "shortDisplayName": "ArtistObject"
      },
      "attributes": {
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeArtistObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeArtistObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "followers": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeArtistObjectFollowers",
            "parameters": [],
            "name": "AnonymousTypeArtistObjectFollowers",
            "parameterizedName": "com.spotify.AnonymousTypeArtistObjectFollowers",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeArtistObjectFollowers",
            "shortDisplayName": "AnonymousTypeArtistObjectFollowers"
          },
          "modifiers": [],
          "typeDoc": "Information about the followers of the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeArtistObjectFollowers",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "genres": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the genres the artist is associated with. If not yet classified, the array is empty.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "Images of the artist in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "popularity": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular. The artist's popularity is calculated from the popularity of all the artist's tracks.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ArtistObject {\n         [[ Known external URLs for this artist.\n         ]]\n         external_urls : AnonymousTypeArtistObjectExternal_urls\n         [[ Information about the followers of the artist.\n         ]]\n         followers : AnonymousTypeArtistObjectFollowers\n         [[ A list of the genres the artist is associated with. If not yet classified, the array is empty.\n         ]]\n         genres : String[]\n         [[ A link to the Web API endpoint providing full details of the artist.\n         ]]\n         href : String\n         [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the artist.\n         ]]\n         id : String\n         [[ Images of the artist in various sizes, widest first.\n         ]]\n         images : ImageObject[]\n         [[ The name of the artist.\n         ]]\n         name : String\n         [[ The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular. The artist's popularity is calculated from the popularity of all the artist's tracks.\n         ]]\n         popularity : Int\n         [[ The object type.\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the artist.\n         ]]\n         uri : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "a0e2b6",
        "fullHash": "77eb88ce70bd853a83a659ef9a99940c6664bfaf144608d6bc98424cc3644ee2"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ArtistObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ArtistObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ArtistObject",
        "parameters": [],
        "name": "ArtistObject",
        "parameterizedName": "com.spotify.ArtistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ArtistObject",
        "shortDisplayName": "ArtistObject"
      },
      "fullyQualifiedName": "com.spotify.ArtistObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeArtistObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeArtistObjectExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Known external URLs for this artist.\n      ]]\n      type AnonymousTypeArtistObjectExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "e84bcc",
        "fullHash": "c34343fd9b483464c3f90d888d4562836b2b25a0c1ac12018d42553260f6cceb"
      }],
      "typeParameters": [],
      "typeDoc": "Known external URLs for this artist.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeArtistObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeArtistObjectExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeArtistObjectExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeArtistObjectFollowers",
        "parameters": [],
        "name": "AnonymousTypeArtistObjectFollowers",
        "parameterizedName": "com.spotify.AnonymousTypeArtistObjectFollowers",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeArtistObjectFollowers",
        "shortDisplayName": "AnonymousTypeArtistObjectFollowers"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "This will always be set to null, as the Web API does not support it at the moment.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of followers.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.FollowersObject",
        "parameters": [],
        "name": "FollowersObject",
        "parameterizedName": "com.spotify.FollowersObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.FollowersObject",
        "shortDisplayName": "FollowersObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Information about the followers of the artist.\n      ]]\n      type AnonymousTypeArtistObjectFollowers inherits FollowersObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "967094",
        "fullHash": "e30d6528cc629ec419920ed08863fa435f04cf2cdea1c3a9f7411b599874958d"
      }],
      "typeParameters": [],
      "typeDoc": "Information about the followers of the artist.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeArtistObjectFollowers",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeArtistObjectFollowers",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeArtistObjectFollowers",
        "parameters": [],
        "name": "AnonymousTypeArtistObjectFollowers",
        "parameterizedName": "com.spotify.AnonymousTypeArtistObjectFollowers",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeArtistObjectFollowers",
        "shortDisplayName": "AnonymousTypeArtistObjectFollowers"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeArtistObjectFollowers",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.FollowersObject",
        "parameters": [],
        "name": "FollowersObject",
        "parameterizedName": "com.spotify.FollowersObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.FollowersObject",
        "shortDisplayName": "FollowersObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "This will always be set to null, as the Web API does not support it at the moment.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of followers.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model FollowersObject {\n         [[ This will always be set to null, as the Web API does not support it at the moment.\n         ]]\n         href : String?\n         [[ The total number of followers.\n         ]]\n         total : Int\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "e475fe",
        "fullHash": "0218175b80a6043dad341ef4aa3118c22993559f0625969ad2a7d4ebfb427d69"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.FollowersObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.FollowersObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.FollowersObject",
        "parameters": [],
        "name": "FollowersObject",
        "parameterizedName": "com.spotify.FollowersObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.FollowersObject",
        "shortDisplayName": "FollowersObject"
      },
      "fullyQualifiedName": "com.spotify.FollowersObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ImageObject",
        "parameters": [],
        "name": "ImageObject",
        "parameterizedName": "com.spotify.ImageObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ImageObject",
        "shortDisplayName": "ImageObject"
      },
      "attributes": {
        "url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The source URL of the image.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "height": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The image height in pixels.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "width": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The image width in pixels.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ImageObject {\n         [[ The source URL of the image.\n         ]]\n         url : String\n         [[ The image height in pixels.\n         ]]\n         height : Int?\n         [[ The image width in pixels.\n         ]]\n         width : Int?\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "45c2be",
        "fullHash": "0ce28a7a93da0da01c1d3d4c2dd5575e8c101465eba1fcb2cdd87f5f820ead26"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ImageObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ImageObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ImageObject",
        "parameters": [],
        "name": "ImageObject",
        "parameterizedName": "com.spotify.ImageObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ImageObject",
        "shortDisplayName": "ImageObject"
      },
      "fullyQualifiedName": "com.spotify.ImageObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SimplifiedArtistObject",
        "parameters": [],
        "name": "SimplifiedArtistObject",
        "parameterizedName": "com.spotify.SimplifiedArtistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedArtistObject",
        "shortDisplayName": "SimplifiedArtistObject"
      },
      "attributes": {
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeSimplifiedArtistObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeSimplifiedArtistObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model SimplifiedArtistObject {\n         [[ Known external URLs for this artist.\n         ]]\n         external_urls : AnonymousTypeSimplifiedArtistObjectExternal_urls\n         [[ A link to the Web API endpoint providing full details of the artist.\n         ]]\n         href : String\n         [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the artist.\n         ]]\n         id : String\n         [[ The name of the artist.\n         ]]\n         name : String\n         [[ The object type.\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the artist.\n         ]]\n         uri : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "3eb39b",
        "fullHash": "0880104ac3ed7c17d44e490f6f808388b8291806bcd5dc6e5be7b4c9b0bf9b15"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SimplifiedArtistObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SimplifiedArtistObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SimplifiedArtistObject",
        "parameters": [],
        "name": "SimplifiedArtistObject",
        "parameterizedName": "com.spotify.SimplifiedArtistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedArtistObject",
        "shortDisplayName": "SimplifiedArtistObject"
      },
      "fullyQualifiedName": "com.spotify.SimplifiedArtistObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedArtistObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeSimplifiedArtistObjectExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Known external URLs for this artist.\n      ]]\n      type AnonymousTypeSimplifiedArtistObjectExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "9c3025",
        "fullHash": "55079c8f673d09672e83401e150bce34e24617e8115ea3010b3a2a7e6bbaa1f7"
      }],
      "typeParameters": [],
      "typeDoc": "Known external URLs for this artist.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedArtistObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeSimplifiedArtistObjectExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedArtistObjectExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlayHistoryObject",
        "parameters": [],
        "name": "PlayHistoryObject",
        "parameterizedName": "com.spotify.PlayHistoryObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlayHistoryObject",
        "shortDisplayName": "PlayHistoryObject"
      },
      "attributes": {
        "track": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
            "parameters": [],
            "name": "AnonymousTypePlayHistoryObjectTrack",
            "parameterizedName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
            "shortDisplayName": "AnonymousTypePlayHistoryObjectTrack"
          },
          "modifiers": [],
          "typeDoc": "The track the user listened to.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "played_at": {
          "type": {
            "fullyQualifiedName": "lang.taxi.DateTime",
            "parameters": [],
            "name": "DateTime",
            "parameterizedName": "lang.taxi.DateTime",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.DateTime",
            "shortDisplayName": "DateTime"
          },
          "modifiers": [],
          "typeDoc": "The date and time the track was played.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.DateTime",
          "metadata": [],
          "sourcedBy": null,
          "format": {
            "patterns": ["yyyy-MM-dd'T'HH:mm:ss.SSS"],
            "utcZoneOffsetInMinutes": null,
            "definesPattern": true,
            "isEmpty": false
          },
          "anonymousType": null
        },
        "context": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
            "parameters": [],
            "name": "AnonymousTypePlayHistoryObjectContext",
            "parameterizedName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
            "shortDisplayName": "AnonymousTypePlayHistoryObjectContext"
          },
          "modifiers": [],
          "typeDoc": "The context the track was played from.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PlayHistoryObject {\n         [[ The track the user listened to. ]]\n         track : AnonymousTypePlayHistoryObjectTrack\n         [[ The date and time the track was played. ]]\n         played_at : DateTime\n         [[ The context the track was played from. ]]\n         context : AnonymousTypePlayHistoryObjectContext\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "f3daa4",
        "fullHash": "21705818531080bb527d35e03eedc41fa5dcd60b598a306bf0db4e4bdd74e0c0"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PlayHistoryObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PlayHistoryObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlayHistoryObject",
        "parameters": [],
        "name": "PlayHistoryObject",
        "parameterizedName": "com.spotify.PlayHistoryObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlayHistoryObject",
        "shortDisplayName": "PlayHistoryObject"
      },
      "fullyQualifiedName": "com.spotify.PlayHistoryObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
        "parameters": [],
        "name": "AnonymousTypePlayHistoryObjectTrack",
        "parameterizedName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
        "shortDisplayName": "AnonymousTypePlayHistoryObjectTrack"
      },
      "attributes": {
        "album": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectAlbum",
            "parameters": [],
            "name": "AnonymousTypeTrackObjectAlbum",
            "parameterizedName": "com.spotify.AnonymousTypeTrackObjectAlbum",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTrackObjectAlbum",
            "shortDisplayName": "AnonymousTypeTrackObjectAlbum"
          },
          "modifiers": [],
          "typeDoc": "The album on which the track appears. The album object includes a link in `href` to full information about the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeTrackObjectAlbum",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "artists": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ArtistObject",
              "parameters": [],
              "name": "ArtistObject",
              "parameterizedName": "com.spotify.ArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ArtistObject",
              "shortDisplayName": "ArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ArtistObject[]",
            "shortDisplayName": "ArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": "The artists who performed the track. Each artist object includes a link in `href` to more detailed information about the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the track can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "disc_number": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The disc number (usually `1` unless the album consists of more than one disc).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The track length in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the track has explicit lyrics ( `true` = yes it does; `false` = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_ids": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
            "parameters": [],
            "name": "AnonymousTypeTrackObjectExternal_ids",
            "parameterizedName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
            "shortDisplayName": "AnonymousTypeTrackObjectExternal_ids"
          },
          "modifiers": [],
          "typeDoc": "Known external IDs for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeTrackObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeTrackObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playable": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking) is applied. If `true`, the track is playable in the given market. Otherwise `false`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "linked_from": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Any",
            "parameters": [],
            "name": "Any",
            "parameterizedName": "lang.taxi.Any",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any",
            "shortDisplayName": "Any"
          },
          "modifiers": [],
          "typeDoc": "Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking) is applied, and the requested track has been replaced with different track. The track in the `linked_from` object contains information about the originally requested track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Any",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
            "parameters": [],
            "name": "AnonymousTypeTrackObjectRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
            "shortDisplayName": "AnonymousTypeTrackObjectRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "popularity": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.<br/>The popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.<br/>Generally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past. Duplicate tracks (e.g. the same track from a single and an album) are rated independently. Artist and album popularity is derived mathematically from track popularity. _**Note**: the popularity value may lag actual popularity by a few days: the value is not updated in real time._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "preview_url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to a 30 second preview (MP3 format) of the track. Can be `null`",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "track_number": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of the track. If an album has several discs, the track number is the number on the specified disc.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type: \"track\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_local": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the track is from a local file.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.TrackObject",
        "parameters": [],
        "name": "TrackObject",
        "parameterizedName": "com.spotify.TrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TrackObject",
        "shortDisplayName": "TrackObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The track the user listened to. ]]\n      type AnonymousTypePlayHistoryObjectTrack inherits TrackObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "519334",
        "fullHash": "7a7168b86410cdaeaa49fa3ee4fafcc5f9196ab60e1d5c26ca08879f679ae967"
      }],
      "typeParameters": [],
      "typeDoc": "The track the user listened to.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
        "parameters": [],
        "name": "AnonymousTypePlayHistoryObjectTrack",
        "parameterizedName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
        "shortDisplayName": "AnonymousTypePlayHistoryObjectTrack"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePlayHistoryObjectTrack",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.TrackObject",
        "parameters": [],
        "name": "TrackObject",
        "parameterizedName": "com.spotify.TrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TrackObject",
        "shortDisplayName": "TrackObject"
      },
      "attributes": {
        "album": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectAlbum",
            "parameters": [],
            "name": "AnonymousTypeTrackObjectAlbum",
            "parameterizedName": "com.spotify.AnonymousTypeTrackObjectAlbum",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTrackObjectAlbum",
            "shortDisplayName": "AnonymousTypeTrackObjectAlbum"
          },
          "modifiers": [],
          "typeDoc": "The album on which the track appears. The album object includes a link in `href` to full information about the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeTrackObjectAlbum",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "artists": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ArtistObject",
              "parameters": [],
              "name": "ArtistObject",
              "parameterizedName": "com.spotify.ArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ArtistObject",
              "shortDisplayName": "ArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ArtistObject[]",
            "shortDisplayName": "ArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": "The artists who performed the track. Each artist object includes a link in `href` to more detailed information about the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the track can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "disc_number": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The disc number (usually `1` unless the album consists of more than one disc).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The track length in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the track has explicit lyrics ( `true` = yes it does; `false` = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_ids": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
            "parameters": [],
            "name": "AnonymousTypeTrackObjectExternal_ids",
            "parameterizedName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
            "shortDisplayName": "AnonymousTypeTrackObjectExternal_ids"
          },
          "modifiers": [],
          "typeDoc": "Known external IDs for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeTrackObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeTrackObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playable": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking) is applied. If `true`, the track is playable in the given market. Otherwise `false`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "linked_from": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Any",
            "parameters": [],
            "name": "Any",
            "parameterizedName": "lang.taxi.Any",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any",
            "shortDisplayName": "Any"
          },
          "modifiers": [],
          "typeDoc": "Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking) is applied, and the requested track has been replaced with different track. The track in the `linked_from` object contains information about the originally requested track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Any",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
            "parameters": [],
            "name": "AnonymousTypeTrackObjectRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
            "shortDisplayName": "AnonymousTypeTrackObjectRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "popularity": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.<br/>The popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.<br/>Generally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past. Duplicate tracks (e.g. the same track from a single and an album) are rated independently. Artist and album popularity is derived mathematically from track popularity. _**Note**: the popularity value may lag actual popularity by a few days: the value is not updated in real time._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "preview_url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to a 30 second preview (MP3 format) of the track. Can be `null`",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "track_number": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of the track. If an album has several discs, the track number is the number on the specified disc.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type: \"track\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_local": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the track is from a local file.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model TrackObject {\n         [[ The album on which the track appears. The album object includes a link in `href` to full information about the album.\n         ]]\n         album : AnonymousTypeTrackObjectAlbum\n         [[ The artists who performed the track. Each artist object includes a link in `href` to more detailed information about the artist.\n         ]]\n         artists : ArtistObject[]\n         [[ A list of the countries in which the track can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.\n         ]]\n         available_markets : String[]\n         [[ The disc number (usually `1` unless the album consists of more than one disc).\n         ]]\n         disc_number : Int\n         [[ The track length in milliseconds.\n         ]]\n         duration_ms : Int\n         [[ Whether or not the track has explicit lyrics ( `true` = yes it does; `false` = no it does not OR unknown).\n         ]]\n         explicit : Boolean\n         [[ Known external IDs for the track.\n         ]]\n         external_ids : AnonymousTypeTrackObjectExternal_ids\n         [[ Known external URLs for this track.\n         ]]\n         external_urls : AnonymousTypeTrackObjectExternal_urls\n         [[ A link to the Web API endpoint providing full details of the track.\n         ]]\n         href : String\n         [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track.\n         ]]\n         id : String\n         [[ Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking) is applied. If `true`, the track is playable in the given market. Otherwise `false`.\n         ]]\n         is_playable : Boolean\n         [[ Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking) is applied, and the requested track has been replaced with different track. The track in the `linked_from` object contains information about the originally requested track.\n         ]]\n         linked_from : Any\n         [[ Included in the response when a content restriction is applied.\n         ]]\n         restrictions : AnonymousTypeTrackObjectRestrictions\n         [[ The name of the track.\n         ]]\n         name : String\n         [[ The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.<br/>The popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.<br/>Generally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past. Duplicate tracks (e.g. the same track from a single and an album) are rated independently. Artist and album popularity is derived mathematically from track popularity. _**Note**: the popularity value may lag actual popularity by a few days: the value is not updated in real time._\n         ]]\n         popularity : Int\n         [[ A link to a 30 second preview (MP3 format) of the track. Can be `null`\n         ]]\n         preview_url : String\n         [[ The number of the track. If an album has several discs, the track number is the number on the specified disc.\n         ]]\n         track_number : Int\n         [[ The object type: \"track\".\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track.\n         ]]\n         uri : String\n         [[ Whether or not the track is from a local file.\n         ]]\n         is_local : Boolean\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "f4a4ef",
        "fullHash": "8f930c233792786496afba26fc33b131161ae0b8f7b6fd7bce1a2dca681e9f3f"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.TrackObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.TrackObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.TrackObject",
        "parameters": [],
        "name": "TrackObject",
        "parameterizedName": "com.spotify.TrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TrackObject",
        "shortDisplayName": "TrackObject"
      },
      "fullyQualifiedName": "com.spotify.TrackObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectAlbum",
        "parameters": [],
        "name": "AnonymousTypeTrackObjectAlbum",
        "parameterizedName": "com.spotify.AnonymousTypeTrackObjectAlbum",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeTrackObjectAlbum",
        "shortDisplayName": "AnonymousTypeTrackObjectAlbum"
      },
      "attributes": {
        "album_group": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The field is present when getting an artist's albums. Compare to album_type this field represents relationship between the artist and the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "artists": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedArtistObject",
              "parameters": [],
              "name": "SimplifiedArtistObject",
              "parameterizedName": "com.spotify.SimplifiedArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedArtistObject",
              "shortDisplayName": "SimplifiedArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedArtistObject[]",
            "shortDisplayName": "SimplifiedArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": "The artists of the album. Each artist object includes a link in `href` to more detailed information about the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "album_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The type of the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total_tracks": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of tracks in the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "The markets in which the album is available: [ISO 3166-1 alpha-2 country codes](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). _**NOTE**: an album is considered available in a market when at least 1 of its tracks is available in that market._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeAlbumBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the album in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the album. In case of an album takedown, the value may be an empty string.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The date the album was first released.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date_precision": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The precision with which `release_date` value is known.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "shortDisplayName": "AnonymousTypeAlbumBaseRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "copyrights": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.CopyrightObject",
              "parameters": [],
              "name": "CopyrightObject",
              "parameterizedName": "com.spotify.CopyrightObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.CopyrightObject",
              "shortDisplayName": "CopyrightObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.CopyrightObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.CopyrightObject[]",
            "shortDisplayName": "CopyrightObject[]"
          },
          "modifiers": [],
          "typeDoc": "The copyright statements of the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.CopyrightObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_ids": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseExternal_ids",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "shortDisplayName": "AnonymousTypeAlbumBaseExternal_ids"
          },
          "modifiers": [],
          "typeDoc": "Known external IDs for the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "genres": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the genres the album is associated with. If not yet classified, the array is empty.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "label": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The label associated with the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "popularity": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The popularity of the album. The value will be between 0 and 100, with 100 being the most popular.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.SimplifiedAlbumObject",
        "parameters": [],
        "name": "SimplifiedAlbumObject",
        "parameterizedName": "com.spotify.SimplifiedAlbumObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedAlbumObject",
        "shortDisplayName": "SimplifiedAlbumObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The album on which the track appears. The album object includes a link in `href` to full information about the album.\n      ]]\n      type AnonymousTypeTrackObjectAlbum inherits SimplifiedAlbumObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "136926",
        "fullHash": "829a4f3767b4a19bb329f019c41d19a13e77c7b76520bf231684f4cd99a2087b"
      }],
      "typeParameters": [],
      "typeDoc": "The album on which the track appears. The album object includes a link in `href` to full information about the album.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeTrackObjectAlbum",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeTrackObjectAlbum",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectAlbum",
        "parameters": [],
        "name": "AnonymousTypeTrackObjectAlbum",
        "parameterizedName": "com.spotify.AnonymousTypeTrackObjectAlbum",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeTrackObjectAlbum",
        "shortDisplayName": "AnonymousTypeTrackObjectAlbum"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectAlbum",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SimplifiedAlbumObject",
        "parameters": [],
        "name": "SimplifiedAlbumObject",
        "parameterizedName": "com.spotify.SimplifiedAlbumObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedAlbumObject",
        "shortDisplayName": "SimplifiedAlbumObject"
      },
      "attributes": {
        "album_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The type of the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total_tracks": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of tracks in the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "The markets in which the album is available: [ISO 3166-1 alpha-2 country codes](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). _**NOTE**: an album is considered available in a market when at least 1 of its tracks is available in that market._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeAlbumBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the album in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the album. In case of an album takedown, the value may be an empty string.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The date the album was first released.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date_precision": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The precision with which `release_date` value is known.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "shortDisplayName": "AnonymousTypeAlbumBaseRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "copyrights": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.CopyrightObject",
              "parameters": [],
              "name": "CopyrightObject",
              "parameterizedName": "com.spotify.CopyrightObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.CopyrightObject",
              "shortDisplayName": "CopyrightObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.CopyrightObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.CopyrightObject[]",
            "shortDisplayName": "CopyrightObject[]"
          },
          "modifiers": [],
          "typeDoc": "The copyright statements of the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.CopyrightObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_ids": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseExternal_ids",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "shortDisplayName": "AnonymousTypeAlbumBaseExternal_ids"
          },
          "modifiers": [],
          "typeDoc": "Known external IDs for the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "genres": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the genres the album is associated with. If not yet classified, the array is empty.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "label": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The label associated with the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "popularity": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The popularity of the album. The value will be between 0 and 100, with 100 being the most popular.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "album_group": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The field is present when getting an artist's albums. Compare to album_type this field represents relationship between the artist and the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "artists": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedArtistObject",
              "parameters": [],
              "name": "SimplifiedArtistObject",
              "parameterizedName": "com.spotify.SimplifiedArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedArtistObject",
              "shortDisplayName": "SimplifiedArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedArtistObject[]",
            "shortDisplayName": "SimplifiedArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": "The artists of the album. Each artist object includes a link in `href` to more detailed information about the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.AlbumBase",
        "parameters": [],
        "name": "AlbumBase",
        "parameterizedName": "com.spotify.AlbumBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumBase",
        "shortDisplayName": "AlbumBase"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model SimplifiedAlbumObject inherits AlbumBase {\n         [[ The field is present when getting an artist's albums. Compare to album_type this field represents relationship between the artist and the album.\n         ]]\n         album_group : String?\n         [[ The artists of the album. Each artist object includes a link in `href` to more detailed information about the artist.\n         ]]\n         artists : SimplifiedArtistObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "baeb0a",
        "fullHash": "62d450dc859edbe2f57d886e22bcdc8b900ff6b2092931fb1dcd9c830e3d2132"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SimplifiedAlbumObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SimplifiedAlbumObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SimplifiedAlbumObject",
        "parameters": [],
        "name": "SimplifiedAlbumObject",
        "parameterizedName": "com.spotify.SimplifiedAlbumObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedAlbumObject",
        "shortDisplayName": "SimplifiedAlbumObject"
      },
      "fullyQualifiedName": "com.spotify.SimplifiedAlbumObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AlbumBase",
        "parameters": [],
        "name": "AlbumBase",
        "parameterizedName": "com.spotify.AlbumBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumBase",
        "shortDisplayName": "AlbumBase"
      },
      "attributes": {
        "album_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The type of the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total_tracks": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of tracks in the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "The markets in which the album is available: [ISO 3166-1 alpha-2 country codes](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). _**NOTE**: an album is considered available in a market when at least 1 of its tracks is available in that market._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeAlbumBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the album in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the album. In case of an album takedown, the value may be an empty string.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The date the album was first released.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date_precision": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The precision with which `release_date` value is known.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "shortDisplayName": "AnonymousTypeAlbumBaseRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "copyrights": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.CopyrightObject",
              "parameters": [],
              "name": "CopyrightObject",
              "parameterizedName": "com.spotify.CopyrightObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.CopyrightObject",
              "shortDisplayName": "CopyrightObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.CopyrightObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.CopyrightObject[]",
            "shortDisplayName": "CopyrightObject[]"
          },
          "modifiers": [],
          "typeDoc": "The copyright statements of the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.CopyrightObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_ids": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseExternal_ids",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "shortDisplayName": "AnonymousTypeAlbumBaseExternal_ids"
          },
          "modifiers": [],
          "typeDoc": "Known external IDs for the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "genres": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the genres the album is associated with. If not yet classified, the array is empty.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "label": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The label associated with the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "popularity": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The popularity of the album. The value will be between 0 and 100, with 100 being the most popular.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AlbumBase {\n         [[ The type of the album.\n         ]]\n         album_type : String\n         [[ The number of tracks in the album. ]]\n         total_tracks : Int\n         [[ The markets in which the album is available: [ISO 3166-1 alpha-2 country codes](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). _**NOTE**: an album is considered available in a market when at least 1 of its tracks is available in that market._\n         ]]\n         available_markets : String[]\n         [[ Known external URLs for this album.\n         ]]\n         external_urls : AnonymousTypeAlbumBaseExternal_urls\n         [[ A link to the Web API endpoint providing full details of the album.\n         ]]\n         href : String\n         [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the album.\n         ]]\n         id : String\n         [[ The cover art for the album in various sizes, widest first.\n         ]]\n         images : ImageObject[]\n         [[ The name of the album. In case of an album takedown, the value may be an empty string.\n         ]]\n         name : String\n         [[ The date the album was first released.\n         ]]\n         release_date : String\n         [[ The precision with which `release_date` value is known.\n         ]]\n         release_date_precision : String\n         [[ Included in the response when a content restriction is applied.\n         ]]\n         restrictions : AnonymousTypeAlbumBaseRestrictions?\n         [[ The object type.\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the album.\n         ]]\n         uri : String\n         [[ The copyright statements of the album.\n         ]]\n         copyrights : CopyrightObject[]?\n         [[ Known external IDs for the album.\n         ]]\n         external_ids : AnonymousTypeAlbumBaseExternal_ids?\n         [[ A list of the genres the album is associated with. If not yet classified, the array is empty.\n         ]]\n         genres : String[]?\n         [[ The label associated with the album.\n         ]]\n         label : String?\n         [[ The popularity of the album. The value will be between 0 and 100, with 100 being the most popular.\n         ]]\n         popularity : Int?\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "f08073",
        "fullHash": "df7633de503e27913c97d53b31c5bf309f39cc3317adc14b9c75caa18f035ab0"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AlbumBase",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AlbumBase",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AlbumBase",
        "parameters": [],
        "name": "AlbumBase",
        "parameterizedName": "com.spotify.AlbumBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumBase",
        "shortDisplayName": "AlbumBase"
      },
      "fullyQualifiedName": "com.spotify.AlbumBase",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeAlbumBaseExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
        "shortDisplayName": "AnonymousTypeAlbumBaseExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Known external URLs for this album.\n      ]]\n      type AnonymousTypeAlbumBaseExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d7f1ea",
        "fullHash": "f0861da0b1a883fedb25245aab73716b0ed814c7446c9d0203a93e07de449e91"
      }],
      "typeParameters": [],
      "typeDoc": "Known external URLs for this album.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeAlbumBaseExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
        "shortDisplayName": "AnonymousTypeAlbumBaseExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
        "parameters": [],
        "name": "AnonymousTypeAlbumBaseRestrictions",
        "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
        "shortDisplayName": "AnonymousTypeAlbumBaseRestrictions"
      },
      "attributes": {
        "reason": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The reason for the restriction. Albums may be restricted if the content is not available in a given market, to the user's subscription type, or when the user's account is set to not play explicit content.\n     Additional reasons may be added in the future.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.AlbumRestrictionObject",
        "parameters": [],
        "name": "AlbumRestrictionObject",
        "parameterizedName": "com.spotify.AlbumRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumRestrictionObject",
        "shortDisplayName": "AlbumRestrictionObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Included in the response when a content restriction is applied.\n      ]]\n      type AnonymousTypeAlbumBaseRestrictions inherits AlbumRestrictionObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "8e9196",
        "fullHash": "a8215d3c694081ac745eb010bf4d127fc9668656feb6dcc266f993b5cd2fdb8c"
      }],
      "typeParameters": [],
      "typeDoc": "Included in the response when a content restriction is applied.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
        "parameters": [],
        "name": "AnonymousTypeAlbumBaseRestrictions",
        "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
        "shortDisplayName": "AnonymousTypeAlbumBaseRestrictions"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.CopyrightObject",
        "parameters": [],
        "name": "CopyrightObject",
        "parameterizedName": "com.spotify.CopyrightObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CopyrightObject",
        "shortDisplayName": "CopyrightObject"
      },
      "attributes": {
        "text": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The copyright text for this content.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The type of copyright: `C` = the copyright, `P` = the sound recording (performance) copyright.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model CopyrightObject {\n         [[ The copyright text for this content.\n         ]]\n         text : String\n         [[ The type of copyright: `C` = the copyright, `P` = the sound recording (performance) copyright.\n         ]]\n         `type` : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "8567d8",
        "fullHash": "3d12c6664b64c9eb5b43362f9a0b384fec6640f6b629f19e3aff67a8c6f99476"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.CopyrightObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.CopyrightObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.CopyrightObject",
        "parameters": [],
        "name": "CopyrightObject",
        "parameterizedName": "com.spotify.CopyrightObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CopyrightObject",
        "shortDisplayName": "CopyrightObject"
      },
      "fullyQualifiedName": "com.spotify.CopyrightObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
        "parameters": [],
        "name": "AnonymousTypeAlbumBaseExternal_ids",
        "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
        "shortDisplayName": "AnonymousTypeAlbumBaseExternal_ids"
      },
      "attributes": {
        "isrc": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "[International Standard Recording Code](http://en.wikipedia.org/wiki/International_Standard_Recording_Code)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "ean": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "[International Article Number](http://en.wikipedia.org/wiki/International_Article_Number_%28EAN%29)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "upc": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "[Universal Product Code](http://en.wikipedia.org/wiki/Universal_Product_Code)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalIdObject",
        "parameters": [],
        "name": "ExternalIdObject",
        "parameterizedName": "com.spotify.ExternalIdObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalIdObject",
        "shortDisplayName": "ExternalIdObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Known external IDs for the album.\n      ]]\n      type AnonymousTypeAlbumBaseExternal_ids inherits ExternalIdObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "c7b631",
        "fullHash": "dfc69c9e71d4bffcda996d6b225d70187ef880d2578599041cba3bffa8d75912"
      }],
      "typeParameters": [],
      "typeDoc": "Known external IDs for the album.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
        "parameters": [],
        "name": "AnonymousTypeAlbumBaseExternal_ids",
        "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
        "shortDisplayName": "AnonymousTypeAlbumBaseExternal_ids"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ExternalIdObject",
        "parameters": [],
        "name": "ExternalIdObject",
        "parameterizedName": "com.spotify.ExternalIdObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalIdObject",
        "shortDisplayName": "ExternalIdObject"
      },
      "attributes": {
        "isrc": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "[International Standard Recording Code](http://en.wikipedia.org/wiki/International_Standard_Recording_Code)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "ean": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "[International Article Number](http://en.wikipedia.org/wiki/International_Article_Number_%28EAN%29)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "upc": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "[Universal Product Code](http://en.wikipedia.org/wiki/Universal_Product_Code)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ExternalIdObject {\n         [[ [International Standard Recording Code](http://en.wikipedia.org/wiki/International_Standard_Recording_Code)\n         ]]\n         isrc : String\n         [[ [International Article Number](http://en.wikipedia.org/wiki/International_Article_Number_%28EAN%29)\n         ]]\n         ean : String\n         [[ [Universal Product Code](http://en.wikipedia.org/wiki/Universal_Product_Code)\n         ]]\n         upc : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "066490",
        "fullHash": "5982f69a2f1dbc4a7185e8db6b0cde037fabb9775c7affdbdaedbcb4fdace01c"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ExternalIdObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ExternalIdObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ExternalIdObject",
        "parameters": [],
        "name": "ExternalIdObject",
        "parameterizedName": "com.spotify.ExternalIdObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalIdObject",
        "shortDisplayName": "ExternalIdObject"
      },
      "fullyQualifiedName": "com.spotify.ExternalIdObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
        "parameters": [],
        "name": "AnonymousTypeTrackObjectExternal_ids",
        "parameterizedName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
        "shortDisplayName": "AnonymousTypeTrackObjectExternal_ids"
      },
      "attributes": {
        "isrc": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "[International Standard Recording Code](http://en.wikipedia.org/wiki/International_Standard_Recording_Code)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "ean": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "[International Article Number](http://en.wikipedia.org/wiki/International_Article_Number_%28EAN%29)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "upc": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "[Universal Product Code](http://en.wikipedia.org/wiki/Universal_Product_Code)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalIdObject",
        "parameters": [],
        "name": "ExternalIdObject",
        "parameterizedName": "com.spotify.ExternalIdObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalIdObject",
        "shortDisplayName": "ExternalIdObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Known external IDs for the track.\n      ]]\n      type AnonymousTypeTrackObjectExternal_ids inherits ExternalIdObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "a14d7e",
        "fullHash": "63446a1d5ae3efa1ad8c6ef9dcb1a3ffd230acc0288f93e71932b9c060d2fa00"
      }],
      "typeParameters": [],
      "typeDoc": "Known external IDs for the track.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
        "parameters": [],
        "name": "AnonymousTypeTrackObjectExternal_ids",
        "parameterizedName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
        "shortDisplayName": "AnonymousTypeTrackObjectExternal_ids"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeTrackObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeTrackObjectExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Known external URLs for this track.\n      ]]\n      type AnonymousTypeTrackObjectExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "7d7f38",
        "fullHash": "3a6131cf532afbfefa678952c2899642393b12ed1391e1738dcf63540011c5ce"
      }],
      "typeParameters": [],
      "typeDoc": "Known external URLs for this track.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeTrackObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeTrackObjectExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
        "parameters": [],
        "name": "AnonymousTypeTrackObjectRestrictions",
        "parameterizedName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
        "shortDisplayName": "AnonymousTypeTrackObjectRestrictions"
      },
      "attributes": {
        "reason": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The reason for the restriction. Supported values:\n     - `market` - The content item is not available in the given market.\n     - `product` - The content item is not available for the user's subscription type.\n     - `explicit` - The content item is explicit and the user's account is set to not play explicit content.\n     Additional reasons may be added in the future.\n     **Note**: If you use this field, make sure that your application safely handles unknown values.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.TrackRestrictionObject",
        "parameters": [],
        "name": "TrackRestrictionObject",
        "parameterizedName": "com.spotify.TrackRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TrackRestrictionObject",
        "shortDisplayName": "TrackRestrictionObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Included in the response when a content restriction is applied.\n      ]]\n      type AnonymousTypeTrackObjectRestrictions inherits TrackRestrictionObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "964992",
        "fullHash": "310aebbf592ad53edae4791320eea085e755553c3bcb6d65a2e78a29d9331613"
      }],
      "typeParameters": [],
      "typeDoc": "Included in the response when a content restriction is applied.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
        "parameters": [],
        "name": "AnonymousTypeTrackObjectRestrictions",
        "parameterizedName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
        "shortDisplayName": "AnonymousTypeTrackObjectRestrictions"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
        "parameters": [],
        "name": "AnonymousTypePlayHistoryObjectContext",
        "parameterizedName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
        "shortDisplayName": "AnonymousTypePlayHistoryObjectContext"
      },
      "attributes": {
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type, e.g. \"artist\", \"playlist\", \"album\", \"show\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeContextObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeContextObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this context.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the context.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ContextObject",
        "parameters": [],
        "name": "ContextObject",
        "parameterizedName": "com.spotify.ContextObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ContextObject",
        "shortDisplayName": "ContextObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The context the track was played from. ]]\n      type AnonymousTypePlayHistoryObjectContext inherits ContextObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "27a2a8",
        "fullHash": "cc38b8303931e033b0732342344401f8a1518bd391484dbdc336d3c4c9827785"
      }],
      "typeParameters": [],
      "typeDoc": "The context the track was played from.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
        "parameters": [],
        "name": "AnonymousTypePlayHistoryObjectContext",
        "parameterizedName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
        "shortDisplayName": "AnonymousTypePlayHistoryObjectContext"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePlayHistoryObjectContext",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ContextObject",
        "parameters": [],
        "name": "ContextObject",
        "parameterizedName": "com.spotify.ContextObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ContextObject",
        "shortDisplayName": "ContextObject"
      },
      "attributes": {
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type, e.g. \"artist\", \"playlist\", \"album\", \"show\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeContextObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeContextObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this context.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the context.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ContextObject {\n         [[ The object type, e.g. \"artist\", \"playlist\", \"album\", \"show\".\n         ]]\n         `type` : String\n         [[ A link to the Web API endpoint providing full details of the track. ]]\n         href : String\n         [[ External URLs for this context. ]]\n         external_urls : AnonymousTypeContextObjectExternal_urls\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the context.\n         ]]\n         uri : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "f463b0",
        "fullHash": "f4f04592e756ca5991e60bd11e575b5ff9fcef3fc02b97ada65d50f47f113e9c"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ContextObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ContextObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ContextObject",
        "parameters": [],
        "name": "ContextObject",
        "parameterizedName": "com.spotify.ContextObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ContextObject",
        "shortDisplayName": "ContextObject"
      },
      "fullyQualifiedName": "com.spotify.ContextObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeContextObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeContextObjectExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ External URLs for this context. ]]\n      type AnonymousTypeContextObjectExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "f780c6",
        "fullHash": "ecd6d8a9dfad5cc5765d9e1552468e6d6df6933bc3f4650a734a64b5bc94d209"
      }],
      "typeParameters": [],
      "typeDoc": "External URLs for this context.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeContextObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeContextObjectExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlaylistTrackObject",
        "parameters": [],
        "name": "PlaylistTrackObject",
        "parameterizedName": "com.spotify.PlaylistTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistTrackObject",
        "shortDisplayName": "PlaylistTrackObject"
      },
      "attributes": {
        "added_at": {
          "type": {
            "fullyQualifiedName": "lang.taxi.DateTime",
            "parameters": [],
            "name": "DateTime",
            "parameterizedName": "lang.taxi.DateTime",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.DateTime",
            "shortDisplayName": "DateTime"
          },
          "modifiers": [],
          "typeDoc": "The date and time the track or episode was added. _**Note**: some very old playlists may return `null` in this field._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.DateTime",
          "metadata": [],
          "sourcedBy": null,
          "format": {
            "patterns": ["yyyy-MM-dd'T'HH:mm:ss.SSS"],
            "utcZoneOffsetInMinutes": null,
            "definesPattern": true,
            "isEmpty": false
          },
          "anonymousType": null
        },
        "added_by": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
            "parameters": [],
            "name": "AnonymousTypePlaylistTrackObjectAdded_by",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
            "shortDisplayName": "AnonymousTypePlaylistTrackObjectAdded_by"
          },
          "modifiers": [],
          "typeDoc": "The Spotify user who added the track or episode. _**Note**: some very old playlists may return `null` in this field._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_local": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether this track or episode is a [local file](/documentation/web-api/concepts/playlists/#local-files) or not.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "track": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Any",
            "parameters": [],
            "name": "Any",
            "parameterizedName": "lang.taxi.Any",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any",
            "shortDisplayName": "Any"
          },
          "modifiers": [],
          "typeDoc": "Information about the track or episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Any",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PlaylistTrackObject {\n         [[ The date and time the track or episode was added. _**Note**: some very old playlists may return `null` in this field._\n         ]]\n         added_at : DateTime\n         [[ The Spotify user who added the track or episode. _**Note**: some very old playlists may return `null` in this field._\n         ]]\n         added_by : AnonymousTypePlaylistTrackObjectAdded_by\n         [[ Whether this track or episode is a [local file](/documentation/web-api/concepts/playlists/#local-files) or not.\n         ]]\n         is_local : Boolean\n         [[ Information about the track or episode. ]]\n         track : Any\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "0e8fce",
        "fullHash": "8542920b3cc3185e961e17c862c6fa4ddaad895f3a716f64e1687e8e91345261"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PlaylistTrackObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PlaylistTrackObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlaylistTrackObject",
        "parameters": [],
        "name": "PlaylistTrackObject",
        "parameterizedName": "com.spotify.PlaylistTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistTrackObject",
        "shortDisplayName": "PlaylistTrackObject"
      },
      "fullyQualifiedName": "com.spotify.PlaylistTrackObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
        "parameters": [],
        "name": "AnonymousTypePlaylistTrackObjectAdded_by",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
        "shortDisplayName": "AnonymousTypePlaylistTrackObjectAdded_by"
      },
      "attributes": {
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypePlaylistUserObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "shortDisplayName": "AnonymousTypePlaylistUserObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known public external URLs for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "followers": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "parameters": [],
            "name": "AnonymousTypePlaylistUserObjectFollowers",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "shortDisplayName": "AnonymousTypePlaylistUserObjectFollowers"
          },
          "modifiers": [],
          "typeDoc": "Information about the followers of this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PlaylistUserObject",
        "parameters": [],
        "name": "PlaylistUserObject",
        "parameterizedName": "com.spotify.PlaylistUserObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistUserObject",
        "shortDisplayName": "PlaylistUserObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The Spotify user who added the track or episode. _**Note**: some very old playlists may return `null` in this field._\n      ]]\n      type AnonymousTypePlaylistTrackObjectAdded_by inherits PlaylistUserObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "40fc4b",
        "fullHash": "9ac622069e0a98b31d5b9b253086ea6a37bfe00228bca86a9595237b7e323c51"
      }],
      "typeParameters": [],
      "typeDoc": "The Spotify user who added the track or episode. _**Note**: some very old playlists may return `null` in this field._",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
        "parameters": [],
        "name": "AnonymousTypePlaylistTrackObjectAdded_by",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
        "shortDisplayName": "AnonymousTypePlaylistTrackObjectAdded_by"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistTrackObjectAdded_by",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlaylistUserObject",
        "parameters": [],
        "name": "PlaylistUserObject",
        "parameterizedName": "com.spotify.PlaylistUserObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistUserObject",
        "shortDisplayName": "PlaylistUserObject"
      },
      "attributes": {
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypePlaylistUserObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "shortDisplayName": "AnonymousTypePlaylistUserObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known public external URLs for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "followers": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "parameters": [],
            "name": "AnonymousTypePlaylistUserObjectFollowers",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "shortDisplayName": "AnonymousTypePlaylistUserObjectFollowers"
          },
          "modifiers": [],
          "typeDoc": "Information about the followers of this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PlaylistUserObject {\n         [[ Known public external URLs for this user.\n         ]]\n         external_urls : AnonymousTypePlaylistUserObjectExternal_urls\n         [[ Information about the followers of this user.\n         ]]\n         followers : AnonymousTypePlaylistUserObjectFollowers\n         [[ A link to the Web API endpoint for this user.\n         ]]\n         href : String\n         [[ The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for this user.\n         ]]\n         id : String\n         [[ The object type.\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for this user.\n         ]]\n         uri : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "7a5052",
        "fullHash": "d8d82875fc6b4eb70ec02c110cf5f023751177d9e6e01b1fa7581408f4097f1b"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PlaylistUserObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PlaylistUserObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlaylistUserObject",
        "parameters": [],
        "name": "PlaylistUserObject",
        "parameterizedName": "com.spotify.PlaylistUserObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistUserObject",
        "shortDisplayName": "PlaylistUserObject"
      },
      "fullyQualifiedName": "com.spotify.PlaylistUserObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypePlaylistUserObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
        "shortDisplayName": "AnonymousTypePlaylistUserObjectExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Known public external URLs for this user.\n      ]]\n      type AnonymousTypePlaylistUserObjectExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "dbffc8",
        "fullHash": "be7d267cbb5388a056cc5340b4c94322a3595eae33d07f0a503bc54c4eec9244"
      }],
      "typeParameters": [],
      "typeDoc": "Known public external URLs for this user.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypePlaylistUserObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
        "shortDisplayName": "AnonymousTypePlaylistUserObjectExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
        "parameters": [],
        "name": "AnonymousTypePlaylistUserObjectFollowers",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
        "shortDisplayName": "AnonymousTypePlaylistUserObjectFollowers"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "This will always be set to null, as the Web API does not support it at the moment.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of followers.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.FollowersObject",
        "parameters": [],
        "name": "FollowersObject",
        "parameterizedName": "com.spotify.FollowersObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.FollowersObject",
        "shortDisplayName": "FollowersObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Information about the followers of this user.\n      ]]\n      type AnonymousTypePlaylistUserObjectFollowers inherits FollowersObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "4c279e",
        "fullHash": "941332ae3493945ca202e8797052bc0e30012b5cf40e79b83d150f54401e9e47"
      }],
      "typeParameters": [],
      "typeDoc": "Information about the followers of this user.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
        "parameters": [],
        "name": "AnonymousTypePlaylistUserObjectFollowers",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
        "shortDisplayName": "AnonymousTypePlaylistUserObjectFollowers"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.CurrentlyPlayingObject",
        "parameters": [],
        "name": "CurrentlyPlayingObject",
        "parameterizedName": "com.spotify.CurrentlyPlayingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CurrentlyPlayingObject",
        "shortDisplayName": "CurrentlyPlayingObject"
      },
      "attributes": {
        "context": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
            "parameters": [],
            "name": "AnonymousTypeCurrentlyPlayingObjectContext",
            "parameterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
            "shortDisplayName": "AnonymousTypeCurrentlyPlayingObjectContext"
          },
          "modifiers": [],
          "typeDoc": "A Context Object. Can be `null`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "timestamp": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "Unix Millisecond Timestamp when data was fetched",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "progress_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "Progress into the currently playing track or episode. Can be `null`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playing": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "If something is currently playing, return `true`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "item": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Any",
            "parameters": [],
            "name": "Any",
            "parameterizedName": "lang.taxi.Any",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any",
            "shortDisplayName": "Any"
          },
          "modifiers": [],
          "typeDoc": "The currently playing track or episode. Can be `null`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Any",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "currently_playing_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type of the currently playing item. Can be one of `track`, `episode`, `ad` or `unknown`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model CurrentlyPlayingObject {\n         [[ A Context Object. Can be `null`. ]]\n         context : AnonymousTypeCurrentlyPlayingObjectContext\n         [[ Unix Millisecond Timestamp when data was fetched ]]\n         timestamp : Int\n         [[ Progress into the currently playing track or episode. Can be `null`. ]]\n         progress_ms : Int\n         [[ If something is currently playing, return `true`. ]]\n         is_playing : Boolean\n         [[ The currently playing track or episode. Can be `null`. ]]\n         item : Any\n         [[ The object type of the currently playing item. Can be one of `track`, `episode`, `ad` or `unknown`.\n         ]]\n         currently_playing_type : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "05a2d6",
        "fullHash": "76ed0e1db9fde459e9278d59cfe9ca0a92beee98d84d7258ba34da60fbc07e46"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.CurrentlyPlayingObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.CurrentlyPlayingObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.CurrentlyPlayingObject",
        "parameters": [],
        "name": "CurrentlyPlayingObject",
        "parameterizedName": "com.spotify.CurrentlyPlayingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CurrentlyPlayingObject",
        "shortDisplayName": "CurrentlyPlayingObject"
      },
      "fullyQualifiedName": "com.spotify.CurrentlyPlayingObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
        "parameters": [],
        "name": "AnonymousTypeCurrentlyPlayingObjectContext",
        "parameterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
        "shortDisplayName": "AnonymousTypeCurrentlyPlayingObjectContext"
      },
      "attributes": {
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type, e.g. \"artist\", \"playlist\", \"album\", \"show\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeContextObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeContextObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this context.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the context.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ContextObject",
        "parameters": [],
        "name": "ContextObject",
        "parameterizedName": "com.spotify.ContextObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ContextObject",
        "shortDisplayName": "ContextObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ A Context Object. Can be `null`. ]]\n      type AnonymousTypeCurrentlyPlayingObjectContext inherits ContextObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "7a3183",
        "fullHash": "a1f39f4f0fe2f8683f7516bd9924046ce885e205e5db0e8b4fd2ab78ce54cb4e"
      }],
      "typeParameters": [],
      "typeDoc": "A Context Object. Can be `null`.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
        "parameters": [],
        "name": "AnonymousTypeCurrentlyPlayingObjectContext",
        "parameterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
        "shortDisplayName": "AnonymousTypeCurrentlyPlayingObjectContext"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingObjectContext",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.QueueObject",
        "parameters": [],
        "name": "QueueObject",
        "parameterizedName": "com.spotify.QueueObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.QueueObject",
        "shortDisplayName": "QueueObject"
      },
      "attributes": {
        "currently_playing": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Any",
            "parameters": [],
            "name": "Any",
            "parameterizedName": "lang.taxi.Any",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any",
            "shortDisplayName": "Any"
          },
          "modifiers": [],
          "typeDoc": "The currently playing track or episode. Can be `null`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Any",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "queue": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Any",
              "parameters": [],
              "name": "Any",
              "parameterizedName": "lang.taxi.Any",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Any",
              "shortDisplayName": "Any"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Any>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any[]",
            "shortDisplayName": "Any[]"
          },
          "modifiers": [],
          "typeDoc": "The tracks or episodes in the queue. Can be empty.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Any[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model QueueObject {\n         [[ The currently playing track or episode. Can be `null`. ]]\n         currently_playing : Any\n         [[ The tracks or episodes in the queue. Can be empty. ]]\n         queue : Any[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "c721eb",
        "fullHash": "424f558a71bae13e0955c43a8726058f5a50ca7a383557308315e71566843ea7"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.QueueObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.QueueObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.QueueObject",
        "parameters": [],
        "name": "QueueObject",
        "parameterizedName": "com.spotify.QueueObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.QueueObject",
        "shortDisplayName": "QueueObject"
      },
      "fullyQualifiedName": "com.spotify.QueueObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
        "parameters": [],
        "name": "CurrentlyPlayingContextObject",
        "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
        "shortDisplayName": "CurrentlyPlayingContextObject"
      },
      "attributes": {
        "device": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
            "parameters": [],
            "name": "AnonymousTypeCurrentlyPlayingContextObjectDevice",
            "parameterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
            "shortDisplayName": "AnonymousTypeCurrentlyPlayingContextObjectDevice"
          },
          "modifiers": [],
          "typeDoc": "The device that is currently active.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "repeat_state": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "off, track, context",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "shuffle_state": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "If shuffle is on or off.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "context": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
            "parameters": [],
            "name": "AnonymousTypeCurrentlyPlayingContextObjectContext",
            "parameterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
            "shortDisplayName": "AnonymousTypeCurrentlyPlayingContextObjectContext"
          },
          "modifiers": [],
          "typeDoc": "A Context Object. Can be `null`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "timestamp": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "Unix Millisecond Timestamp when data was fetched.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "progress_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "Progress into the currently playing track or episode. Can be `null`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playing": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "If something is currently playing, return `true`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "item": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Any",
            "parameters": [],
            "name": "Any",
            "parameterizedName": "lang.taxi.Any",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any",
            "shortDisplayName": "Any"
          },
          "modifiers": [],
          "typeDoc": "The currently playing track or episode. Can be `null`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Any",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "currently_playing_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type of the currently playing item. Can be one of `track`, `episode`, `ad` or `unknown`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "actions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
            "parameters": [],
            "name": "AnonymousTypeCurrentlyPlayingContextObjectActions",
            "parameterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
            "shortDisplayName": "AnonymousTypeCurrentlyPlayingContextObjectActions"
          },
          "modifiers": [],
          "typeDoc": "Allows to update the user interface based on which playback actions are available within the current context.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model CurrentlyPlayingContextObject {\n         [[ The device that is currently active.\n         ]]\n         device : AnonymousTypeCurrentlyPlayingContextObjectDevice\n         [[ off, track, context ]]\n         repeat_state : String\n         [[ If shuffle is on or off. ]]\n         shuffle_state : Boolean\n         [[ A Context Object. Can be `null`. ]]\n         context : AnonymousTypeCurrentlyPlayingContextObjectContext\n         [[ Unix Millisecond Timestamp when data was fetched. ]]\n         timestamp : Int\n         [[ Progress into the currently playing track or episode. Can be `null`. ]]\n         progress_ms : Int\n         [[ If something is currently playing, return `true`. ]]\n         is_playing : Boolean\n         [[ The currently playing track or episode. Can be `null`. ]]\n         item : Any\n         [[ The object type of the currently playing item. Can be one of `track`, `episode`, `ad` or `unknown`.\n         ]]\n         currently_playing_type : String\n         [[ Allows to update the user interface based on which playback actions are available within the current context.\n         ]]\n         actions : AnonymousTypeCurrentlyPlayingContextObjectActions\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "e0775b",
        "fullHash": "dc5c5871bfbc31373652e6e304a50bf1907a134c9b3011589de0632999c2f6a0"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.CurrentlyPlayingContextObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
        "parameters": [],
        "name": "CurrentlyPlayingContextObject",
        "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
        "shortDisplayName": "CurrentlyPlayingContextObject"
      },
      "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
        "parameters": [],
        "name": "AnonymousTypeCurrentlyPlayingContextObjectDevice",
        "parameterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
        "shortDisplayName": "AnonymousTypeCurrentlyPlayingContextObjectDevice"
      },
      "attributes": {
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The device ID.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_active": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "If this device is the currently active device.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_private_session": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "If this device is currently in a private session.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_restricted": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether controlling this device is restricted. At present if this is \"true\" then no Web API commands will be accepted by this device.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A human-readable name for the device. Some devices have a name that the user can configure (e.g. \\\"Loudest speaker\\\") and some devices have a generic name associated with the manufacturer or device model.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "Device type, such as \"computer\", \"smartphone\" or \"speaker\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "volume_percent": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The current volume in percent.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.DeviceObject",
        "parameters": [],
        "name": "DeviceObject",
        "parameterizedName": "com.spotify.DeviceObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.DeviceObject",
        "shortDisplayName": "DeviceObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The device that is currently active.\n      ]]\n      type AnonymousTypeCurrentlyPlayingContextObjectDevice inherits DeviceObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "776544",
        "fullHash": "7368da92e05af8b147f0722ecd1c7371f15c57cbbf5b39b77f8b69769897fcfd"
      }],
      "typeParameters": [],
      "typeDoc": "The device that is currently active.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
        "parameters": [],
        "name": "AnonymousTypeCurrentlyPlayingContextObjectDevice",
        "parameterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
        "shortDisplayName": "AnonymousTypeCurrentlyPlayingContextObjectDevice"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectDevice",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.DeviceObject",
        "parameters": [],
        "name": "DeviceObject",
        "parameterizedName": "com.spotify.DeviceObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.DeviceObject",
        "shortDisplayName": "DeviceObject"
      },
      "attributes": {
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The device ID.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_active": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "If this device is the currently active device.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_private_session": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "If this device is currently in a private session.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_restricted": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether controlling this device is restricted. At present if this is \"true\" then no Web API commands will be accepted by this device.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A human-readable name for the device. Some devices have a name that the user can configure (e.g. \\\"Loudest speaker\\\") and some devices have a generic name associated with the manufacturer or device model.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "Device type, such as \"computer\", \"smartphone\" or \"speaker\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "volume_percent": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The current volume in percent.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model DeviceObject {\n         [[ The device ID. ]]\n         id : String?\n         [[ If this device is the currently active device. ]]\n         is_active : Boolean\n         [[ If this device is currently in a private session. ]]\n         is_private_session : Boolean\n         [[ Whether controlling this device is restricted. At present if this is \"true\" then no Web API commands will be accepted by this device. ]]\n         is_restricted : Boolean\n         [[ A human-readable name for the device. Some devices have a name that the user can configure (e.g. \\\"Loudest speaker\\\") and some devices have a generic name associated with the manufacturer or device model. ]]\n         name : String\n         [[ Device type, such as \"computer\", \"smartphone\" or \"speaker\". ]]\n         `type` : String\n         [[ The current volume in percent. ]]\n         volume_percent : Int?\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "53ae61",
        "fullHash": "8f20586669191f4c6b781f2c613b10e62bb8a667088ca0c78373e3be861b3473"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.DeviceObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.DeviceObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.DeviceObject",
        "parameters": [],
        "name": "DeviceObject",
        "parameterizedName": "com.spotify.DeviceObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.DeviceObject",
        "shortDisplayName": "DeviceObject"
      },
      "fullyQualifiedName": "com.spotify.DeviceObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
        "parameters": [],
        "name": "AnonymousTypeCurrentlyPlayingContextObjectContext",
        "parameterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
        "shortDisplayName": "AnonymousTypeCurrentlyPlayingContextObjectContext"
      },
      "attributes": {
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type, e.g. \"artist\", \"playlist\", \"album\", \"show\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeContextObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeContextObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this context.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeContextObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the context.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ContextObject",
        "parameters": [],
        "name": "ContextObject",
        "parameterizedName": "com.spotify.ContextObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ContextObject",
        "shortDisplayName": "ContextObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ A Context Object. Can be `null`. ]]\n      type AnonymousTypeCurrentlyPlayingContextObjectContext inherits ContextObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "2d8626",
        "fullHash": "1f78e81306377ba5ae500521c1241b9ffea65df1b1caaf4807268d7e736e8073"
      }],
      "typeParameters": [],
      "typeDoc": "A Context Object. Can be `null`.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
        "parameters": [],
        "name": "AnonymousTypeCurrentlyPlayingContextObjectContext",
        "parameterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
        "shortDisplayName": "AnonymousTypeCurrentlyPlayingContextObjectContext"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectContext",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
        "parameters": [],
        "name": "AnonymousTypeCurrentlyPlayingContextObjectActions",
        "parameterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
        "shortDisplayName": "AnonymousTypeCurrentlyPlayingContextObjectActions"
      },
      "attributes": {
        "interrupting_playback": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Interrupting playback. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "pausing": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Pausing. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "resuming": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Resuming. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "seeking": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Seeking playback location. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "skipping_next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Skipping to the next context. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "skipping_prev": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Skipping to the previous context. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "toggling_repeat_context": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Toggling repeat context flag. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "toggling_shuffle": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Toggling shuffle flag. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "toggling_repeat_track": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Toggling repeat track flag. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "transferring_playback": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Transfering playback between devices. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.DisallowsObject",
        "parameters": [],
        "name": "DisallowsObject",
        "parameterizedName": "com.spotify.DisallowsObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.DisallowsObject",
        "shortDisplayName": "DisallowsObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Allows to update the user interface based on which playback actions are available within the current context.\n      ]]\n      type AnonymousTypeCurrentlyPlayingContextObjectActions inherits DisallowsObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d0c28e",
        "fullHash": "0bb321da239f8b019570a968f2723b863979d9760c1c6b923be241444e6f5c72"
      }],
      "typeParameters": [],
      "typeDoc": "Allows to update the user interface based on which playback actions are available within the current context.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
        "parameters": [],
        "name": "AnonymousTypeCurrentlyPlayingContextObjectActions",
        "parameterizedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
        "shortDisplayName": "AnonymousTypeCurrentlyPlayingContextObjectActions"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeCurrentlyPlayingContextObjectActions",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.DisallowsObject",
        "parameters": [],
        "name": "DisallowsObject",
        "parameterizedName": "com.spotify.DisallowsObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.DisallowsObject",
        "shortDisplayName": "DisallowsObject"
      },
      "attributes": {
        "interrupting_playback": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Interrupting playback. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "pausing": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Pausing. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "resuming": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Resuming. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "seeking": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Seeking playback location. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "skipping_next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Skipping to the next context. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "skipping_prev": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Skipping to the previous context. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "toggling_repeat_context": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Toggling repeat context flag. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "toggling_shuffle": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Toggling shuffle flag. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "toggling_repeat_track": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Toggling repeat track flag. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "transferring_playback": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Transfering playback between devices. Optional field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model DisallowsObject {\n         [[ Interrupting playback. Optional field. ]]\n         interrupting_playback : Boolean\n         [[ Pausing. Optional field. ]]\n         pausing : Boolean\n         [[ Resuming. Optional field. ]]\n         resuming : Boolean\n         [[ Seeking playback location. Optional field. ]]\n         seeking : Boolean\n         [[ Skipping to the next context. Optional field. ]]\n         skipping_next : Boolean\n         [[ Skipping to the previous context. Optional field. ]]\n         skipping_prev : Boolean\n         [[ Toggling repeat context flag. Optional field. ]]\n         toggling_repeat_context : Boolean\n         [[ Toggling shuffle flag. Optional field. ]]\n         toggling_shuffle : Boolean\n         [[ Toggling repeat track flag. Optional field. ]]\n         toggling_repeat_track : Boolean\n         [[ Transfering playback between devices. Optional field. ]]\n         transferring_playback : Boolean\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "0327b2",
        "fullHash": "1a6be504f7a3714795821096a2fefc4780c3df47a34b733d7335e3d90e39b4a6"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.DisallowsObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.DisallowsObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.DisallowsObject",
        "parameters": [],
        "name": "DisallowsObject",
        "parameterizedName": "com.spotify.DisallowsObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.DisallowsObject",
        "shortDisplayName": "DisallowsObject"
      },
      "fullyQualifiedName": "com.spotify.DisallowsObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ErrorObject",
        "parameters": [],
        "name": "ErrorObject",
        "parameterizedName": "com.spotify.ErrorObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ErrorObject",
        "shortDisplayName": "ErrorObject"
      },
      "attributes": {
        "status": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The HTTP status code (also returned in the response header; see [Response Status Codes](/documentation/web-api/concepts/api-calls#response-status-codes) for more information).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "message": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A short description of the cause of the error.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ErrorObject {\n         [[ The HTTP status code (also returned in the response header; see [Response Status Codes](/documentation/web-api/concepts/api-calls#response-status-codes) for more information).\n         ]]\n         status : Int\n         [[ A short description of the cause of the error.\n         ]]\n         message : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "6e71e6",
        "fullHash": "26959d1caa5a3ff42fae470a385b6f44b53d1af2a2011306bf4f5ac1b972c657"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ErrorObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ErrorObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ErrorObject",
        "parameters": [],
        "name": "ErrorObject",
        "parameterizedName": "com.spotify.ErrorObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ErrorObject",
        "shortDisplayName": "ErrorObject"
      },
      "fullyQualifiedName": "com.spotify.ErrorObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlayerErrorObject",
        "parameters": [],
        "name": "PlayerErrorObject",
        "parameterizedName": "com.spotify.PlayerErrorObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlayerErrorObject",
        "shortDisplayName": "PlayerErrorObject"
      },
      "attributes": {
        "status": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The HTTP status code. Either `404 NOT FOUND` or `403 FORBIDDEN`.  Also returned in the response header.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "message": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A short description of the cause of the error.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "reason": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
            "parameters": [],
            "name": "AnonymousTypePlayerErrorObjectReason",
            "parameterizedName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
            "shortDisplayName": "AnonymousTypePlayerErrorObjectReason"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PlayerErrorObject {\n         [[ The HTTP status code. Either `404 NOT FOUND` or `403 FORBIDDEN`.  Also returned in the response header.\n         ]]\n         status : Int\n         [[ A short description of the cause of the error.\n         ]]\n         message : String\n         reason : AnonymousTypePlayerErrorObjectReason\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "683553",
        "fullHash": "4b823c3b888c1fcc7f9a894df65927c472210f734760ddc74072f42ca08bcd83"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PlayerErrorObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PlayerErrorObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlayerErrorObject",
        "parameters": [],
        "name": "PlayerErrorObject",
        "parameterizedName": "com.spotify.PlayerErrorObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlayerErrorObject",
        "shortDisplayName": "PlayerErrorObject"
      },
      "fullyQualifiedName": "com.spotify.PlayerErrorObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
        "parameters": [],
        "name": "AnonymousTypePlayerErrorObjectReason",
        "parameterizedName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
        "shortDisplayName": "AnonymousTypePlayerErrorObjectReason"
      },
      "attributes": {},
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PlayerErrorReasons",
        "parameters": [],
        "name": "PlayerErrorReasons",
        "parameterizedName": "com.spotify.PlayerErrorReasons",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlayerErrorReasons",
        "shortDisplayName": "PlayerErrorReasons"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   type AnonymousTypePlayerErrorObjectReason inherits PlayerErrorReasons\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5f47be",
        "fullHash": "4655759d22e7e53e33c52ed9604ba9a98a85d2434bd8df88de500130583e0e24"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": {
        "fullyQualifiedName": "lang.taxi.String",
        "parameters": [],
        "name": "String",
        "parameterizedName": "lang.taxi.String",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.String",
        "shortDisplayName": "String"
      },
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
        "parameters": [],
        "name": "AnonymousTypePlayerErrorObjectReason",
        "parameterizedName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
        "shortDisplayName": "AnonymousTypePlayerErrorObjectReason"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePlayerErrorObjectReason",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": true
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlayerErrorReasons",
        "parameters": [],
        "name": "PlayerErrorReasons",
        "parameterizedName": "com.spotify.PlayerErrorReasons",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlayerErrorReasons",
        "shortDisplayName": "PlayerErrorReasons"
      },
      "attributes": {},
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "lang.taxi.String",
        "parameters": [],
        "name": "String",
        "parameterizedName": "lang.taxi.String",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.String",
        "shortDisplayName": "String"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   type PlayerErrorReasons inherits String\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "6dbb77",
        "fullHash": "93537e8dfecb5aaef02c7f3ecd78811d843901e10bba709d754f4fd620efabd6"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PlayerErrorReasons",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": {
        "fullyQualifiedName": "lang.taxi.String",
        "parameters": [],
        "name": "String",
        "parameterizedName": "lang.taxi.String",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.String",
        "shortDisplayName": "String"
      },
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PlayerErrorReasons",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlayerErrorReasons",
        "parameters": [],
        "name": "PlayerErrorReasons",
        "parameterizedName": "com.spotify.PlayerErrorReasons",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlayerErrorReasons",
        "shortDisplayName": "PlayerErrorReasons"
      },
      "fullyQualifiedName": "com.spotify.PlayerErrorReasons",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": true
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PrivateUserObject",
        "parameters": [],
        "name": "PrivateUserObject",
        "parameterizedName": "com.spotify.PrivateUserObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PrivateUserObject",
        "shortDisplayName": "PrivateUserObject"
      },
      "attributes": {
        "country": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The country of the user, as set in the user's account profile. An [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "display_name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name displayed on the user's profile. `null` if not available.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "email": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The user's email address, as entered by the user when creating their account. _**Important!** This email address is unverified; there is no proof that it actually belongs to the user._ _This field is only available when the current user has granted access to the [user-read-email](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit_content": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
            "parameters": [],
            "name": "AnonymousTypePrivateUserObjectExplicit_content",
            "parameterizedName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
            "shortDisplayName": "AnonymousTypePrivateUserObjectExplicit_content"
          },
          "modifiers": [],
          "typeDoc": "The user's explicit content settings. _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypePrivateUserObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
            "shortDisplayName": "AnonymousTypePrivateUserObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "followers": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
            "parameters": [],
            "name": "AnonymousTypePrivateUserObjectFollowers",
            "parameterizedName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
            "shortDisplayName": "AnonymousTypePrivateUserObjectFollowers"
          },
          "modifiers": [],
          "typeDoc": "Information about the followers of the user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for the user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The user's profile image.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "product": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The user's Spotify subscription level: \"premium\", \"free\", etc. (The subscription level \"open\" can be considered the same as \"free\".) _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type: \"user\"",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PrivateUserObject {\n         [[ The country of the user, as set in the user's account profile. An [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._\n         ]]\n         country : String\n         [[ The name displayed on the user's profile. `null` if not available.\n         ]]\n         display_name : String\n         [[ The user's email address, as entered by the user when creating their account. _**Important!** This email address is unverified; there is no proof that it actually belongs to the user._ _This field is only available when the current user has granted access to the [user-read-email](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._\n         ]]\n         email : String\n         [[ The user's explicit content settings. _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._\n         ]]\n         explicit_content : AnonymousTypePrivateUserObjectExplicit_content\n         [[ Known external URLs for this user. ]]\n         external_urls : AnonymousTypePrivateUserObjectExternal_urls\n         [[ Information about the followers of the user. ]]\n         followers : AnonymousTypePrivateUserObjectFollowers\n         [[ A link to the Web API endpoint for this user.\n         ]]\n         href : String\n         [[ The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for the user.\n         ]]\n         id : String\n         [[ The user's profile image. ]]\n         images : ImageObject[]\n         [[ The user's Spotify subscription level: \"premium\", \"free\", etc. (The subscription level \"open\" can be considered the same as \"free\".) _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._\n         ]]\n         product : String\n         [[ The object type: \"user\"\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the user.\n         ]]\n         uri : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "f23852",
        "fullHash": "0db1a2d24e2cb3362abd79dd7fdefde6370557a1cebf97010e65ac4048821a47"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PrivateUserObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PrivateUserObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PrivateUserObject",
        "parameters": [],
        "name": "PrivateUserObject",
        "parameterizedName": "com.spotify.PrivateUserObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PrivateUserObject",
        "shortDisplayName": "PrivateUserObject"
      },
      "fullyQualifiedName": "com.spotify.PrivateUserObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
        "parameters": [],
        "name": "AnonymousTypePrivateUserObjectExplicit_content",
        "parameterizedName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
        "shortDisplayName": "AnonymousTypePrivateUserObjectExplicit_content"
      },
      "attributes": {
        "filter_enabled": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "When `true`, indicates that explicit content should not be played.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "filter_locked": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "When `true`, indicates that the explicit content setting is locked and can't be changed by the user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExplicitContentSettingsObject",
        "parameters": [],
        "name": "ExplicitContentSettingsObject",
        "parameterizedName": "com.spotify.ExplicitContentSettingsObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExplicitContentSettingsObject",
        "shortDisplayName": "ExplicitContentSettingsObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The user's explicit content settings. _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._\n      ]]\n      type AnonymousTypePrivateUserObjectExplicit_content inherits ExplicitContentSettingsObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "b0b18c",
        "fullHash": "11a77d13bea7ebfa038056caf9b6bcb56eccc73ac975866e7fff234da91cc5f0"
      }],
      "typeParameters": [],
      "typeDoc": "The user's explicit content settings. _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
        "parameters": [],
        "name": "AnonymousTypePrivateUserObjectExplicit_content",
        "parameterizedName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
        "shortDisplayName": "AnonymousTypePrivateUserObjectExplicit_content"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePrivateUserObjectExplicit_content",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ExplicitContentSettingsObject",
        "parameters": [],
        "name": "ExplicitContentSettingsObject",
        "parameterizedName": "com.spotify.ExplicitContentSettingsObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExplicitContentSettingsObject",
        "shortDisplayName": "ExplicitContentSettingsObject"
      },
      "attributes": {
        "filter_enabled": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "When `true`, indicates that explicit content should not be played.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "filter_locked": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "When `true`, indicates that the explicit content setting is locked and can't be changed by the user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ExplicitContentSettingsObject {\n         [[ When `true`, indicates that explicit content should not be played.\n         ]]\n         filter_enabled : Boolean\n         [[ When `true`, indicates that the explicit content setting is locked and can't be changed by the user.\n         ]]\n         filter_locked : Boolean\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "02fed1",
        "fullHash": "85cfbf60a261cab78273bd0f70423aa21ba8b6fe1a39170521c24b5c357b139b"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ExplicitContentSettingsObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ExplicitContentSettingsObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ExplicitContentSettingsObject",
        "parameters": [],
        "name": "ExplicitContentSettingsObject",
        "parameterizedName": "com.spotify.ExplicitContentSettingsObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExplicitContentSettingsObject",
        "shortDisplayName": "ExplicitContentSettingsObject"
      },
      "fullyQualifiedName": "com.spotify.ExplicitContentSettingsObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypePrivateUserObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
        "shortDisplayName": "AnonymousTypePrivateUserObjectExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Known external URLs for this user. ]]\n      type AnonymousTypePrivateUserObjectExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "f87102",
        "fullHash": "c19f513b5778d776e845cf7e1f50e2da24c316e345a3c3d74f1e33eaada21cde"
      }],
      "typeParameters": [],
      "typeDoc": "Known external URLs for this user.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypePrivateUserObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
        "shortDisplayName": "AnonymousTypePrivateUserObjectExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePrivateUserObjectExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
        "parameters": [],
        "name": "AnonymousTypePrivateUserObjectFollowers",
        "parameterizedName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
        "shortDisplayName": "AnonymousTypePrivateUserObjectFollowers"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "This will always be set to null, as the Web API does not support it at the moment.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of followers.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.FollowersObject",
        "parameters": [],
        "name": "FollowersObject",
        "parameterizedName": "com.spotify.FollowersObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.FollowersObject",
        "shortDisplayName": "FollowersObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Information about the followers of the user. ]]\n      type AnonymousTypePrivateUserObjectFollowers inherits FollowersObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "7811e8",
        "fullHash": "c5b2e008f24e2aba490f9a28c1e338bceb0b15c8fd5628b76e645250a33f131c"
      }],
      "typeParameters": [],
      "typeDoc": "Information about the followers of the user.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
        "parameters": [],
        "name": "AnonymousTypePrivateUserObjectFollowers",
        "parameterizedName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
        "shortDisplayName": "AnonymousTypePrivateUserObjectFollowers"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePrivateUserObjectFollowers",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PublicUserObject",
        "parameters": [],
        "name": "PublicUserObject",
        "parameterizedName": "com.spotify.PublicUserObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PublicUserObject",
        "shortDisplayName": "PublicUserObject"
      },
      "attributes": {
        "display_name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name displayed on the user's profile. `null` if not available.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypePublicUserObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
            "shortDisplayName": "AnonymousTypePublicUserObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known public external URLs for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "followers": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
            "parameters": [],
            "name": "AnonymousTypePublicUserObjectFollowers",
            "parameterizedName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
            "shortDisplayName": "AnonymousTypePublicUserObjectFollowers"
          },
          "modifiers": [],
          "typeDoc": "Information about the followers of this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The user's profile image.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PublicUserObject {\n         [[ The name displayed on the user's profile. `null` if not available.\n         ]]\n         display_name : String?\n         [[ Known public external URLs for this user.\n         ]]\n         external_urls : AnonymousTypePublicUserObjectExternal_urls\n         [[ Information about the followers of this user.\n         ]]\n         followers : AnonymousTypePublicUserObjectFollowers\n         [[ A link to the Web API endpoint for this user.\n         ]]\n         href : String\n         [[ The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for this user.\n         ]]\n         id : String\n         [[ The user's profile image.\n         ]]\n         images : ImageObject[]\n         [[ The object type.\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for this user.\n         ]]\n         uri : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "ddd700",
        "fullHash": "27ac660c94ce431bb4ddc2a260956d9ff6a5513e8aca72e036d8183d13c9ff15"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PublicUserObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PublicUserObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PublicUserObject",
        "parameters": [],
        "name": "PublicUserObject",
        "parameterizedName": "com.spotify.PublicUserObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PublicUserObject",
        "shortDisplayName": "PublicUserObject"
      },
      "fullyQualifiedName": "com.spotify.PublicUserObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypePublicUserObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
        "shortDisplayName": "AnonymousTypePublicUserObjectExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Known public external URLs for this user.\n      ]]\n      type AnonymousTypePublicUserObjectExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "6a379f",
        "fullHash": "a0b712c9d13c0f7496813942f31535525be776dd67854ea450e857599416e5df"
      }],
      "typeParameters": [],
      "typeDoc": "Known public external URLs for this user.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypePublicUserObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
        "shortDisplayName": "AnonymousTypePublicUserObjectExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePublicUserObjectExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
        "parameters": [],
        "name": "AnonymousTypePublicUserObjectFollowers",
        "parameterizedName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
        "shortDisplayName": "AnonymousTypePublicUserObjectFollowers"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "This will always be set to null, as the Web API does not support it at the moment.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of followers.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.FollowersObject",
        "parameters": [],
        "name": "FollowersObject",
        "parameterizedName": "com.spotify.FollowersObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.FollowersObject",
        "shortDisplayName": "FollowersObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Information about the followers of this user.\n      ]]\n      type AnonymousTypePublicUserObjectFollowers inherits FollowersObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "73fcf8",
        "fullHash": "4f88f9c389823281dcb1c1bf3be9616bdc60095e7709b81d6272788fc59cb231"
      }],
      "typeParameters": [],
      "typeDoc": "Information about the followers of this user.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
        "parameters": [],
        "name": "AnonymousTypePublicUserObjectFollowers",
        "parameterizedName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
        "shortDisplayName": "AnonymousTypePublicUserObjectFollowers"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePublicUserObjectFollowers",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AudioAnalysisObject",
        "parameters": [],
        "name": "AudioAnalysisObject",
        "parameterizedName": "com.spotify.AudioAnalysisObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudioAnalysisObject",
        "shortDisplayName": "AudioAnalysisObject"
      },
      "attributes": {
        "meta": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
            "parameters": [],
            "name": "AnonymousTypeAudioAnalysisObjectMeta",
            "parameterizedName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
            "shortDisplayName": "AnonymousTypeAudioAnalysisObjectMeta"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "track": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
            "parameters": [],
            "name": "AnonymousTypeAudioAnalysisObjectTrack",
            "parameterizedName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
            "shortDisplayName": "AnonymousTypeAudioAnalysisObjectTrack"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "bars": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.TimeIntervalObject",
              "parameters": [],
              "name": "TimeIntervalObject",
              "parameterizedName": "com.spotify.TimeIntervalObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.TimeIntervalObject",
              "shortDisplayName": "TimeIntervalObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.TimeIntervalObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.TimeIntervalObject[]",
            "shortDisplayName": "TimeIntervalObject[]"
          },
          "modifiers": [],
          "typeDoc": "The time intervals of the bars throughout the track. A bar (or measure) is a segment of time defined as a given number of beats.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.TimeIntervalObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "beats": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.TimeIntervalObject",
              "parameters": [],
              "name": "TimeIntervalObject",
              "parameterizedName": "com.spotify.TimeIntervalObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.TimeIntervalObject",
              "shortDisplayName": "TimeIntervalObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.TimeIntervalObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.TimeIntervalObject[]",
            "shortDisplayName": "TimeIntervalObject[]"
          },
          "modifiers": [],
          "typeDoc": "The time intervals of beats throughout the track. A beat is the basic time unit of a piece of music; for example, each tick of a metronome. Beats are typically multiples of tatums.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.TimeIntervalObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "sections": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SectionObject",
              "parameters": [],
              "name": "SectionObject",
              "parameterizedName": "com.spotify.SectionObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SectionObject",
              "shortDisplayName": "SectionObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SectionObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SectionObject[]",
            "shortDisplayName": "SectionObject[]"
          },
          "modifiers": [],
          "typeDoc": "Sections are defined by large variations in rhythm or timbre, e.g. chorus, verse, bridge, guitar solo, etc. Each section contains its own descriptions of tempo, key, mode, time_signature, and loudness.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SectionObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "segments": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SegmentObject",
              "parameters": [],
              "name": "SegmentObject",
              "parameterizedName": "com.spotify.SegmentObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SegmentObject",
              "shortDisplayName": "SegmentObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SegmentObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SegmentObject[]",
            "shortDisplayName": "SegmentObject[]"
          },
          "modifiers": [],
          "typeDoc": "Each segment contains a roughly conisistent sound throughout its duration.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SegmentObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "tatums": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.TimeIntervalObject",
              "parameters": [],
              "name": "TimeIntervalObject",
              "parameterizedName": "com.spotify.TimeIntervalObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.TimeIntervalObject",
              "shortDisplayName": "TimeIntervalObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.TimeIntervalObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.TimeIntervalObject[]",
            "shortDisplayName": "TimeIntervalObject[]"
          },
          "modifiers": [],
          "typeDoc": "A tatum represents the lowest regular pulse train that a listener intuitively infers from the timing of perceived musical events (segments).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.TimeIntervalObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AudioAnalysisObject {\n         meta : AnonymousTypeAudioAnalysisObjectMeta\n         track : AnonymousTypeAudioAnalysisObjectTrack\n         [[ The time intervals of the bars throughout the track. A bar (or measure) is a segment of time defined as a given number of beats. ]]\n         bars : TimeIntervalObject[]\n         [[ The time intervals of beats throughout the track. A beat is the basic time unit of a piece of music; for example, each tick of a metronome. Beats are typically multiples of tatums. ]]\n         beats : TimeIntervalObject[]\n         [[ Sections are defined by large variations in rhythm or timbre, e.g. chorus, verse, bridge, guitar solo, etc. Each section contains its own descriptions of tempo, key, mode, time_signature, and loudness. ]]\n         sections : SectionObject[]\n         [[ Each segment contains a roughly conisistent sound throughout its duration. ]]\n         segments : SegmentObject[]\n         [[ A tatum represents the lowest regular pulse train that a listener intuitively infers from the timing of perceived musical events (segments). ]]\n         tatums : TimeIntervalObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "6ce923",
        "fullHash": "c5ddc9911d5817ac1dbdf6f0dc49312c342b29b9a3745eba4eb4627484b319e3"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AudioAnalysisObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AudioAnalysisObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AudioAnalysisObject",
        "parameters": [],
        "name": "AudioAnalysisObject",
        "parameterizedName": "com.spotify.AudioAnalysisObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudioAnalysisObject",
        "shortDisplayName": "AudioAnalysisObject"
      },
      "fullyQualifiedName": "com.spotify.AudioAnalysisObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
        "parameters": [],
        "name": "AnonymousTypeAudioAnalysisObjectMeta",
        "parameterizedName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
        "shortDisplayName": "AnonymousTypeAudioAnalysisObjectMeta"
      },
      "attributes": {
        "analyzer_version": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The version of the Analyzer used to analyze this track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "platform": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The platform used to read the track's audio data.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "detailed_status": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A detailed status code for this track. If analysis data is missing, this code may explain why.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "status_code": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The return code of the analyzer process. 0 if successful, 1 if any errors occurred.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "timestamp": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The Unix timestamp (in seconds) at which this track was analyzed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "analysis_time": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The amount of time taken to analyze this track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "input_process": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The method used to read the track's audio data.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeAudioAnalysisObjectMeta {\n         [[ The version of the Analyzer used to analyze this track. ]]\n         analyzer_version : String\n         [[ The platform used to read the track's audio data. ]]\n         platform : String\n         [[ A detailed status code for this track. If analysis data is missing, this code may explain why. ]]\n         detailed_status : String\n         [[ The return code of the analyzer process. 0 if successful, 1 if any errors occurred. ]]\n         status_code : Int\n         [[ The Unix timestamp (in seconds) at which this track was analyzed. ]]\n         timestamp : Int\n         [[ The amount of time taken to analyze this track. ]]\n         analysis_time : Decimal\n         [[ The method used to read the track's audio data. ]]\n         input_process : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d4c297",
        "fullHash": "38da92623ea9f1dfb318e85fe44cbb170c84605f4f2593a73d6bf38aa031b21f"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
        "parameters": [],
        "name": "AnonymousTypeAudioAnalysisObjectMeta",
        "parameterizedName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
        "shortDisplayName": "AnonymousTypeAudioAnalysisObjectMeta"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeAudioAnalysisObjectMeta",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
        "parameters": [],
        "name": "AnonymousTypeAudioAnalysisObjectTrack",
        "parameterizedName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
        "shortDisplayName": "AnonymousTypeAudioAnalysisObjectTrack"
      },
      "attributes": {
        "num_samples": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The exact number of audio samples analyzed from this track. See also `analysis_sample_rate`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "Length of the track in seconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "sample_md5": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "This field will always contain the empty string.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset_seconds": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "An offset to the start of the region of the track that was analyzed. (As the entire track is analyzed, this should always be 0.)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "window_seconds": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The length of the region of the track was analyzed, if a subset of the track was analyzed. (As the entire track is analyzed, this should always be 0.)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "analysis_sample_rate": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The sample rate used to decode and analyze this track. May differ from the actual sample rate of this track available on Spotify.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "analysis_channels": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of channels used for analysis. If 1, all channels are summed together to mono before analysis.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "end_of_fade_in": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The time, in seconds, at which the track's fade-in period ends. If the track has no fade-in, this will be 0.0.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "start_of_fade_out": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The time, in seconds, at which the track's fade-out period starts. If the track has no fade-out, this should match the track's length.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "loudness": {
          "type": {
            "fullyQualifiedName": "com.spotify.Loudness",
            "parameters": [],
            "name": "Loudness",
            "parameterizedName": "com.spotify.Loudness",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.Loudness",
            "shortDisplayName": "Loudness"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.Loudness",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "tempo": {
          "type": {
            "fullyQualifiedName": "com.spotify.Tempo",
            "parameters": [],
            "name": "Tempo",
            "parameterizedName": "com.spotify.Tempo",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.Tempo",
            "shortDisplayName": "Tempo"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.Tempo",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "tempo_confidence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The confidence, from 0.0 to 1.0, of the reliability of the `tempo`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "time_signature": {
          "type": {
            "fullyQualifiedName": "com.spotify.TimeSignature",
            "parameters": [],
            "name": "TimeSignature",
            "parameterizedName": "com.spotify.TimeSignature",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.TimeSignature",
            "shortDisplayName": "TimeSignature"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.TimeSignature",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "time_signature_confidence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The confidence, from 0.0 to 1.0, of the reliability of the `time_signature`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "key": {
          "type": {
            "fullyQualifiedName": "com.spotify.Key",
            "parameters": [],
            "name": "Key",
            "parameterizedName": "com.spotify.Key",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.Key",
            "shortDisplayName": "Key"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.Key",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "key_confidence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The confidence, from 0.0 to 1.0, of the reliability of the `key`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "mode": {
          "type": {
            "fullyQualifiedName": "com.spotify.Mode",
            "parameters": [],
            "name": "Mode",
            "parameterizedName": "com.spotify.Mode",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.Mode",
            "shortDisplayName": "Mode"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.Mode",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "mode_confidence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The confidence, from 0.0 to 1.0, of the reliability of the `mode`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "codestring": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "An [Echo Nest Musical Fingerprint (ENMFP)](https://academiccommons.columbia.edu/doi/10.7916/D8Q248M4) codestring for this track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "code_version": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "A version number for the Echo Nest Musical Fingerprint format used in the codestring field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "echoprintstring": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "An [EchoPrint](https://github.com/spotify/echoprint-codegen) codestring for this track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "echoprint_version": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "A version number for the EchoPrint format used in the echoprintstring field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "synchstring": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A [Synchstring](https://github.com/echonest/synchdata) for this track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "synch_version": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "A version number for the Synchstring used in the synchstring field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "rhythmstring": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A Rhythmstring for this track. The format of this string is similar to the Synchstring.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "rhythm_version": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "A version number for the Rhythmstring used in the rhythmstring field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeAudioAnalysisObjectTrack {\n         [[ The exact number of audio samples analyzed from this track. See also `analysis_sample_rate`. ]]\n         num_samples : Int\n         [[ Length of the track in seconds. ]]\n         duration : Decimal\n         [[ This field will always contain the empty string. ]]\n         sample_md5 : String\n         [[ An offset to the start of the region of the track that was analyzed. (As the entire track is analyzed, this should always be 0.) ]]\n         offset_seconds : Int\n         [[ The length of the region of the track was analyzed, if a subset of the track was analyzed. (As the entire track is analyzed, this should always be 0.) ]]\n         window_seconds : Int\n         [[ The sample rate used to decode and analyze this track. May differ from the actual sample rate of this track available on Spotify. ]]\n         analysis_sample_rate : Int\n         [[ The number of channels used for analysis. If 1, all channels are summed together to mono before analysis. ]]\n         analysis_channels : Int\n         [[ The time, in seconds, at which the track's fade-in period ends. If the track has no fade-in, this will be 0.0. ]]\n         end_of_fade_in : Decimal\n         [[ The time, in seconds, at which the track's fade-out period starts. If the track has no fade-out, this should match the track's length. ]]\n         start_of_fade_out : Decimal\n         loudness : Loudness\n         tempo : Tempo\n         [[ The confidence, from 0.0 to 1.0, of the reliability of the `tempo`. ]]\n         tempo_confidence : Decimal\n         time_signature : TimeSignature\n         [[ The confidence, from 0.0 to 1.0, of the reliability of the `time_signature`. ]]\n         time_signature_confidence : Decimal\n         key : Key\n         [[ The confidence, from 0.0 to 1.0, of the reliability of the `key`. ]]\n         key_confidence : Decimal\n         mode : Mode\n         [[ The confidence, from 0.0 to 1.0, of the reliability of the `mode`. ]]\n         mode_confidence : Decimal\n         [[ An [Echo Nest Musical Fingerprint (ENMFP)](https://academiccommons.columbia.edu/doi/10.7916/D8Q248M4) codestring for this track. ]]\n         codestring : String\n         [[ A version number for the Echo Nest Musical Fingerprint format used in the codestring field. ]]\n         code_version : Decimal\n         [[ An [EchoPrint](https://github.com/spotify/echoprint-codegen) codestring for this track. ]]\n         echoprintstring : String\n         [[ A version number for the EchoPrint format used in the echoprintstring field. ]]\n         echoprint_version : Decimal\n         [[ A [Synchstring](https://github.com/echonest/synchdata) for this track. ]]\n         synchstring : String\n         [[ A version number for the Synchstring used in the synchstring field. ]]\n         synch_version : Decimal\n         [[ A Rhythmstring for this track. The format of this string is similar to the Synchstring. ]]\n         rhythmstring : String\n         [[ A version number for the Rhythmstring used in the rhythmstring field. ]]\n         rhythm_version : Decimal\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d08c21",
        "fullHash": "06762da783189625b3bc878923564d5b445530bc77904a9893a194ce560aab14"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
        "parameters": [],
        "name": "AnonymousTypeAudioAnalysisObjectTrack",
        "parameterizedName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
        "shortDisplayName": "AnonymousTypeAudioAnalysisObjectTrack"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeAudioAnalysisObjectTrack",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.Loudness",
        "parameters": [],
        "name": "Loudness",
        "parameterizedName": "com.spotify.Loudness",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Loudness",
        "shortDisplayName": "Loudness"
      },
      "attributes": {},
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "lang.taxi.Decimal",
        "parameters": [],
        "name": "Decimal",
        "parameterizedName": "lang.taxi.Decimal",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.Decimal",
        "shortDisplayName": "Decimal"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   type Loudness inherits Decimal\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "eb84dd",
        "fullHash": "11d79f88446111f73a0f4767bd225f3636272fa429995a8b693917d12a95996e"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.Loudness",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": {
        "fullyQualifiedName": "lang.taxi.Decimal",
        "parameters": [],
        "name": "Decimal",
        "parameterizedName": "lang.taxi.Decimal",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.Decimal",
        "shortDisplayName": "Decimal"
      },
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.Loudness",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.Loudness",
        "parameters": [],
        "name": "Loudness",
        "parameterizedName": "com.spotify.Loudness",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Loudness",
        "shortDisplayName": "Loudness"
      },
      "fullyQualifiedName": "com.spotify.Loudness",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": true
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.Tempo",
        "parameters": [],
        "name": "Tempo",
        "parameterizedName": "com.spotify.Tempo",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Tempo",
        "shortDisplayName": "Tempo"
      },
      "attributes": {},
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "lang.taxi.Decimal",
        "parameters": [],
        "name": "Decimal",
        "parameterizedName": "lang.taxi.Decimal",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.Decimal",
        "shortDisplayName": "Decimal"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   type Tempo inherits Decimal\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "6e0e5d",
        "fullHash": "448d010cc41496552aed0a1cc302a64b3b5e9fb5857f97b0d1b0d5409cae15c5"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.Tempo",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": {
        "fullyQualifiedName": "lang.taxi.Decimal",
        "parameters": [],
        "name": "Decimal",
        "parameterizedName": "lang.taxi.Decimal",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.Decimal",
        "shortDisplayName": "Decimal"
      },
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.Tempo",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.Tempo",
        "parameters": [],
        "name": "Tempo",
        "parameterizedName": "com.spotify.Tempo",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Tempo",
        "shortDisplayName": "Tempo"
      },
      "fullyQualifiedName": "com.spotify.Tempo",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": true
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.TimeSignature",
        "parameters": [],
        "name": "TimeSignature",
        "parameterizedName": "com.spotify.TimeSignature",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TimeSignature",
        "shortDisplayName": "TimeSignature"
      },
      "attributes": {},
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "lang.taxi.Int",
        "parameters": [],
        "name": "Int",
        "parameterizedName": "lang.taxi.Int",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.Int",
        "shortDisplayName": "Int"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   type TimeSignature inherits Int\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "3aadd7",
        "fullHash": "e32e5069527ef8b86145fb8ab713b16b69f976acdd4c108a984b8afc6de7b9db"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.TimeSignature",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": {
        "fullyQualifiedName": "lang.taxi.Int",
        "parameters": [],
        "name": "Int",
        "parameterizedName": "lang.taxi.Int",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.Int",
        "shortDisplayName": "Int"
      },
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.TimeSignature",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.TimeSignature",
        "parameters": [],
        "name": "TimeSignature",
        "parameterizedName": "com.spotify.TimeSignature",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TimeSignature",
        "shortDisplayName": "TimeSignature"
      },
      "fullyQualifiedName": "com.spotify.TimeSignature",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": true
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.Key",
        "parameters": [],
        "name": "Key",
        "parameterizedName": "com.spotify.Key",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Key",
        "shortDisplayName": "Key"
      },
      "attributes": {},
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "lang.taxi.Int",
        "parameters": [],
        "name": "Int",
        "parameterizedName": "lang.taxi.Int",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.Int",
        "shortDisplayName": "Int"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   type Key inherits Int\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "1de5cf",
        "fullHash": "ea66899ba9288377dd07b29274e1f58fb00d2d8e078ce574c73e6cd754548a94"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.Key",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": {
        "fullyQualifiedName": "lang.taxi.Int",
        "parameters": [],
        "name": "Int",
        "parameterizedName": "lang.taxi.Int",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.Int",
        "shortDisplayName": "Int"
      },
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.Key",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.Key",
        "parameters": [],
        "name": "Key",
        "parameterizedName": "com.spotify.Key",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Key",
        "shortDisplayName": "Key"
      },
      "fullyQualifiedName": "com.spotify.Key",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": true
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.Mode",
        "parameters": [],
        "name": "Mode",
        "parameterizedName": "com.spotify.Mode",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Mode",
        "shortDisplayName": "Mode"
      },
      "attributes": {},
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "lang.taxi.Int",
        "parameters": [],
        "name": "Int",
        "parameterizedName": "lang.taxi.Int",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.Int",
        "shortDisplayName": "Int"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   type Mode inherits Int\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "99cb14",
        "fullHash": "ec0515f8cfee926c6fc1739a2177d8ed9b06a92e31be3f9c418fd7a7b619bd7c"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.Mode",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": {
        "fullyQualifiedName": "lang.taxi.Int",
        "parameters": [],
        "name": "Int",
        "parameterizedName": "lang.taxi.Int",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.Int",
        "shortDisplayName": "Int"
      },
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.Mode",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.Mode",
        "parameters": [],
        "name": "Mode",
        "parameterizedName": "com.spotify.Mode",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Mode",
        "shortDisplayName": "Mode"
      },
      "fullyQualifiedName": "com.spotify.Mode",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": true
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.TimeIntervalObject",
        "parameters": [],
        "name": "TimeIntervalObject",
        "parameterizedName": "com.spotify.TimeIntervalObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TimeIntervalObject",
        "shortDisplayName": "TimeIntervalObject"
      },
      "attributes": {
        "start": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The starting point (in seconds) of the time interval.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The duration (in seconds) of the time interval.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "confidence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The confidence, from 0.0 to 1.0, of the reliability of the interval.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model TimeIntervalObject {\n         [[ The starting point (in seconds) of the time interval. ]]\n         start : Decimal\n         [[ The duration (in seconds) of the time interval. ]]\n         duration : Decimal\n         [[ The confidence, from 0.0 to 1.0, of the reliability of the interval. ]]\n         confidence : Decimal\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "21810f",
        "fullHash": "8175ec4a23f941831a288dac2836bf3b2007f3332c3d5ba76e2d6b3791c0d75d"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.TimeIntervalObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.TimeIntervalObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.TimeIntervalObject",
        "parameters": [],
        "name": "TimeIntervalObject",
        "parameterizedName": "com.spotify.TimeIntervalObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TimeIntervalObject",
        "shortDisplayName": "TimeIntervalObject"
      },
      "fullyQualifiedName": "com.spotify.TimeIntervalObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SectionObject",
        "parameters": [],
        "name": "SectionObject",
        "parameterizedName": "com.spotify.SectionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SectionObject",
        "shortDisplayName": "SectionObject"
      },
      "attributes": {
        "start": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The starting point (in seconds) of the section.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The duration (in seconds) of the section.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "confidence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The confidence, from 0.0 to 1.0, of the reliability of the section's \"designation\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "loudness": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The overall loudness of the section in decibels (dB). Loudness values are useful for comparing relative loudness of sections within tracks.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "tempo": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The overall estimated tempo of the section in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "tempo_confidence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The confidence, from 0.0 to 1.0, of the reliability of the tempo. Some tracks contain tempo changes or sounds which don't contain tempo (like pure speech) which would correspond to a low value in this field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "key": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The estimated overall key of the section. The values in this field ranging from 0 to 11 mapping to pitches using standard Pitch Class notation (E.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on). If no key was detected, the value is -1.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "key_confidence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The confidence, from 0.0 to 1.0, of the reliability of the key. Songs with many key changes may correspond to low values in this field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "mode": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "Indicates the modality (major or minor) of a section, the type of scale from which its melodic content is derived. This field will contain a 0 for \"minor\", a 1 for \"major\", or a -1 for no result. Note that the major key (e.g. C major) could more likely be confused with the minor key at 3 semitones lower (e.g. A minor) as both keys carry the same pitches.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "mode_confidence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The confidence, from 0.0 to 1.0, of the reliability of the `mode`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "time_signature": {
          "type": {
            "fullyQualifiedName": "com.spotify.TimeSignature",
            "parameters": [],
            "name": "TimeSignature",
            "parameterizedName": "com.spotify.TimeSignature",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.TimeSignature",
            "shortDisplayName": "TimeSignature"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.TimeSignature",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "time_signature_confidence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The confidence, from 0.0 to 1.0, of the reliability of the `time_signature`. Sections with time signature changes may correspond to low values in this field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model SectionObject {\n         [[ The starting point (in seconds) of the section. ]]\n         start : Decimal\n         [[ The duration (in seconds) of the section. ]]\n         duration : Decimal\n         [[ The confidence, from 0.0 to 1.0, of the reliability of the section's \"designation\". ]]\n         confidence : Decimal\n         [[ The overall loudness of the section in decibels (dB). Loudness values are useful for comparing relative loudness of sections within tracks. ]]\n         loudness : Decimal\n         [[ The overall estimated tempo of the section in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration. ]]\n         tempo : Decimal\n         [[ The confidence, from 0.0 to 1.0, of the reliability of the tempo. Some tracks contain tempo changes or sounds which don't contain tempo (like pure speech) which would correspond to a low value in this field. ]]\n         tempo_confidence : Decimal\n         [[ The estimated overall key of the section. The values in this field ranging from 0 to 11 mapping to pitches using standard Pitch Class notation (E.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on). If no key was detected, the value is -1. ]]\n         key : Int\n         [[ The confidence, from 0.0 to 1.0, of the reliability of the key. Songs with many key changes may correspond to low values in this field. ]]\n         key_confidence : Decimal\n         [[ Indicates the modality (major or minor) of a section, the type of scale from which its melodic content is derived. This field will contain a 0 for \"minor\", a 1 for \"major\", or a -1 for no result. Note that the major key (e.g. C major) could more likely be confused with the minor key at 3 semitones lower (e.g. A minor) as both keys carry the same pitches. ]]\n         mode : Decimal\n         [[ The confidence, from 0.0 to 1.0, of the reliability of the `mode`. ]]\n         mode_confidence : Decimal\n         time_signature : TimeSignature\n         [[ The confidence, from 0.0 to 1.0, of the reliability of the `time_signature`. Sections with time signature changes may correspond to low values in this field. ]]\n         time_signature_confidence : Decimal\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "a08513",
        "fullHash": "9f37cc9accb40812770fd5d390e49c82a70d105f236f48c626ddc06ea3393eb1"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SectionObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SectionObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SectionObject",
        "parameters": [],
        "name": "SectionObject",
        "parameterizedName": "com.spotify.SectionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SectionObject",
        "shortDisplayName": "SectionObject"
      },
      "fullyQualifiedName": "com.spotify.SectionObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SegmentObject",
        "parameters": [],
        "name": "SegmentObject",
        "parameterizedName": "com.spotify.SegmentObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SegmentObject",
        "shortDisplayName": "SegmentObject"
      },
      "attributes": {
        "start": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The starting point (in seconds) of the segment.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The duration (in seconds) of the segment.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "confidence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The confidence, from 0.0 to 1.0, of the reliability of the segmentation. Segments of the song which are difficult to logically segment (e.g: noise) may correspond to low values in this field.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "loudness_start": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The onset loudness of the segment in decibels (dB). Combined with `loudness_max` and `loudness_max_time`, these components can be used to describe the \"attack\" of the segment.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "loudness_max": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The peak loudness of the segment in decibels (dB). Combined with `loudness_start` and `loudness_max_time`, these components can be used to describe the \"attack\" of the segment.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "loudness_max_time": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The segment-relative offset of the segment peak loudness in seconds. Combined with `loudness_start` and `loudness_max`, these components can be used to desctibe the \"attack\" of the segment.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "loudness_end": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The offset loudness of the segment in decibels (dB). This value should be equivalent to the loudness_start of the following segment.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "pitches": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Decimal",
              "parameters": [],
              "name": "Decimal",
              "parameterizedName": "lang.taxi.Decimal",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Decimal",
              "shortDisplayName": "Decimal"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Decimal>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal[]",
            "shortDisplayName": "Decimal[]"
          },
          "modifiers": [],
          "typeDoc": "Pitch content is given by a “chroma” vector, corresponding to the 12 pitch classes C, C#, D to B, with values ranging from 0 to 1 that describe the relative dominance of every pitch in the chromatic scale. For example a C Major chord would likely be represented by large values of C, E and G (i.e. classes 0, 4, and 7).\n     Vectors are normalized to 1 by their strongest dimension, therefore noisy sounds are likely represented by values that are all close to 1, while pure tones are described by one value at 1 (the pitch) and others near 0.\n     As can be seen below, the 12 vector indices are a combination of low-power spectrum values at their respective pitch frequencies.\n     ![pitch vector](https://developer.spotify.com/assets/audio/Pitch_vector.png)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "timbre": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Decimal",
              "parameters": [],
              "name": "Decimal",
              "parameterizedName": "lang.taxi.Decimal",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Decimal",
              "shortDisplayName": "Decimal"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Decimal>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal[]",
            "shortDisplayName": "Decimal[]"
          },
          "modifiers": [],
          "typeDoc": "Timbre is the quality of a musical note or sound that distinguishes different types of musical instruments, or voices. It is a complex notion also referred to as sound color, texture, or tone quality, and is derived from the shape of a segment’s spectro-temporal surface, independently of pitch and loudness. The timbre feature is a vector that includes 12 unbounded values roughly centered around 0. Those values are high level abstractions of the spectral surface, ordered by degree of importance.\n     For completeness however, the first dimension represents the average loudness of the segment; second emphasizes brightness; third is more closely correlated to the flatness of a sound; fourth to sounds with a stronger attack; etc. See an image below representing the 12 basis functions (i.e. template segments).\n     ![timbre basis functions](https://developer.spotify.com/assets/audio/Timbre_basis_functions.png)\n     The actual timbre of the segment is best described as a linear combination of these 12 basis functions weighted by the coefficient values: timbre = c1 x b1 + c2 x b2 + ... + c12 x b12, where c1 to c12 represent the 12 coefficients and b1 to b12 the 12 basis functions as displayed below. Timbre vectors are best used in comparison with each other.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model SegmentObject {\n         [[ The starting point (in seconds) of the segment. ]]\n         start : Decimal\n         [[ The duration (in seconds) of the segment. ]]\n         duration : Decimal\n         [[ The confidence, from 0.0 to 1.0, of the reliability of the segmentation. Segments of the song which are difficult to logically segment (e.g: noise) may correspond to low values in this field.\n         ]]\n         confidence : Decimal\n         [[ The onset loudness of the segment in decibels (dB). Combined with `loudness_max` and `loudness_max_time`, these components can be used to describe the \"attack\" of the segment. ]]\n         loudness_start : Decimal\n         [[ The peak loudness of the segment in decibels (dB). Combined with `loudness_start` and `loudness_max_time`, these components can be used to describe the \"attack\" of the segment. ]]\n         loudness_max : Decimal\n         [[ The segment-relative offset of the segment peak loudness in seconds. Combined with `loudness_start` and `loudness_max`, these components can be used to desctibe the \"attack\" of the segment. ]]\n         loudness_max_time : Decimal\n         [[ The offset loudness of the segment in decibels (dB). This value should be equivalent to the loudness_start of the following segment. ]]\n         loudness_end : Decimal\n         [[ Pitch content is given by a “chroma” vector, corresponding to the 12 pitch classes C, C#, D to B, with values ranging from 0 to 1 that describe the relative dominance of every pitch in the chromatic scale. For example a C Major chord would likely be represented by large values of C, E and G (i.e. classes 0, 4, and 7).\n         Vectors are normalized to 1 by their strongest dimension, therefore noisy sounds are likely represented by values that are all close to 1, while pure tones are described by one value at 1 (the pitch) and others near 0.\n         As can be seen below, the 12 vector indices are a combination of low-power spectrum values at their respective pitch frequencies.\n         ![pitch vector](https://developer.spotify.com/assets/audio/Pitch_vector.png)\n         ]]\n         pitches : Decimal[]\n         [[ Timbre is the quality of a musical note or sound that distinguishes different types of musical instruments, or voices. It is a complex notion also referred to as sound color, texture, or tone quality, and is derived from the shape of a segment’s spectro-temporal surface, independently of pitch and loudness. The timbre feature is a vector that includes 12 unbounded values roughly centered around 0. Those values are high level abstractions of the spectral surface, ordered by degree of importance.\n         For completeness however, the first dimension represents the average loudness of the segment; second emphasizes brightness; third is more closely correlated to the flatness of a sound; fourth to sounds with a stronger attack; etc. See an image below representing the 12 basis functions (i.e. template segments).\n         ![timbre basis functions](https://developer.spotify.com/assets/audio/Timbre_basis_functions.png)\n         The actual timbre of the segment is best described as a linear combination of these 12 basis functions weighted by the coefficient values: timbre = c1 x b1 + c2 x b2 + ... + c12 x b12, where c1 to c12 represent the 12 coefficients and b1 to b12 the 12 basis functions as displayed below. Timbre vectors are best used in comparison with each other.\n         ]]\n         timbre : Decimal[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "79d4a3",
        "fullHash": "4063a38a031f704bce56122a909efd1defe0cd214cfba6089a4e78863072c9c7"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SegmentObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SegmentObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SegmentObject",
        "parameters": [],
        "name": "SegmentObject",
        "parameterizedName": "com.spotify.SegmentObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SegmentObject",
        "shortDisplayName": "SegmentObject"
      },
      "fullyQualifiedName": "com.spotify.SegmentObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AudioFeaturesObject",
        "parameters": [],
        "name": "AudioFeaturesObject",
        "parameterizedName": "com.spotify.AudioFeaturesObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudioFeaturesObject",
        "shortDisplayName": "AudioFeaturesObject"
      },
      "attributes": {
        "acousticness": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "analysis_url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A URL to access the full audio analysis of this track. An access token is required to access this data.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "danceability": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The duration of the track in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "energy": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The Spotify ID for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "instrumentalness": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "Predicts whether a track contains no vocals. \"Ooh\" and \"aah\" sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly \"vocal\". The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "key": {
          "type": {
            "fullyQualifiedName": "com.spotify.Key",
            "parameters": [],
            "name": "Key",
            "parameterizedName": "com.spotify.Key",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.Key",
            "shortDisplayName": "Key"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.Key",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "liveness": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "loudness": {
          "type": {
            "fullyQualifiedName": "com.spotify.Loudness",
            "parameters": [],
            "name": "Loudness",
            "parameterizedName": "com.spotify.Loudness",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.Loudness",
            "shortDisplayName": "Loudness"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.Loudness",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "mode": {
          "type": {
            "fullyQualifiedName": "com.spotify.Mode",
            "parameters": [],
            "name": "Mode",
            "parameterizedName": "com.spotify.Mode",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.Mode",
            "shortDisplayName": "Mode"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.Mode",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "speechiness": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "tempo": {
          "type": {
            "fullyQualifiedName": "com.spotify.Tempo",
            "parameters": [],
            "name": "Tempo",
            "parameterizedName": "com.spotify.Tempo",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.Tempo",
            "shortDisplayName": "Tempo"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.Tempo",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "time_signature": {
          "type": {
            "fullyQualifiedName": "com.spotify.TimeSignature",
            "parameters": [],
            "name": "TimeSignature",
            "parameterizedName": "com.spotify.TimeSignature",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.TimeSignature",
            "shortDisplayName": "TimeSignature"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.TimeSignature",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "track_href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The Spotify URI for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "valence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AudioFeaturesObject {\n         [[ A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.\n         ]]\n         acousticness : Decimal\n         [[ A URL to access the full audio analysis of this track. An access token is required to access this data.\n         ]]\n         analysis_url : String\n         [[ Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.\n         ]]\n         danceability : Decimal\n         [[ The duration of the track in milliseconds.\n         ]]\n         duration_ms : Int\n         [[ Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.\n         ]]\n         energy : Decimal\n         [[ The Spotify ID for the track.\n         ]]\n         id : String\n         [[ Predicts whether a track contains no vocals. \"Ooh\" and \"aah\" sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly \"vocal\". The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\n         ]]\n         instrumentalness : Decimal\n         key : Key\n         [[ Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.\n         ]]\n         liveness : Decimal\n         loudness : Loudness\n         mode : Mode\n         [[ Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.\n         ]]\n         speechiness : Decimal\n         tempo : Tempo\n         time_signature : TimeSignature\n         [[ A link to the Web API endpoint providing full details of the track.\n         ]]\n         track_href : String\n         [[ The object type.\n         ]]\n         `type` : String\n         [[ The Spotify URI for the track.\n         ]]\n         uri : String\n         [[ A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\n         ]]\n         valence : Decimal\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5f75d1",
        "fullHash": "7d474b5e45aaff46a5217e2b0cd6e2f7e587a4168cb1b02aa99b90b17d192389"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AudioFeaturesObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AudioFeaturesObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AudioFeaturesObject",
        "parameters": [],
        "name": "AudioFeaturesObject",
        "parameterizedName": "com.spotify.AudioFeaturesObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudioFeaturesObject",
        "shortDisplayName": "AudioFeaturesObject"
      },
      "fullyQualifiedName": "com.spotify.AudioFeaturesObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SimplifiedTrackObject",
        "parameters": [],
        "name": "SimplifiedTrackObject",
        "parameterizedName": "com.spotify.SimplifiedTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedTrackObject",
        "shortDisplayName": "SimplifiedTrackObject"
      },
      "attributes": {
        "artists": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedArtistObject",
              "parameters": [],
              "name": "SimplifiedArtistObject",
              "parameterizedName": "com.spotify.SimplifiedArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedArtistObject",
              "shortDisplayName": "SimplifiedArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedArtistObject[]",
            "shortDisplayName": "SimplifiedArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": "The artists who performed the track. Each artist object includes a link in `href` to more detailed information about the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the track can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "disc_number": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The disc number (usually `1` unless the album consists of more than one disc).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The track length in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the track has explicit lyrics ( `true` = yes it does; `false` = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeSimplifiedTrackObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeSimplifiedTrackObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playable": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking/) is applied. If `true`, the track is playable in the given market. Otherwise `false`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "linked_from": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
            "parameters": [],
            "name": "AnonymousTypeSimplifiedTrackObjectLinked_from",
            "parameterizedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
            "shortDisplayName": "AnonymousTypeSimplifiedTrackObjectLinked_from"
          },
          "modifiers": [],
          "typeDoc": "Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking/) is applied and is only part of the response if the track linking, in fact, exists. The requested track has been replaced with a different track. The track in the `linked_from` object contains information about the originally requested track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
            "parameters": [],
            "name": "AnonymousTypeSimplifiedTrackObjectRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
            "shortDisplayName": "AnonymousTypeSimplifiedTrackObjectRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "preview_url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A URL to a 30 second preview (MP3 format) of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "track_number": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of the track. If an album has several discs, the track number is the number on the specified disc.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type: \"track\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_local": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the track is from a local file.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model SimplifiedTrackObject {\n         [[ The artists who performed the track. Each artist object includes a link in `href` to more detailed information about the artist. ]]\n         artists : SimplifiedArtistObject[]\n         [[ A list of the countries in which the track can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.\n         ]]\n         available_markets : String[]\n         [[ The disc number (usually `1` unless the album consists of more than one disc). ]]\n         disc_number : Int\n         [[ The track length in milliseconds. ]]\n         duration_ms : Int\n         [[ Whether or not the track has explicit lyrics ( `true` = yes it does; `false` = no it does not OR unknown). ]]\n         explicit : Boolean\n         [[ External URLs for this track.\n         ]]\n         external_urls : AnonymousTypeSimplifiedTrackObjectExternal_urls\n         [[ A link to the Web API endpoint providing full details of the track. ]]\n         href : String\n         [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track.\n         ]]\n         id : String\n         [[ Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking/) is applied. If `true`, the track is playable in the given market. Otherwise `false`.\n         ]]\n         is_playable : Boolean\n         [[ Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking/) is applied and is only part of the response if the track linking, in fact, exists. The requested track has been replaced with a different track. The track in the `linked_from` object contains information about the originally requested track. ]]\n         linked_from : AnonymousTypeSimplifiedTrackObjectLinked_from\n         [[ Included in the response when a content restriction is applied.\n         ]]\n         restrictions : AnonymousTypeSimplifiedTrackObjectRestrictions\n         [[ The name of the track. ]]\n         name : String\n         [[ A URL to a 30 second preview (MP3 format) of the track.\n         ]]\n         preview_url : String\n         [[ The number of the track. If an album has several discs, the track number is the number on the specified disc.\n         ]]\n         track_number : Int\n         [[ The object type: \"track\".\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track.\n         ]]\n         uri : String\n         [[ Whether or not the track is from a local file.\n         ]]\n         is_local : Boolean\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "ac8adf",
        "fullHash": "4290771bb001bedce6827ae84b852faabc0439524e981f1e43469be3818bf719"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SimplifiedTrackObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SimplifiedTrackObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SimplifiedTrackObject",
        "parameters": [],
        "name": "SimplifiedTrackObject",
        "parameterizedName": "com.spotify.SimplifiedTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedTrackObject",
        "shortDisplayName": "SimplifiedTrackObject"
      },
      "fullyQualifiedName": "com.spotify.SimplifiedTrackObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedTrackObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeSimplifiedTrackObjectExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ External URLs for this track.\n      ]]\n      type AnonymousTypeSimplifiedTrackObjectExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d05b0b",
        "fullHash": "b4b996c57678fd997704308857c81203dbd927f650852a609752878df38650e1"
      }],
      "typeParameters": [],
      "typeDoc": "External URLs for this track.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedTrackObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeSimplifiedTrackObjectExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedTrackObjectLinked_from",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
        "shortDisplayName": "AnonymousTypeSimplifiedTrackObjectLinked_from"
      },
      "attributes": {
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeLinkedTrackObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeLinkedTrackObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeLinkedTrackObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type: \"track\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.LinkedTrackObject",
        "parameters": [],
        "name": "LinkedTrackObject",
        "parameterizedName": "com.spotify.LinkedTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.LinkedTrackObject",
        "shortDisplayName": "LinkedTrackObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking/) is applied and is only part of the response if the track linking, in fact, exists. The requested track has been replaced with a different track. The track in the `linked_from` object contains information about the originally requested track. ]]\n      type AnonymousTypeSimplifiedTrackObjectLinked_from inherits LinkedTrackObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "0bb16c",
        "fullHash": "afadd1cbaafa0912157e8c611466a66ab62567e7ac43c494b8c33a2f3c5e371b"
      }],
      "typeParameters": [],
      "typeDoc": "Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking/) is applied and is only part of the response if the track linking, in fact, exists. The requested track has been replaced with a different track. The track in the `linked_from` object contains information about the originally requested track.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedTrackObjectLinked_from",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
        "shortDisplayName": "AnonymousTypeSimplifiedTrackObjectLinked_from"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectLinked_from",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedTrackObjectRestrictions",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
        "shortDisplayName": "AnonymousTypeSimplifiedTrackObjectRestrictions"
      },
      "attributes": {
        "reason": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The reason for the restriction. Supported values:\n     - `market` - The content item is not available in the given market.\n     - `product` - The content item is not available for the user's subscription type.\n     - `explicit` - The content item is explicit and the user's account is set to not play explicit content.\n     Additional reasons may be added in the future.\n     **Note**: If you use this field, make sure that your application safely handles unknown values.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.TrackRestrictionObject",
        "parameters": [],
        "name": "TrackRestrictionObject",
        "parameterizedName": "com.spotify.TrackRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TrackRestrictionObject",
        "shortDisplayName": "TrackRestrictionObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Included in the response when a content restriction is applied.\n      ]]\n      type AnonymousTypeSimplifiedTrackObjectRestrictions inherits TrackRestrictionObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "b54abf",
        "fullHash": "e06136b30543191f1eb9e8f73c3e0c27806e33fae4ad74d0494cb35e3f67717b"
      }],
      "typeParameters": [],
      "typeDoc": "Included in the response when a content restriction is applied.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedTrackObjectRestrictions",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
        "shortDisplayName": "AnonymousTypeSimplifiedTrackObjectRestrictions"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedTrackObjectRestrictions",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.DevicesObject",
        "parameters": [],
        "name": "DevicesObject",
        "parameterizedName": "com.spotify.DevicesObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.DevicesObject",
        "shortDisplayName": "DevicesObject"
      },
      "attributes": {
        "devices": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.DeviceObject",
              "parameters": [],
              "name": "DeviceObject",
              "parameterizedName": "com.spotify.DeviceObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.DeviceObject",
              "shortDisplayName": "DeviceObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.DeviceObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.DeviceObject[]",
            "shortDisplayName": "DeviceObject[]"
          },
          "modifiers": [],
          "typeDoc": "A list of 0..n Device objects",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.DeviceObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model DevicesObject {\n         [[ A list of 0..n Device objects ]]\n         devices : DeviceObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "db54e3",
        "fullHash": "fa2fdb31d877d914dc084b133b85b1717e3140126dab90303d58e274665458dc"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.DevicesObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.DevicesObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.DevicesObject",
        "parameters": [],
        "name": "DevicesObject",
        "parameterizedName": "com.spotify.DevicesObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.DevicesObject",
        "shortDisplayName": "DevicesObject"
      },
      "fullyQualifiedName": "com.spotify.DevicesObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.CursorObject",
        "parameters": [],
        "name": "CursorObject",
        "parameterizedName": "com.spotify.CursorObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CursorObject",
        "shortDisplayName": "CursorObject"
      },
      "attributes": {
        "after": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The cursor to use as key to find the next page of items.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "before": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The cursor to use as key to find the previous page of items.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model CursorObject {\n         [[ The cursor to use as key to find the next page of items. ]]\n         after : String\n         [[ The cursor to use as key to find the previous page of items. ]]\n         before : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "df9123",
        "fullHash": "785f463187a44383370a9c83c47dfcd67a3d60a942e3ec5747df54464bcca9a7"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.CursorObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.CursorObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.CursorObject",
        "parameters": [],
        "name": "CursorObject",
        "parameterizedName": "com.spotify.CursorObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CursorObject",
        "shortDisplayName": "CursorObject"
      },
      "fullyQualifiedName": "com.spotify.CursorObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.CursorPagingObject",
        "parameters": [],
        "name": "CursorPagingObject",
        "parameterizedName": "com.spotify.CursorPagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CursorPagingObject",
        "shortDisplayName": "CursorPagingObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "cursors": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
            "parameters": [],
            "name": "AnonymousTypeCursorPagingObjectCursors",
            "parameterizedName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
            "shortDisplayName": "AnonymousTypeCursorPagingObjectCursors"
          },
          "modifiers": [],
          "typeDoc": "The cursors used to find the next set of items.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model CursorPagingObject {\n         [[ A link to the Web API endpoint returning the full result of the request. ]]\n         href : String\n         [[ The maximum number of items in the response (as set in the query or by default). ]]\n         limit : Int\n         [[ URL to the next page of items. ( `null` if none) ]]\n         next : String\n         [[ The cursors used to find the next set of items. ]]\n         cursors : AnonymousTypeCursorPagingObjectCursors\n         [[ The total number of items available to return. ]]\n         total : Int\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d25812",
        "fullHash": "54fd7ce639c1b2dfbb9f411db183b82c31418c099bd11bc2f19ef5d4d7162310"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.CursorPagingObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.CursorPagingObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.CursorPagingObject",
        "parameters": [],
        "name": "CursorPagingObject",
        "parameterizedName": "com.spotify.CursorPagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CursorPagingObject",
        "shortDisplayName": "CursorPagingObject"
      },
      "fullyQualifiedName": "com.spotify.CursorPagingObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
        "parameters": [],
        "name": "AnonymousTypeCursorPagingObjectCursors",
        "parameterizedName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
        "shortDisplayName": "AnonymousTypeCursorPagingObjectCursors"
      },
      "attributes": {
        "after": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The cursor to use as key to find the next page of items.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "before": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The cursor to use as key to find the previous page of items.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.CursorObject",
        "parameters": [],
        "name": "CursorObject",
        "parameterizedName": "com.spotify.CursorObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CursorObject",
        "shortDisplayName": "CursorObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The cursors used to find the next set of items. ]]\n      type AnonymousTypeCursorPagingObjectCursors inherits CursorObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "73efb2",
        "fullHash": "559161c3c633a2a9bd660fb7516021158ee48c52f11df8c25c9e53ecf9d79db6"
      }],
      "typeParameters": [],
      "typeDoc": "The cursors used to find the next set of items.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
        "parameters": [],
        "name": "AnonymousTypeCursorPagingObjectCursors",
        "parameterizedName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
        "shortDisplayName": "AnonymousTypeCursorPagingObjectCursors"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.CursorPagingPlayHistoryObject",
        "parameters": [],
        "name": "CursorPagingPlayHistoryObject",
        "parameterizedName": "com.spotify.CursorPagingPlayHistoryObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CursorPagingPlayHistoryObject",
        "shortDisplayName": "CursorPagingPlayHistoryObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "cursors": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
            "parameters": [],
            "name": "AnonymousTypeCursorPagingObjectCursors",
            "parameterizedName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
            "shortDisplayName": "AnonymousTypeCursorPagingObjectCursors"
          },
          "modifiers": [],
          "typeDoc": "The cursors used to find the next set of items.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.PlayHistoryObject",
              "parameters": [],
              "name": "PlayHistoryObject",
              "parameterizedName": "com.spotify.PlayHistoryObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.PlayHistoryObject",
              "shortDisplayName": "PlayHistoryObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.PlayHistoryObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.PlayHistoryObject[]",
            "shortDisplayName": "PlayHistoryObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PlayHistoryObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.CursorPagingObject",
        "parameters": [],
        "name": "CursorPagingObject",
        "parameterizedName": "com.spotify.CursorPagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CursorPagingObject",
        "shortDisplayName": "CursorPagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model CursorPagingPlayHistoryObject inherits CursorPagingObject {\n         items : PlayHistoryObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "9dbac1",
        "fullHash": "bb49a10649c180f17c0628f7c63c62947547a8d3a6ef3f7569b452e4ea22cf96"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.CursorPagingPlayHistoryObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.CursorPagingPlayHistoryObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.CursorPagingPlayHistoryObject",
        "parameters": [],
        "name": "CursorPagingPlayHistoryObject",
        "parameterizedName": "com.spotify.CursorPagingPlayHistoryObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CursorPagingPlayHistoryObject",
        "shortDisplayName": "CursorPagingPlayHistoryObject"
      },
      "fullyQualifiedName": "com.spotify.CursorPagingPlayHistoryObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.CursorPagingSimplifiedArtistObject",
        "parameters": [],
        "name": "CursorPagingSimplifiedArtistObject",
        "parameterizedName": "com.spotify.CursorPagingSimplifiedArtistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CursorPagingSimplifiedArtistObject",
        "shortDisplayName": "CursorPagingSimplifiedArtistObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "cursors": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
            "parameters": [],
            "name": "AnonymousTypeCursorPagingObjectCursors",
            "parameterizedName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
            "shortDisplayName": "AnonymousTypeCursorPagingObjectCursors"
          },
          "modifiers": [],
          "typeDoc": "The cursors used to find the next set of items.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeCursorPagingObjectCursors",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ArtistObject",
              "parameters": [],
              "name": "ArtistObject",
              "parameterizedName": "com.spotify.ArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ArtistObject",
              "shortDisplayName": "ArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ArtistObject[]",
            "shortDisplayName": "ArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.CursorPagingObject",
        "parameters": [],
        "name": "CursorPagingObject",
        "parameterizedName": "com.spotify.CursorPagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CursorPagingObject",
        "shortDisplayName": "CursorPagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model CursorPagingSimplifiedArtistObject inherits CursorPagingObject {\n         items : ArtistObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "c9abf2",
        "fullHash": "72d2af6ad2c1266aa79d3153e460137d917045d4da75b88c2544e9f5768ac480"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.CursorPagingSimplifiedArtistObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.CursorPagingSimplifiedArtistObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.CursorPagingSimplifiedArtistObject",
        "parameters": [],
        "name": "CursorPagingSimplifiedArtistObject",
        "parameterizedName": "com.spotify.CursorPagingSimplifiedArtistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CursorPagingSimplifiedArtistObject",
        "shortDisplayName": "CursorPagingSimplifiedArtistObject"
      },
      "fullyQualifiedName": "com.spotify.CursorPagingSimplifiedArtistObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingObject {\n         [[ A link to the Web API endpoint returning the full result of the request\n         ]]\n         href : String\n         [[ The maximum number of items in the response (as set in the query or by default).\n         ]]\n         limit : Int\n         [[ URL to the next page of items. ( `null` if none)\n         ]]\n         next : String?\n         [[ The offset of the items returned (as set in the query or by default)\n         ]]\n         offset : Int\n         [[ URL to the previous page of items. ( `null` if none)\n         ]]\n         previous : String?\n         [[ The total number of items available to return.\n         ]]\n         total : Int\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "afa647",
        "fullHash": "3e23197655bb5880ae164ea51f5c7f3b56f692b18284384f0bb06174906ac0f9"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      },
      "fullyQualifiedName": "com.spotify.PagingObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
        "parameters": [],
        "name": "PagingPlaylistObject",
        "parameterizedName": "com.spotify.PagingPlaylistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingPlaylistObject",
        "shortDisplayName": "PagingPlaylistObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedPlaylistObject",
              "parameters": [],
              "name": "SimplifiedPlaylistObject",
              "parameterizedName": "com.spotify.SimplifiedPlaylistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedPlaylistObject",
              "shortDisplayName": "SimplifiedPlaylistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedPlaylistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedPlaylistObject[]",
            "shortDisplayName": "SimplifiedPlaylistObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedPlaylistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingPlaylistObject inherits PagingObject {\n         items : SimplifiedPlaylistObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "354885",
        "fullHash": "b9d31bce5dc7b8580fab4603dfceca097c1a69f196b8b44652573e3c1079eac2"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingPlaylistObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingPlaylistObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
        "parameters": [],
        "name": "PagingPlaylistObject",
        "parameterizedName": "com.spotify.PagingPlaylistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingPlaylistObject",
        "shortDisplayName": "PagingPlaylistObject"
      },
      "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SimplifiedPlaylistObject",
        "parameters": [],
        "name": "SimplifiedPlaylistObject",
        "parameterizedName": "com.spotify.SimplifiedPlaylistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedPlaylistObject",
        "shortDisplayName": "SimplifiedPlaylistObject"
      },
      "attributes": {
        "collaborative": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "`true` if the owner allows other users to modify the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The playlist description. _Only returned for modified, verified playlists, otherwise_ `null`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeSimplifiedPlaylistObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "Images for the playlist. The array may be empty or contain up to three images. The images are returned by size in descending order. See [Working with Playlists](/documentation/web-api/concepts/playlists). _**Note**: If returned, the source URL for the image (`url`) is temporary and will expire in less than a day._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "owner": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
            "parameters": [],
            "name": "AnonymousTypeSimplifiedPlaylistObjectOwner",
            "parameterizedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
            "shortDisplayName": "AnonymousTypeSimplifiedPlaylistObjectOwner"
          },
          "modifiers": [],
          "typeDoc": "The user who owns the playlist",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "public": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "The playlist's public/private status: `true` the playlist is public, `false` the playlist is private, `null` the playlist status is not relevant. For more about public/private status, see [Working with Playlists](/documentation/web-api/concepts/playlists)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "snapshot_id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "tracks": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
            "parameters": [],
            "name": "AnonymousTypeSimplifiedPlaylistObjectTracks",
            "parameterizedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
            "shortDisplayName": "AnonymousTypeSimplifiedPlaylistObjectTracks"
          },
          "modifiers": [],
          "typeDoc": "A collection containing a link ( `href` ) to the Web API endpoint where full details of the playlist's tracks can be retrieved, along with the `total` number of tracks in the playlist. Note, a track object may be `null`. This can happen if a track is no longer available.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type: \"playlist\"",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model SimplifiedPlaylistObject {\n         [[ `true` if the owner allows other users to modify the playlist.\n         ]]\n         collaborative : Boolean\n         [[ The playlist description. _Only returned for modified, verified playlists, otherwise_ `null`.\n         ]]\n         description : String\n         [[ Known external URLs for this playlist.\n         ]]\n         external_urls : AnonymousTypeSimplifiedPlaylistObjectExternal_urls\n         [[ A link to the Web API endpoint providing full details of the playlist.\n         ]]\n         href : String\n         [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the playlist.\n         ]]\n         id : String\n         [[ Images for the playlist. The array may be empty or contain up to three images. The images are returned by size in descending order. See [Working with Playlists](/documentation/web-api/concepts/playlists). _**Note**: If returned, the source URL for the image (`url`) is temporary and will expire in less than a day._\n         ]]\n         images : ImageObject[]\n         [[ The name of the playlist.\n         ]]\n         name : String\n         [[ The user who owns the playlist\n         ]]\n         owner : AnonymousTypeSimplifiedPlaylistObjectOwner\n         [[ The playlist's public/private status: `true` the playlist is public, `false` the playlist is private, `null` the playlist status is not relevant. For more about public/private status, see [Working with Playlists](/documentation/web-api/concepts/playlists)\n         ]]\n         public : Boolean\n         [[ The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version\n         ]]\n         snapshot_id : String\n         [[ A collection containing a link ( `href` ) to the Web API endpoint where full details of the playlist's tracks can be retrieved, along with the `total` number of tracks in the playlist. Note, a track object may be `null`. This can happen if a track is no longer available.\n         ]]\n         tracks : AnonymousTypeSimplifiedPlaylistObjectTracks\n         [[ The object type: \"playlist\"\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the playlist.\n         ]]\n         uri : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "a1f7d1",
        "fullHash": "32bb9dd2209d9a533d7f297d9fe624e520f6bd1115f8e85e92e82fd425c0d3a1"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SimplifiedPlaylistObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SimplifiedPlaylistObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SimplifiedPlaylistObject",
        "parameters": [],
        "name": "SimplifiedPlaylistObject",
        "parameterizedName": "com.spotify.SimplifiedPlaylistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedPlaylistObject",
        "shortDisplayName": "SimplifiedPlaylistObject"
      },
      "fullyQualifiedName": "com.spotify.SimplifiedPlaylistObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeSimplifiedPlaylistObjectExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Known external URLs for this playlist.\n      ]]\n      type AnonymousTypeSimplifiedPlaylistObjectExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5e167d",
        "fullHash": "f83ab616493b9fac495f6f772b98f3c07f19ba30fac362613be58c2108c6f969"
      }],
      "typeParameters": [],
      "typeDoc": "Known external URLs for this playlist.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
        "shortDisplayName": "AnonymousTypeSimplifiedPlaylistObjectExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedPlaylistObjectOwner",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
        "shortDisplayName": "AnonymousTypeSimplifiedPlaylistObjectOwner"
      },
      "attributes": {
        "display_name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name displayed on the user's profile. `null` if not available.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypePlaylistUserObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "shortDisplayName": "AnonymousTypePlaylistUserObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known public external URLs for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "followers": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "parameters": [],
            "name": "AnonymousTypePlaylistUserObjectFollowers",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "shortDisplayName": "AnonymousTypePlaylistUserObjectFollowers"
          },
          "modifiers": [],
          "typeDoc": "Information about the followers of this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PlaylistOwnerObject",
        "parameters": [],
        "name": "PlaylistOwnerObject",
        "parameterizedName": "com.spotify.PlaylistOwnerObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistOwnerObject",
        "shortDisplayName": "PlaylistOwnerObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The user who owns the playlist\n      ]]\n      type AnonymousTypeSimplifiedPlaylistObjectOwner inherits PlaylistOwnerObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "017574",
        "fullHash": "be815fad5520b2131db2c99bedf0cee4ce126cdaaa18d7407d3fa3d6de33010e"
      }],
      "typeParameters": [],
      "typeDoc": "The user who owns the playlist",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedPlaylistObjectOwner",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
        "shortDisplayName": "AnonymousTypeSimplifiedPlaylistObjectOwner"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectOwner",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlaylistOwnerObject",
        "parameters": [],
        "name": "PlaylistOwnerObject",
        "parameterizedName": "com.spotify.PlaylistOwnerObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistOwnerObject",
        "shortDisplayName": "PlaylistOwnerObject"
      },
      "attributes": {
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypePlaylistUserObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "shortDisplayName": "AnonymousTypePlaylistUserObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known public external URLs for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "followers": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "parameters": [],
            "name": "AnonymousTypePlaylistUserObjectFollowers",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "shortDisplayName": "AnonymousTypePlaylistUserObjectFollowers"
          },
          "modifiers": [],
          "typeDoc": "Information about the followers of this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "display_name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name displayed on the user's profile. `null` if not available.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PlaylistUserObject",
        "parameters": [],
        "name": "PlaylistUserObject",
        "parameterizedName": "com.spotify.PlaylistUserObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistUserObject",
        "shortDisplayName": "PlaylistUserObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PlaylistOwnerObject inherits PlaylistUserObject {\n         [[ The name displayed on the user's profile. `null` if not available.\n         ]]\n         display_name : String?\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "798faa",
        "fullHash": "0eb49b3afcd2d42b01dd92af2434340c39168be6a94e05aea48a509df8875eb5"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PlaylistOwnerObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PlaylistOwnerObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlaylistOwnerObject",
        "parameters": [],
        "name": "PlaylistOwnerObject",
        "parameterizedName": "com.spotify.PlaylistOwnerObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistOwnerObject",
        "shortDisplayName": "PlaylistOwnerObject"
      },
      "fullyQualifiedName": "com.spotify.PlaylistOwnerObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedPlaylistObjectTracks",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
        "shortDisplayName": "AnonymousTypeSimplifiedPlaylistObjectTracks"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint where full details of the playlist's tracks can be retrieved.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "Number of tracks in the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PlaylistTracksRefObject",
        "parameters": [],
        "name": "PlaylistTracksRefObject",
        "parameterizedName": "com.spotify.PlaylistTracksRefObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistTracksRefObject",
        "shortDisplayName": "PlaylistTracksRefObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ A collection containing a link ( `href` ) to the Web API endpoint where full details of the playlist's tracks can be retrieved, along with the `total` number of tracks in the playlist. Note, a track object may be `null`. This can happen if a track is no longer available.\n      ]]\n      type AnonymousTypeSimplifiedPlaylistObjectTracks inherits PlaylistTracksRefObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "49ba93",
        "fullHash": "ae297b4121c45573204f8971e160ea2e789dd31a9ca24b0e41aef9922769b0b7"
      }],
      "typeParameters": [],
      "typeDoc": "A collection containing a link ( `href` ) to the Web API endpoint where full details of the playlist's tracks can be retrieved, along with the `total` number of tracks in the playlist. Note, a track object may be `null`. This can happen if a track is no longer available.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
        "parameters": [],
        "name": "AnonymousTypeSimplifiedPlaylistObjectTracks",
        "parameterizedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
        "shortDisplayName": "AnonymousTypeSimplifiedPlaylistObjectTracks"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSimplifiedPlaylistObjectTracks",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlaylistTracksRefObject",
        "parameters": [],
        "name": "PlaylistTracksRefObject",
        "parameterizedName": "com.spotify.PlaylistTracksRefObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistTracksRefObject",
        "shortDisplayName": "PlaylistTracksRefObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint where full details of the playlist's tracks can be retrieved.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "Number of tracks in the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PlaylistTracksRefObject {\n         [[ A link to the Web API endpoint where full details of the playlist's tracks can be retrieved.\n         ]]\n         href : String\n         [[ Number of tracks in the playlist.\n         ]]\n         total : Int\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d0a560",
        "fullHash": "7f8e19887ba9e03bc1827898f6ffc3aa590387fad21b70d68bf05d4b05dcbafb"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PlaylistTracksRefObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PlaylistTracksRefObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlaylistTracksRefObject",
        "parameters": [],
        "name": "PlaylistTracksRefObject",
        "parameterizedName": "com.spotify.PlaylistTracksRefObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistTracksRefObject",
        "shortDisplayName": "PlaylistTracksRefObject"
      },
      "fullyQualifiedName": "com.spotify.PlaylistTracksRefObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
        "parameters": [],
        "name": "PagingFeaturedPlaylistObject",
        "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
        "shortDisplayName": "PagingFeaturedPlaylistObject"
      },
      "attributes": {
        "message": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "playlists": {
          "type": {
            "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
            "parameters": [],
            "name": "PagingPlaylistObject",
            "parameterizedName": "com.spotify.PagingPlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingPlaylistObject",
            "shortDisplayName": "PagingPlaylistObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PagingPlaylistObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingFeaturedPlaylistObject {\n         message : String\n         playlists : PagingPlaylistObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "b88370",
        "fullHash": "8427fa2b55f3751b6646593117101bff7319506f8476795ceb20e9c5493d77a9"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingFeaturedPlaylistObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
        "parameters": [],
        "name": "PagingFeaturedPlaylistObject",
        "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
        "shortDisplayName": "PagingFeaturedPlaylistObject"
      },
      "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedAlbumObject",
        "parameters": [],
        "name": "PagingSimplifiedAlbumObject",
        "parameterizedName": "com.spotify.PagingSimplifiedAlbumObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
        "shortDisplayName": "PagingSimplifiedAlbumObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedAlbumObject",
              "parameters": [],
              "name": "SimplifiedAlbumObject",
              "parameterizedName": "com.spotify.SimplifiedAlbumObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedAlbumObject",
              "shortDisplayName": "SimplifiedAlbumObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedAlbumObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedAlbumObject[]",
            "shortDisplayName": "SimplifiedAlbumObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedAlbumObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingSimplifiedAlbumObject inherits PagingObject {\n         items : SimplifiedAlbumObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "55ab3b",
        "fullHash": "a4bb560ba0583333077ba7b033d00dafd8e9002a0f60c779c29837db8ee6c6e7"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingSimplifiedAlbumObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedAlbumObject",
        "parameters": [],
        "name": "PagingSimplifiedAlbumObject",
        "parameterizedName": "com.spotify.PagingSimplifiedAlbumObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
        "shortDisplayName": "PagingSimplifiedAlbumObject"
      },
      "fullyQualifiedName": "com.spotify.PagingSimplifiedAlbumObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingSavedAlbumObject",
        "parameters": [],
        "name": "PagingSavedAlbumObject",
        "parameterizedName": "com.spotify.PagingSavedAlbumObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSavedAlbumObject",
        "shortDisplayName": "PagingSavedAlbumObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SavedAlbumObject",
              "parameters": [],
              "name": "SavedAlbumObject",
              "parameterizedName": "com.spotify.SavedAlbumObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SavedAlbumObject",
              "shortDisplayName": "SavedAlbumObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SavedAlbumObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SavedAlbumObject[]",
            "shortDisplayName": "SavedAlbumObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SavedAlbumObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingSavedAlbumObject inherits PagingObject {\n         items : SavedAlbumObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "4879b6",
        "fullHash": "4361f07aec493bd111ef073ab1df87b80175b677dfb274285f790cca0e14cc6e"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingSavedAlbumObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingSavedAlbumObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingSavedAlbumObject",
        "parameters": [],
        "name": "PagingSavedAlbumObject",
        "parameterizedName": "com.spotify.PagingSavedAlbumObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSavedAlbumObject",
        "shortDisplayName": "PagingSavedAlbumObject"
      },
      "fullyQualifiedName": "com.spotify.PagingSavedAlbumObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SavedAlbumObject",
        "parameters": [],
        "name": "SavedAlbumObject",
        "parameterizedName": "com.spotify.SavedAlbumObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SavedAlbumObject",
        "shortDisplayName": "SavedAlbumObject"
      },
      "attributes": {
        "added_at": {
          "type": {
            "fullyQualifiedName": "lang.taxi.DateTime",
            "parameters": [],
            "name": "DateTime",
            "parameterizedName": "lang.taxi.DateTime",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.DateTime",
            "shortDisplayName": "DateTime"
          },
          "modifiers": [],
          "typeDoc": "The date and time the album was saved\n     Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ.\n     If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, release_date in an album object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.DateTime",
          "metadata": [],
          "sourcedBy": null,
          "format": {
            "patterns": ["yyyy-MM-dd'T'HH:mm:ss.SSS"],
            "utcZoneOffsetInMinutes": null,
            "definesPattern": true,
            "isEmpty": false
          },
          "anonymousType": null
        },
        "album": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
            "parameters": [],
            "name": "AnonymousTypeSavedAlbumObjectAlbum",
            "parameterizedName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
            "shortDisplayName": "AnonymousTypeSavedAlbumObjectAlbum"
          },
          "modifiers": [],
          "typeDoc": "Information about the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model SavedAlbumObject {\n         [[ The date and time the album was saved\n         Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ.\n         If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, release_date in an album object.\n         ]]\n         added_at : DateTime\n         [[ Information about the album. ]]\n         album : AnonymousTypeSavedAlbumObjectAlbum\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "ba2c67",
        "fullHash": "bdb0a1e28b2ba3fcc628c7f6dd5fa76507406c3cc53633cbcb8c0ecd3fc76316"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SavedAlbumObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SavedAlbumObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SavedAlbumObject",
        "parameters": [],
        "name": "SavedAlbumObject",
        "parameterizedName": "com.spotify.SavedAlbumObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SavedAlbumObject",
        "shortDisplayName": "SavedAlbumObject"
      },
      "fullyQualifiedName": "com.spotify.SavedAlbumObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
        "parameters": [],
        "name": "AnonymousTypeSavedAlbumObjectAlbum",
        "parameterizedName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
        "shortDisplayName": "AnonymousTypeSavedAlbumObjectAlbum"
      },
      "attributes": {
        "artists": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ArtistObject",
              "parameters": [],
              "name": "ArtistObject",
              "parameterizedName": "com.spotify.ArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ArtistObject",
              "shortDisplayName": "ArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ArtistObject[]",
            "shortDisplayName": "ArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": "The artists of the album. Each artist object includes a link in `href` to more detailed information about the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "tracks": {
          "type": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedTrackObject",
            "parameters": [],
            "name": "PagingSimplifiedTrackObject",
            "parameterizedName": "com.spotify.PagingSimplifiedTrackObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedTrackObject",
            "shortDisplayName": "PagingSimplifiedTrackObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PagingSimplifiedTrackObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "album_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The type of the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total_tracks": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of tracks in the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "The markets in which the album is available: [ISO 3166-1 alpha-2 country codes](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). _**NOTE**: an album is considered available in a market when at least 1 of its tracks is available in that market._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeAlbumBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the album in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the album. In case of an album takedown, the value may be an empty string.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The date the album was first released.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date_precision": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The precision with which `release_date` value is known.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "shortDisplayName": "AnonymousTypeAlbumBaseRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "copyrights": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.CopyrightObject",
              "parameters": [],
              "name": "CopyrightObject",
              "parameterizedName": "com.spotify.CopyrightObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.CopyrightObject",
              "shortDisplayName": "CopyrightObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.CopyrightObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.CopyrightObject[]",
            "shortDisplayName": "CopyrightObject[]"
          },
          "modifiers": [],
          "typeDoc": "The copyright statements of the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.CopyrightObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_ids": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseExternal_ids",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "shortDisplayName": "AnonymousTypeAlbumBaseExternal_ids"
          },
          "modifiers": [],
          "typeDoc": "Known external IDs for the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "genres": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the genres the album is associated with. If not yet classified, the array is empty.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "label": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The label associated with the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "popularity": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The popularity of the album. The value will be between 0 and 100, with 100 being the most popular.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.AlbumObject",
        "parameters": [],
        "name": "AlbumObject",
        "parameterizedName": "com.spotify.AlbumObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumObject",
        "shortDisplayName": "AlbumObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Information about the album. ]]\n      type AnonymousTypeSavedAlbumObjectAlbum inherits AlbumObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "49ee5f",
        "fullHash": "fdfc00f19ebe2465667f70d3af8ee206d48cacb2471a879687c85af150ca7e4b"
      }],
      "typeParameters": [],
      "typeDoc": "Information about the album.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
        "parameters": [],
        "name": "AnonymousTypeSavedAlbumObjectAlbum",
        "parameterizedName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
        "shortDisplayName": "AnonymousTypeSavedAlbumObjectAlbum"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSavedAlbumObjectAlbum",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AlbumObject",
        "parameters": [],
        "name": "AlbumObject",
        "parameterizedName": "com.spotify.AlbumObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumObject",
        "shortDisplayName": "AlbumObject"
      },
      "attributes": {
        "album_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The type of the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total_tracks": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of tracks in the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "The markets in which the album is available: [ISO 3166-1 alpha-2 country codes](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). _**NOTE**: an album is considered available in a market when at least 1 of its tracks is available in that market._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeAlbumBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the album in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the album. In case of an album takedown, the value may be an empty string.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The date the album was first released.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date_precision": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The precision with which `release_date` value is known.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
            "shortDisplayName": "AnonymousTypeAlbumBaseRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "copyrights": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.CopyrightObject",
              "parameters": [],
              "name": "CopyrightObject",
              "parameterizedName": "com.spotify.CopyrightObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.CopyrightObject",
              "shortDisplayName": "CopyrightObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.CopyrightObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.CopyrightObject[]",
            "shortDisplayName": "CopyrightObject[]"
          },
          "modifiers": [],
          "typeDoc": "The copyright statements of the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.CopyrightObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_ids": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "parameters": [],
            "name": "AnonymousTypeAlbumBaseExternal_ids",
            "parameterizedName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
            "shortDisplayName": "AnonymousTypeAlbumBaseExternal_ids"
          },
          "modifiers": [],
          "typeDoc": "Known external IDs for the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeAlbumBaseExternal_ids",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "genres": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the genres the album is associated with. If not yet classified, the array is empty.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "label": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The label associated with the album.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "popularity": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The popularity of the album. The value will be between 0 and 100, with 100 being the most popular.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "artists": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ArtistObject",
              "parameters": [],
              "name": "ArtistObject",
              "parameterizedName": "com.spotify.ArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ArtistObject",
              "shortDisplayName": "ArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ArtistObject[]",
            "shortDisplayName": "ArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": "The artists of the album. Each artist object includes a link in `href` to more detailed information about the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "tracks": {
          "type": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedTrackObject",
            "parameters": [],
            "name": "PagingSimplifiedTrackObject",
            "parameterizedName": "com.spotify.PagingSimplifiedTrackObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedTrackObject",
            "shortDisplayName": "PagingSimplifiedTrackObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PagingSimplifiedTrackObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.AlbumBase",
        "parameters": [],
        "name": "AlbumBase",
        "parameterizedName": "com.spotify.AlbumBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumBase",
        "shortDisplayName": "AlbumBase"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AlbumObject inherits AlbumBase {\n         [[ The artists of the album. Each artist object includes a link in `href` to more detailed information about the artist.\n         ]]\n         artists : ArtistObject[]\n         tracks : PagingSimplifiedTrackObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "9bf8ef",
        "fullHash": "d0d1d71de8e0af6b638924729686dc0e49bf6efae98b914d8d0a25a5c56285bf"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AlbumObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AlbumObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AlbumObject",
        "parameters": [],
        "name": "AlbumObject",
        "parameterizedName": "com.spotify.AlbumObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumObject",
        "shortDisplayName": "AlbumObject"
      },
      "fullyQualifiedName": "com.spotify.AlbumObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedTrackObject",
        "parameters": [],
        "name": "PagingSimplifiedTrackObject",
        "parameterizedName": "com.spotify.PagingSimplifiedTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedTrackObject",
        "shortDisplayName": "PagingSimplifiedTrackObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedTrackObject",
              "parameters": [],
              "name": "SimplifiedTrackObject",
              "parameterizedName": "com.spotify.SimplifiedTrackObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedTrackObject",
              "shortDisplayName": "SimplifiedTrackObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedTrackObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedTrackObject[]",
            "shortDisplayName": "SimplifiedTrackObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedTrackObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingSimplifiedTrackObject inherits PagingObject {\n         items : SimplifiedTrackObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "c58410",
        "fullHash": "1e603351a7511456708dce02d90308ea560bc53162b2549b872170c2a6da7921"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingSimplifiedTrackObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingSimplifiedTrackObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedTrackObject",
        "parameters": [],
        "name": "PagingSimplifiedTrackObject",
        "parameterizedName": "com.spotify.PagingSimplifiedTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedTrackObject",
        "shortDisplayName": "PagingSimplifiedTrackObject"
      },
      "fullyQualifiedName": "com.spotify.PagingSimplifiedTrackObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingSavedTrackObject",
        "parameters": [],
        "name": "PagingSavedTrackObject",
        "parameterizedName": "com.spotify.PagingSavedTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSavedTrackObject",
        "shortDisplayName": "PagingSavedTrackObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SavedTrackObject",
              "parameters": [],
              "name": "SavedTrackObject",
              "parameterizedName": "com.spotify.SavedTrackObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SavedTrackObject",
              "shortDisplayName": "SavedTrackObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SavedTrackObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SavedTrackObject[]",
            "shortDisplayName": "SavedTrackObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SavedTrackObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingSavedTrackObject inherits PagingObject {\n         items : SavedTrackObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "63f3d0",
        "fullHash": "aef4e1be4453ed8ed512b0839e3ddf3d84c2cf4cbcb4346c0e77a69a15ae1ffa"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingSavedTrackObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingSavedTrackObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingSavedTrackObject",
        "parameters": [],
        "name": "PagingSavedTrackObject",
        "parameterizedName": "com.spotify.PagingSavedTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSavedTrackObject",
        "shortDisplayName": "PagingSavedTrackObject"
      },
      "fullyQualifiedName": "com.spotify.PagingSavedTrackObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SavedTrackObject",
        "parameters": [],
        "name": "SavedTrackObject",
        "parameterizedName": "com.spotify.SavedTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SavedTrackObject",
        "shortDisplayName": "SavedTrackObject"
      },
      "attributes": {
        "added_at": {
          "type": {
            "fullyQualifiedName": "lang.taxi.DateTime",
            "parameters": [],
            "name": "DateTime",
            "parameterizedName": "lang.taxi.DateTime",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.DateTime",
            "shortDisplayName": "DateTime"
          },
          "modifiers": [],
          "typeDoc": "The date and time the track was saved.\n     Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ.\n     If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, release_date in an album object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.DateTime",
          "metadata": [],
          "sourcedBy": null,
          "format": {
            "patterns": ["yyyy-MM-dd'T'HH:mm:ss.SSS"],
            "utcZoneOffsetInMinutes": null,
            "definesPattern": true,
            "isEmpty": false
          },
          "anonymousType": null
        },
        "track": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
            "parameters": [],
            "name": "AnonymousTypeSavedTrackObjectTrack",
            "parameterizedName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
            "shortDisplayName": "AnonymousTypeSavedTrackObjectTrack"
          },
          "modifiers": [],
          "typeDoc": "Information about the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model SavedTrackObject {\n         [[ The date and time the track was saved.\n         Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ.\n         If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, release_date in an album object.\n         ]]\n         added_at : DateTime\n         [[ Information about the track. ]]\n         track : AnonymousTypeSavedTrackObjectTrack\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "8b032d",
        "fullHash": "34ca8436cecd9667b1176ca778a98b8aa56699fca8769f299c3c7fda29d897c3"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SavedTrackObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SavedTrackObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SavedTrackObject",
        "parameters": [],
        "name": "SavedTrackObject",
        "parameterizedName": "com.spotify.SavedTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SavedTrackObject",
        "shortDisplayName": "SavedTrackObject"
      },
      "fullyQualifiedName": "com.spotify.SavedTrackObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
        "parameters": [],
        "name": "AnonymousTypeSavedTrackObjectTrack",
        "parameterizedName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
        "shortDisplayName": "AnonymousTypeSavedTrackObjectTrack"
      },
      "attributes": {
        "album": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectAlbum",
            "parameters": [],
            "name": "AnonymousTypeTrackObjectAlbum",
            "parameterizedName": "com.spotify.AnonymousTypeTrackObjectAlbum",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTrackObjectAlbum",
            "shortDisplayName": "AnonymousTypeTrackObjectAlbum"
          },
          "modifiers": [],
          "typeDoc": "The album on which the track appears. The album object includes a link in `href` to full information about the album.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeTrackObjectAlbum",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "artists": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ArtistObject",
              "parameters": [],
              "name": "ArtistObject",
              "parameterizedName": "com.spotify.ArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ArtistObject",
              "shortDisplayName": "ArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ArtistObject[]",
            "shortDisplayName": "ArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": "The artists who performed the track. Each artist object includes a link in `href` to more detailed information about the artist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the track can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "disc_number": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The disc number (usually `1` unless the album consists of more than one disc).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The track length in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the track has explicit lyrics ( `true` = yes it does; `false` = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_ids": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
            "parameters": [],
            "name": "AnonymousTypeTrackObjectExternal_ids",
            "parameterizedName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
            "shortDisplayName": "AnonymousTypeTrackObjectExternal_ids"
          },
          "modifiers": [],
          "typeDoc": "Known external IDs for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_ids",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeTrackObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
            "shortDisplayName": "AnonymousTypeTrackObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeTrackObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playable": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking) is applied. If `true`, the track is playable in the given market. Otherwise `false`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "linked_from": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Any",
            "parameters": [],
            "name": "Any",
            "parameterizedName": "lang.taxi.Any",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any",
            "shortDisplayName": "Any"
          },
          "modifiers": [],
          "typeDoc": "Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking) is applied, and the requested track has been replaced with different track. The track in the `linked_from` object contains information about the originally requested track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Any",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
            "parameters": [],
            "name": "AnonymousTypeTrackObjectRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
            "shortDisplayName": "AnonymousTypeTrackObjectRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeTrackObjectRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "popularity": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.<br/>The popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.<br/>Generally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past. Duplicate tracks (e.g. the same track from a single and an album) are rated independently. Artist and album popularity is derived mathematically from track popularity. _**Note**: the popularity value may lag actual popularity by a few days: the value is not updated in real time._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "preview_url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to a 30 second preview (MP3 format) of the track. Can be `null`",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "track_number": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of the track. If an album has several discs, the track number is the number on the specified disc.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type: \"track\".",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_local": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the track is from a local file.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.TrackObject",
        "parameters": [],
        "name": "TrackObject",
        "parameterizedName": "com.spotify.TrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TrackObject",
        "shortDisplayName": "TrackObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Information about the track. ]]\n      type AnonymousTypeSavedTrackObjectTrack inherits TrackObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "93b696",
        "fullHash": "15787dcb0190e827f8692ebdd05b9b5e0c9db796d980c7263782359bfb588908"
      }],
      "typeParameters": [],
      "typeDoc": "Information about the track.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
        "parameters": [],
        "name": "AnonymousTypeSavedTrackObjectTrack",
        "parameterizedName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
        "shortDisplayName": "AnonymousTypeSavedTrackObjectTrack"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSavedTrackObjectTrack",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingTrackObject",
        "parameters": [],
        "name": "PagingTrackObject",
        "parameterizedName": "com.spotify.PagingTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingTrackObject",
        "shortDisplayName": "PagingTrackObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.TrackObject",
              "parameters": [],
              "name": "TrackObject",
              "parameterizedName": "com.spotify.TrackObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.TrackObject",
              "shortDisplayName": "TrackObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.TrackObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.TrackObject[]",
            "shortDisplayName": "TrackObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.TrackObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingTrackObject inherits PagingObject {\n         items : TrackObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "cf4ad5",
        "fullHash": "61e7c9349a50ed42cb80d222f3a4afca8cdfdb014b14d8c4c25c24e107bfb3a4"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingTrackObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingTrackObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingTrackObject",
        "parameters": [],
        "name": "PagingTrackObject",
        "parameterizedName": "com.spotify.PagingTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingTrackObject",
        "shortDisplayName": "PagingTrackObject"
      },
      "fullyQualifiedName": "com.spotify.PagingTrackObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingPlaylistTrackObject",
        "parameters": [],
        "name": "PagingPlaylistTrackObject",
        "parameterizedName": "com.spotify.PagingPlaylistTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingPlaylistTrackObject",
        "shortDisplayName": "PagingPlaylistTrackObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.PlaylistTrackObject",
              "parameters": [],
              "name": "PlaylistTrackObject",
              "parameterizedName": "com.spotify.PlaylistTrackObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.PlaylistTrackObject",
              "shortDisplayName": "PlaylistTrackObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.PlaylistTrackObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.PlaylistTrackObject[]",
            "shortDisplayName": "PlaylistTrackObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PlaylistTrackObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingPlaylistTrackObject inherits PagingObject {\n         items : PlaylistTrackObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "4f8ce3",
        "fullHash": "b1119deaf477525c52d11ab15711d9528d60051e866fd1433033ab55834f4bc5"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingPlaylistTrackObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingPlaylistTrackObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingPlaylistTrackObject",
        "parameters": [],
        "name": "PagingPlaylistTrackObject",
        "parameterizedName": "com.spotify.PagingPlaylistTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingPlaylistTrackObject",
        "shortDisplayName": "PagingPlaylistTrackObject"
      },
      "fullyQualifiedName": "com.spotify.PagingPlaylistTrackObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedShowObject",
        "parameters": [],
        "name": "PagingSimplifiedShowObject",
        "parameterizedName": "com.spotify.PagingSimplifiedShowObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedShowObject",
        "shortDisplayName": "PagingSimplifiedShowObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedShowObject",
              "parameters": [],
              "name": "SimplifiedShowObject",
              "parameterizedName": "com.spotify.SimplifiedShowObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedShowObject",
              "shortDisplayName": "SimplifiedShowObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedShowObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedShowObject[]",
            "shortDisplayName": "SimplifiedShowObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedShowObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingSimplifiedShowObject inherits PagingObject {\n         items : SimplifiedShowObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "cb87ae",
        "fullHash": "656fe7a1c85b03e987cb4d33669d355e400f09cbe3ae1df2516e3e8cbe8c73f0"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingSimplifiedShowObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingSimplifiedShowObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedShowObject",
        "parameters": [],
        "name": "PagingSimplifiedShowObject",
        "parameterizedName": "com.spotify.PagingSimplifiedShowObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedShowObject",
        "shortDisplayName": "PagingSimplifiedShowObject"
      },
      "fullyQualifiedName": "com.spotify.PagingSimplifiedShowObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SimplifiedShowObject",
        "parameters": [],
        "name": "SimplifiedShowObject",
        "parameterizedName": "com.spotify.SimplifiedShowObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedShowObject",
        "shortDisplayName": "SimplifiedShowObject"
      },
      "attributes": {
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the show can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "copyrights": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.CopyrightObject",
              "parameters": [],
              "name": "CopyrightObject",
              "parameterizedName": "com.spotify.CopyrightObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.CopyrightObject",
              "shortDisplayName": "CopyrightObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.CopyrightObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.CopyrightObject[]",
            "shortDisplayName": "CopyrightObject[]"
          },
          "modifiers": [],
          "typeDoc": "The copyright statements of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.CopyrightObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the show. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the show. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the show has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeShowBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeShowBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the show in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_externally_hosted": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if all of the shows episodes are hosted outside of Spotify's CDN. This field might be `null` in some cases.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the show, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "media_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The media type of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "publisher": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The publisher of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total_episodes": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of episodes in the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ShowBase",
        "parameters": [],
        "name": "ShowBase",
        "parameterizedName": "com.spotify.ShowBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ShowBase",
        "shortDisplayName": "ShowBase"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   type SimplifiedShowObject inherits ShowBase\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "2bf9a2",
        "fullHash": "30b8afb911b4f464354a76090806bb57aa683fe33531feeebaf48a4e34e17fcc"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SimplifiedShowObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SimplifiedShowObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SimplifiedShowObject",
        "parameters": [],
        "name": "SimplifiedShowObject",
        "parameterizedName": "com.spotify.SimplifiedShowObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedShowObject",
        "shortDisplayName": "SimplifiedShowObject"
      },
      "fullyQualifiedName": "com.spotify.SimplifiedShowObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ShowBase",
        "parameters": [],
        "name": "ShowBase",
        "parameterizedName": "com.spotify.ShowBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ShowBase",
        "shortDisplayName": "ShowBase"
      },
      "attributes": {
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the show can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "copyrights": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.CopyrightObject",
              "parameters": [],
              "name": "CopyrightObject",
              "parameterizedName": "com.spotify.CopyrightObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.CopyrightObject",
              "shortDisplayName": "CopyrightObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.CopyrightObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.CopyrightObject[]",
            "shortDisplayName": "CopyrightObject[]"
          },
          "modifiers": [],
          "typeDoc": "The copyright statements of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.CopyrightObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the show. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the show. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the show has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeShowBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeShowBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the show in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_externally_hosted": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if all of the shows episodes are hosted outside of Spotify's CDN. This field might be `null` in some cases.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the show, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "media_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The media type of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "publisher": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The publisher of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total_episodes": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of episodes in the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ShowBase {\n         [[ A list of the countries in which the show can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.\n         ]]\n         available_markets : String[]\n         [[ The copyright statements of the show.\n         ]]\n         copyrights : CopyrightObject[]\n         [[ A description of the show. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.\n         ]]\n         description : String\n         [[ A description of the show. This field may contain HTML tags.\n         ]]\n         html_description : String\n         [[ Whether or not the show has explicit content (true = yes it does; false = no it does not OR unknown).\n         ]]\n         explicit : Boolean\n         [[ External URLs for this show.\n         ]]\n         external_urls : AnonymousTypeShowBaseExternal_urls\n         [[ A link to the Web API endpoint providing full details of the show.\n         ]]\n         href : String\n         [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the show.\n         ]]\n         id : String\n         [[ The cover art for the show in various sizes, widest first.\n         ]]\n         images : ImageObject[]\n         [[ True if all of the shows episodes are hosted outside of Spotify's CDN. This field might be `null` in some cases.\n         ]]\n         is_externally_hosted : Boolean\n         [[ A list of the languages used in the show, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code.\n         ]]\n         languages : String[]\n         [[ The media type of the show.\n         ]]\n         media_type : String\n         [[ The name of the episode.\n         ]]\n         name : String\n         [[ The publisher of the show.\n         ]]\n         publisher : String\n         [[ The object type.\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the show.\n         ]]\n         uri : String\n         [[ The total number of episodes in the show.\n         ]]\n         total_episodes : Int\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "7b5ee2",
        "fullHash": "8ff009ab5c1b1e11e1024abdd3158e604075bbb8d7618cf30667f5a97f5f3fdc"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ShowBase",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ShowBase",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ShowBase",
        "parameters": [],
        "name": "ShowBase",
        "parameterizedName": "com.spotify.ShowBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ShowBase",
        "shortDisplayName": "ShowBase"
      },
      "fullyQualifiedName": "com.spotify.ShowBase",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeShowBaseExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
        "shortDisplayName": "AnonymousTypeShowBaseExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ External URLs for this show.\n      ]]\n      type AnonymousTypeShowBaseExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d74726",
        "fullHash": "dc4424fb94107c75d00663fc3e3371791cb892fd8bfd5f22ed4ed56292dd3450"
      }],
      "typeParameters": [],
      "typeDoc": "External URLs for this show.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeShowBaseExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
        "shortDisplayName": "AnonymousTypeShowBaseExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingSavedShowObject",
        "parameters": [],
        "name": "PagingSavedShowObject",
        "parameterizedName": "com.spotify.PagingSavedShowObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSavedShowObject",
        "shortDisplayName": "PagingSavedShowObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SavedShowObject",
              "parameters": [],
              "name": "SavedShowObject",
              "parameterizedName": "com.spotify.SavedShowObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SavedShowObject",
              "shortDisplayName": "SavedShowObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SavedShowObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SavedShowObject[]",
            "shortDisplayName": "SavedShowObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SavedShowObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingSavedShowObject inherits PagingObject {\n         items : SavedShowObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "27b436",
        "fullHash": "68a33da74582b697dcdb67c67da55c7126e44d872eaf0cd447ccbc0d3c609eb2"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingSavedShowObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingSavedShowObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingSavedShowObject",
        "parameters": [],
        "name": "PagingSavedShowObject",
        "parameterizedName": "com.spotify.PagingSavedShowObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSavedShowObject",
        "shortDisplayName": "PagingSavedShowObject"
      },
      "fullyQualifiedName": "com.spotify.PagingSavedShowObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SavedShowObject",
        "parameters": [],
        "name": "SavedShowObject",
        "parameterizedName": "com.spotify.SavedShowObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SavedShowObject",
        "shortDisplayName": "SavedShowObject"
      },
      "attributes": {
        "added_at": {
          "type": {
            "fullyQualifiedName": "lang.taxi.DateTime",
            "parameters": [],
            "name": "DateTime",
            "parameterizedName": "lang.taxi.DateTime",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.DateTime",
            "shortDisplayName": "DateTime"
          },
          "modifiers": [],
          "typeDoc": "The date and time the show was saved.\n     Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ.\n     If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, release_date in an album object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.DateTime",
          "metadata": [],
          "sourcedBy": null,
          "format": {
            "patterns": ["yyyy-MM-dd'T'HH:mm:ss.SSS"],
            "utcZoneOffsetInMinutes": null,
            "definesPattern": true,
            "isEmpty": false
          },
          "anonymousType": null
        },
        "show": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSavedShowObjectShow",
            "parameters": [],
            "name": "AnonymousTypeSavedShowObjectShow",
            "parameterizedName": "com.spotify.AnonymousTypeSavedShowObjectShow",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSavedShowObjectShow",
            "shortDisplayName": "AnonymousTypeSavedShowObjectShow"
          },
          "modifiers": [],
          "typeDoc": "Information about the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeSavedShowObjectShow",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model SavedShowObject {\n         [[ The date and time the show was saved.\n         Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ.\n         If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, release_date in an album object.\n         ]]\n         added_at : DateTime\n         [[ Information about the show. ]]\n         show : AnonymousTypeSavedShowObjectShow\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d5e08d",
        "fullHash": "76efe95fff247a2e20a280e5ec9815827d3a859da6ca8c51027daae51619bc8d"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SavedShowObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SavedShowObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SavedShowObject",
        "parameters": [],
        "name": "SavedShowObject",
        "parameterizedName": "com.spotify.SavedShowObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SavedShowObject",
        "shortDisplayName": "SavedShowObject"
      },
      "fullyQualifiedName": "com.spotify.SavedShowObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSavedShowObjectShow",
        "parameters": [],
        "name": "AnonymousTypeSavedShowObjectShow",
        "parameterizedName": "com.spotify.AnonymousTypeSavedShowObjectShow",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSavedShowObjectShow",
        "shortDisplayName": "AnonymousTypeSavedShowObjectShow"
      },
      "attributes": {
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the show can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "copyrights": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.CopyrightObject",
              "parameters": [],
              "name": "CopyrightObject",
              "parameterizedName": "com.spotify.CopyrightObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.CopyrightObject",
              "shortDisplayName": "CopyrightObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.CopyrightObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.CopyrightObject[]",
            "shortDisplayName": "CopyrightObject[]"
          },
          "modifiers": [],
          "typeDoc": "The copyright statements of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.CopyrightObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the show. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the show. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the show has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeShowBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeShowBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the show in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_externally_hosted": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if all of the shows episodes are hosted outside of Spotify's CDN. This field might be `null` in some cases.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the show, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "media_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The media type of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "publisher": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The publisher of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total_episodes": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of episodes in the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.SimplifiedShowObject",
        "parameters": [],
        "name": "SimplifiedShowObject",
        "parameterizedName": "com.spotify.SimplifiedShowObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedShowObject",
        "shortDisplayName": "SimplifiedShowObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Information about the show. ]]\n      type AnonymousTypeSavedShowObjectShow inherits SimplifiedShowObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5e1c03",
        "fullHash": "8982fab8d8f6f159ad1e2def28dd8be212ec4ffb80a1a7136e20c72caf7164e8"
      }],
      "typeParameters": [],
      "typeDoc": "Information about the show.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSavedShowObjectShow",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSavedShowObjectShow",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSavedShowObjectShow",
        "parameters": [],
        "name": "AnonymousTypeSavedShowObjectShow",
        "parameterizedName": "com.spotify.AnonymousTypeSavedShowObjectShow",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSavedShowObjectShow",
        "shortDisplayName": "AnonymousTypeSavedShowObjectShow"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSavedShowObjectShow",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedEpisodeObject",
        "parameters": [],
        "name": "PagingSimplifiedEpisodeObject",
        "parameterizedName": "com.spotify.PagingSimplifiedEpisodeObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedEpisodeObject",
        "shortDisplayName": "PagingSimplifiedEpisodeObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedEpisodeObject",
              "parameters": [],
              "name": "SimplifiedEpisodeObject",
              "parameterizedName": "com.spotify.SimplifiedEpisodeObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedEpisodeObject",
              "shortDisplayName": "SimplifiedEpisodeObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedEpisodeObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedEpisodeObject[]",
            "shortDisplayName": "SimplifiedEpisodeObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedEpisodeObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingSimplifiedEpisodeObject inherits PagingObject {\n         items : SimplifiedEpisodeObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "fdcaf4",
        "fullHash": "88e23aca89730e01891d1046b26e320ffa8df65cc83a4aaabf75751e803298df"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingSimplifiedEpisodeObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingSimplifiedEpisodeObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedEpisodeObject",
        "parameters": [],
        "name": "PagingSimplifiedEpisodeObject",
        "parameterizedName": "com.spotify.PagingSimplifiedEpisodeObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedEpisodeObject",
        "shortDisplayName": "PagingSimplifiedEpisodeObject"
      },
      "fullyQualifiedName": "com.spotify.PagingSimplifiedEpisodeObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SimplifiedEpisodeObject",
        "parameters": [],
        "name": "SimplifiedEpisodeObject",
        "parameterizedName": "com.spotify.SimplifiedEpisodeObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedEpisodeObject",
        "shortDisplayName": "SimplifiedEpisodeObject"
      },
      "attributes": {
        "audio_preview_url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A URL to a 30 second preview (MP3 format) of the episode. `null` if not available.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The episode length in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeEpisodeBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeEpisodeBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the episode in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_externally_hosted": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if the episode is hosted outside of Spotify's CDN.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playable": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if the episode is playable in the given market. Otherwise false.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "language": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The language used in the episode, identified by a [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code. This field is deprecated and might be removed in the future. Please use the `languages` field instead.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the episode, identified by their [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The date the episode was first released, for example `\"1981-12-15\"`. Depending on the precision, it might be shown as `\"1981\"` or `\"1981-12\"`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date_precision": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The precision with which `release_date` value is known.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "resume_point": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
            "parameters": [],
            "name": "AnonymousTypeEpisodeBaseResume_point",
            "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
            "shortDisplayName": "AnonymousTypeEpisodeBaseResume_point"
          },
          "modifiers": [],
          "typeDoc": "The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
            "parameters": [],
            "name": "AnonymousTypeEpisodeBaseRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
            "shortDisplayName": "AnonymousTypeEpisodeBaseRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.EpisodeBase",
        "parameters": [],
        "name": "EpisodeBase",
        "parameterizedName": "com.spotify.EpisodeBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodeBase",
        "shortDisplayName": "EpisodeBase"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   type SimplifiedEpisodeObject inherits EpisodeBase\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "13f6d0",
        "fullHash": "518213acc2117bb76cf1f2940622a35797203757ed0d175bd0fd4ea0a84befa0"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SimplifiedEpisodeObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SimplifiedEpisodeObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SimplifiedEpisodeObject",
        "parameters": [],
        "name": "SimplifiedEpisodeObject",
        "parameterizedName": "com.spotify.SimplifiedEpisodeObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedEpisodeObject",
        "shortDisplayName": "SimplifiedEpisodeObject"
      },
      "fullyQualifiedName": "com.spotify.SimplifiedEpisodeObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.EpisodeBase",
        "parameters": [],
        "name": "EpisodeBase",
        "parameterizedName": "com.spotify.EpisodeBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodeBase",
        "shortDisplayName": "EpisodeBase"
      },
      "attributes": {
        "audio_preview_url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A URL to a 30 second preview (MP3 format) of the episode. `null` if not available.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The episode length in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeEpisodeBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeEpisodeBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the episode in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_externally_hosted": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if the episode is hosted outside of Spotify's CDN.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playable": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if the episode is playable in the given market. Otherwise false.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "language": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The language used in the episode, identified by a [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code. This field is deprecated and might be removed in the future. Please use the `languages` field instead.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the episode, identified by their [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The date the episode was first released, for example `\"1981-12-15\"`. Depending on the precision, it might be shown as `\"1981\"` or `\"1981-12\"`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date_precision": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The precision with which `release_date` value is known.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "resume_point": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
            "parameters": [],
            "name": "AnonymousTypeEpisodeBaseResume_point",
            "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
            "shortDisplayName": "AnonymousTypeEpisodeBaseResume_point"
          },
          "modifiers": [],
          "typeDoc": "The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
            "parameters": [],
            "name": "AnonymousTypeEpisodeBaseRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
            "shortDisplayName": "AnonymousTypeEpisodeBaseRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model EpisodeBase {\n         [[ A URL to a 30 second preview (MP3 format) of the episode. `null` if not available.\n         ]]\n         audio_preview_url : String\n         [[ A description of the episode. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.\n         ]]\n         description : String\n         [[ A description of the episode. This field may contain HTML tags.\n         ]]\n         html_description : String\n         [[ The episode length in milliseconds.\n         ]]\n         duration_ms : Int\n         [[ Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown).\n         ]]\n         explicit : Boolean\n         [[ External URLs for this episode.\n         ]]\n         external_urls : AnonymousTypeEpisodeBaseExternal_urls\n         [[ A link to the Web API endpoint providing full details of the episode.\n         ]]\n         href : String\n         [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the episode.\n         ]]\n         id : String\n         [[ The cover art for the episode in various sizes, widest first.\n         ]]\n         images : ImageObject[]\n         [[ True if the episode is hosted outside of Spotify's CDN.\n         ]]\n         is_externally_hosted : Boolean\n         [[ True if the episode is playable in the given market. Otherwise false.\n         ]]\n         is_playable : Boolean\n         [[ The language used in the episode, identified by a [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code. This field is deprecated and might be removed in the future. Please use the `languages` field instead.\n         ]]\n         language : String?\n         [[ A list of the languages used in the episode, identified by their [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639) code.\n         ]]\n         languages : String[]\n         [[ The name of the episode.\n         ]]\n         name : String\n         [[ The date the episode was first released, for example `\"1981-12-15\"`. Depending on the precision, it might be shown as `\"1981\"` or `\"1981-12\"`.\n         ]]\n         release_date : String\n         [[ The precision with which `release_date` value is known.\n         ]]\n         release_date_precision : String\n         [[ The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.\n         ]]\n         resume_point : AnonymousTypeEpisodeBaseResume_point\n         [[ The object type.\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the episode.\n         ]]\n         uri : String\n         [[ Included in the response when a content restriction is applied.\n         ]]\n         restrictions : AnonymousTypeEpisodeBaseRestrictions?\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "821fa0",
        "fullHash": "c757e3e8e9444d4275f7168e6e6326b8683ca666012f73e79b84b0e2ea8ee486"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.EpisodeBase",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.EpisodeBase",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.EpisodeBase",
        "parameters": [],
        "name": "EpisodeBase",
        "parameterizedName": "com.spotify.EpisodeBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodeBase",
        "shortDisplayName": "EpisodeBase"
      },
      "fullyQualifiedName": "com.spotify.EpisodeBase",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeEpisodeBaseExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
        "shortDisplayName": "AnonymousTypeEpisodeBaseExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ External URLs for this episode.\n      ]]\n      type AnonymousTypeEpisodeBaseExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "027413",
        "fullHash": "90b965ce252894c4f9bec7e567a7fa674ecba2ff5926967d97f03087575c2f26"
      }],
      "typeParameters": [],
      "typeDoc": "External URLs for this episode.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeEpisodeBaseExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
        "shortDisplayName": "AnonymousTypeEpisodeBaseExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
        "parameters": [],
        "name": "AnonymousTypeEpisodeBaseResume_point",
        "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
        "shortDisplayName": "AnonymousTypeEpisodeBaseResume_point"
      },
      "attributes": {
        "fully_played": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the episode has been fully played by the user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "resume_position_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The user's most recent position in the episode in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ResumePointObject",
        "parameters": [],
        "name": "ResumePointObject",
        "parameterizedName": "com.spotify.ResumePointObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ResumePointObject",
        "shortDisplayName": "ResumePointObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.\n      ]]\n      type AnonymousTypeEpisodeBaseResume_point inherits ResumePointObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "182712",
        "fullHash": "b6761087f215d5f5ab4908e2de932652cd73135145e4c25ac79dbca345b44496"
      }],
      "typeParameters": [],
      "typeDoc": "The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
        "parameters": [],
        "name": "AnonymousTypeEpisodeBaseResume_point",
        "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
        "shortDisplayName": "AnonymousTypeEpisodeBaseResume_point"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ResumePointObject",
        "parameters": [],
        "name": "ResumePointObject",
        "parameterizedName": "com.spotify.ResumePointObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ResumePointObject",
        "shortDisplayName": "ResumePointObject"
      },
      "attributes": {
        "fully_played": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the episode has been fully played by the user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "resume_position_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The user's most recent position in the episode in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ResumePointObject {\n         [[ Whether or not the episode has been fully played by the user.\n         ]]\n         fully_played : Boolean\n         [[ The user's most recent position in the episode in milliseconds.\n         ]]\n         resume_position_ms : Int\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "45697d",
        "fullHash": "4e45cff9d86aa6d3103bdc5e7cdbf644cb309712e1a31a68701aee08abe43d25"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ResumePointObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ResumePointObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ResumePointObject",
        "parameters": [],
        "name": "ResumePointObject",
        "parameterizedName": "com.spotify.ResumePointObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ResumePointObject",
        "shortDisplayName": "ResumePointObject"
      },
      "fullyQualifiedName": "com.spotify.ResumePointObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
        "parameters": [],
        "name": "AnonymousTypeEpisodeBaseRestrictions",
        "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
        "shortDisplayName": "AnonymousTypeEpisodeBaseRestrictions"
      },
      "attributes": {
        "reason": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The reason for the restriction. Supported values:\n     - `market` - The content item is not available in the given market.\n     - `product` - The content item is not available for the user's subscription type.\n     - `explicit` - The content item is explicit and the user's account is set to not play explicit content.\n     Additional reasons may be added in the future.\n     **Note**: If you use this field, make sure that your application safely handles unknown values.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.EpisodeRestrictionObject",
        "parameters": [],
        "name": "EpisodeRestrictionObject",
        "parameterizedName": "com.spotify.EpisodeRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodeRestrictionObject",
        "shortDisplayName": "EpisodeRestrictionObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Included in the response when a content restriction is applied.\n      ]]\n      type AnonymousTypeEpisodeBaseRestrictions inherits EpisodeRestrictionObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "3e154e",
        "fullHash": "0f01c1bbb32419d1e335b765966af110c0fff0bba917aaf2d95c9607fcc46270"
      }],
      "typeParameters": [],
      "typeDoc": "Included in the response when a content restriction is applied.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
        "parameters": [],
        "name": "AnonymousTypeEpisodeBaseRestrictions",
        "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
        "shortDisplayName": "AnonymousTypeEpisodeBaseRestrictions"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingSavedEpisodeObject",
        "parameters": [],
        "name": "PagingSavedEpisodeObject",
        "parameterizedName": "com.spotify.PagingSavedEpisodeObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSavedEpisodeObject",
        "shortDisplayName": "PagingSavedEpisodeObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SavedEpisodeObject",
              "parameters": [],
              "name": "SavedEpisodeObject",
              "parameterizedName": "com.spotify.SavedEpisodeObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SavedEpisodeObject",
              "shortDisplayName": "SavedEpisodeObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SavedEpisodeObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SavedEpisodeObject[]",
            "shortDisplayName": "SavedEpisodeObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SavedEpisodeObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingSavedEpisodeObject inherits PagingObject {\n         items : SavedEpisodeObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "a4c671",
        "fullHash": "1ca0f70d9222ce5b6c6cf6d0ba65980772653d45cb60ecfbc003d416aa39dabd"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingSavedEpisodeObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingSavedEpisodeObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingSavedEpisodeObject",
        "parameters": [],
        "name": "PagingSavedEpisodeObject",
        "parameterizedName": "com.spotify.PagingSavedEpisodeObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSavedEpisodeObject",
        "shortDisplayName": "PagingSavedEpisodeObject"
      },
      "fullyQualifiedName": "com.spotify.PagingSavedEpisodeObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SavedEpisodeObject",
        "parameters": [],
        "name": "SavedEpisodeObject",
        "parameterizedName": "com.spotify.SavedEpisodeObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SavedEpisodeObject",
        "shortDisplayName": "SavedEpisodeObject"
      },
      "attributes": {
        "added_at": {
          "type": {
            "fullyQualifiedName": "lang.taxi.DateTime",
            "parameters": [],
            "name": "DateTime",
            "parameterizedName": "lang.taxi.DateTime",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.DateTime",
            "shortDisplayName": "DateTime"
          },
          "modifiers": [],
          "typeDoc": "The date and time the episode was saved.\n     Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.DateTime",
          "metadata": [],
          "sourcedBy": null,
          "format": {
            "patterns": ["yyyy-MM-dd'T'HH:mm:ss.SSS"],
            "utcZoneOffsetInMinutes": null,
            "definesPattern": true,
            "isEmpty": false
          },
          "anonymousType": null
        },
        "episode": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
            "parameters": [],
            "name": "AnonymousTypeSavedEpisodeObjectEpisode",
            "parameterizedName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
            "shortDisplayName": "AnonymousTypeSavedEpisodeObjectEpisode"
          },
          "modifiers": [],
          "typeDoc": "Information about the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model SavedEpisodeObject {\n         [[ The date and time the episode was saved.\n         Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ.\n         ]]\n         added_at : DateTime\n         [[ Information about the episode. ]]\n         episode : AnonymousTypeSavedEpisodeObjectEpisode\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "0d022e",
        "fullHash": "fa19635c48f0af48ca3fd694bae4af0a9a16608b36c3da045fe1795b4b5bf9ea"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SavedEpisodeObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SavedEpisodeObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SavedEpisodeObject",
        "parameters": [],
        "name": "SavedEpisodeObject",
        "parameterizedName": "com.spotify.SavedEpisodeObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SavedEpisodeObject",
        "shortDisplayName": "SavedEpisodeObject"
      },
      "fullyQualifiedName": "com.spotify.SavedEpisodeObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
        "parameters": [],
        "name": "AnonymousTypeSavedEpisodeObjectEpisode",
        "parameterizedName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
        "shortDisplayName": "AnonymousTypeSavedEpisodeObjectEpisode"
      },
      "attributes": {
        "show": {
          "type": {
            "fullyQualifiedName": "com.spotify.SimplifiedShowObject",
            "parameters": [],
            "name": "SimplifiedShowObject",
            "parameterizedName": "com.spotify.SimplifiedShowObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.SimplifiedShowObject",
            "shortDisplayName": "SimplifiedShowObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedShowObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "audio_preview_url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A URL to a 30 second preview (MP3 format) of the episode. `null` if not available.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The episode length in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeEpisodeBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeEpisodeBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the episode in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_externally_hosted": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if the episode is hosted outside of Spotify's CDN.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playable": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if the episode is playable in the given market. Otherwise false.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "language": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The language used in the episode, identified by a [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code. This field is deprecated and might be removed in the future. Please use the `languages` field instead.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the episode, identified by their [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The date the episode was first released, for example `\"1981-12-15\"`. Depending on the precision, it might be shown as `\"1981\"` or `\"1981-12\"`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date_precision": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The precision with which `release_date` value is known.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "resume_point": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
            "parameters": [],
            "name": "AnonymousTypeEpisodeBaseResume_point",
            "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
            "shortDisplayName": "AnonymousTypeEpisodeBaseResume_point"
          },
          "modifiers": [],
          "typeDoc": "The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
            "parameters": [],
            "name": "AnonymousTypeEpisodeBaseRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
            "shortDisplayName": "AnonymousTypeEpisodeBaseRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.EpisodeObject",
        "parameters": [],
        "name": "EpisodeObject",
        "parameterizedName": "com.spotify.EpisodeObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodeObject",
        "shortDisplayName": "EpisodeObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Information about the episode. ]]\n      type AnonymousTypeSavedEpisodeObjectEpisode inherits EpisodeObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5cc5e1",
        "fullHash": "3ecf856838ca7b6e2ab10e3b1cda6e3cf51f84093a64d634971566635fa6d860"
      }],
      "typeParameters": [],
      "typeDoc": "Information about the episode.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
        "parameters": [],
        "name": "AnonymousTypeSavedEpisodeObjectEpisode",
        "parameterizedName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
        "shortDisplayName": "AnonymousTypeSavedEpisodeObjectEpisode"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSavedEpisodeObjectEpisode",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.EpisodeObject",
        "parameters": [],
        "name": "EpisodeObject",
        "parameterizedName": "com.spotify.EpisodeObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodeObject",
        "shortDisplayName": "EpisodeObject"
      },
      "attributes": {
        "audio_preview_url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A URL to a 30 second preview (MP3 format) of the episode. `null` if not available.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The episode length in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeEpisodeBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeEpisodeBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeEpisodeBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the episode in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_externally_hosted": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if the episode is hosted outside of Spotify's CDN.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playable": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if the episode is playable in the given market. Otherwise false.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "language": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The language used in the episode, identified by a [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code. This field is deprecated and might be removed in the future. Please use the `languages` field instead.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the episode, identified by their [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The date the episode was first released, for example `\"1981-12-15\"`. Depending on the precision, it might be shown as `\"1981\"` or `\"1981-12\"`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date_precision": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The precision with which `release_date` value is known.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "resume_point": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
            "parameters": [],
            "name": "AnonymousTypeEpisodeBaseResume_point",
            "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
            "shortDisplayName": "AnonymousTypeEpisodeBaseResume_point"
          },
          "modifiers": [],
          "typeDoc": "The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeEpisodeBaseResume_point",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
            "parameters": [],
            "name": "AnonymousTypeEpisodeBaseRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
            "shortDisplayName": "AnonymousTypeEpisodeBaseRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeEpisodeBaseRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "show": {
          "type": {
            "fullyQualifiedName": "com.spotify.SimplifiedShowObject",
            "parameters": [],
            "name": "SimplifiedShowObject",
            "parameterizedName": "com.spotify.SimplifiedShowObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.SimplifiedShowObject",
            "shortDisplayName": "SimplifiedShowObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedShowObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.EpisodeBase",
        "parameters": [],
        "name": "EpisodeBase",
        "parameterizedName": "com.spotify.EpisodeBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodeBase",
        "shortDisplayName": "EpisodeBase"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model EpisodeObject inherits EpisodeBase {\n         show : SimplifiedShowObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "a4e6b5",
        "fullHash": "15717e146d1d529f4ceb0eb6b247c176d382f01ffab77da6f12054fb0c259f09"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.EpisodeObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.EpisodeObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.EpisodeObject",
        "parameters": [],
        "name": "EpisodeObject",
        "parameterizedName": "com.spotify.EpisodeObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodeObject",
        "shortDisplayName": "EpisodeObject"
      },
      "fullyQualifiedName": "com.spotify.EpisodeObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedAudiobookObject",
        "parameters": [],
        "name": "PagingSimplifiedAudiobookObject",
        "parameterizedName": "com.spotify.PagingSimplifiedAudiobookObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedAudiobookObject",
        "shortDisplayName": "PagingSimplifiedAudiobookObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedAudiobookObject",
              "parameters": [],
              "name": "SimplifiedAudiobookObject",
              "parameterizedName": "com.spotify.SimplifiedAudiobookObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedAudiobookObject",
              "shortDisplayName": "SimplifiedAudiobookObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedAudiobookObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedAudiobookObject[]",
            "shortDisplayName": "SimplifiedAudiobookObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedAudiobookObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingSimplifiedAudiobookObject inherits PagingObject {\n         items : SimplifiedAudiobookObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "3c4cb0",
        "fullHash": "d581143e7b71d49d519485291cb81950a4664f5a65a9090d4bb4ec537195e06e"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingSimplifiedAudiobookObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingSimplifiedAudiobookObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedAudiobookObject",
        "parameters": [],
        "name": "PagingSimplifiedAudiobookObject",
        "parameterizedName": "com.spotify.PagingSimplifiedAudiobookObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedAudiobookObject",
        "shortDisplayName": "PagingSimplifiedAudiobookObject"
      },
      "fullyQualifiedName": "com.spotify.PagingSimplifiedAudiobookObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SimplifiedAudiobookObject",
        "parameters": [],
        "name": "SimplifiedAudiobookObject",
        "parameterizedName": "com.spotify.SimplifiedAudiobookObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedAudiobookObject",
        "shortDisplayName": "SimplifiedAudiobookObject"
      },
      "attributes": {
        "authors": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.AuthorObject",
              "parameters": [],
              "name": "AuthorObject",
              "parameterizedName": "com.spotify.AuthorObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.AuthorObject",
              "shortDisplayName": "AuthorObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.AuthorObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.AuthorObject[]",
            "shortDisplayName": "AuthorObject[]"
          },
          "modifiers": [],
          "typeDoc": "The author(s) for the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AuthorObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the audiobook can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "copyrights": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.CopyrightObject",
              "parameters": [],
              "name": "CopyrightObject",
              "parameterizedName": "com.spotify.CopyrightObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.CopyrightObject",
              "shortDisplayName": "CopyrightObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.CopyrightObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.CopyrightObject[]",
            "shortDisplayName": "CopyrightObject[]"
          },
          "modifiers": [],
          "typeDoc": "The copyright statements of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.CopyrightObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the audiobook. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the audiobook. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "edition": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The edition of the audiobook.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the audiobook has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeAudiobookBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeAudiobookBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the audiobook in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the audiobook, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "media_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The media type of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "narrators": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.NarratorObject",
              "parameters": [],
              "name": "NarratorObject",
              "parameterizedName": "com.spotify.NarratorObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.NarratorObject",
              "shortDisplayName": "NarratorObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.NarratorObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.NarratorObject[]",
            "shortDisplayName": "NarratorObject[]"
          },
          "modifiers": [],
          "typeDoc": "The narrator(s) for the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.NarratorObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "publisher": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The publisher of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total_chapters": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of chapters in this audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.AudiobookBase",
        "parameters": [],
        "name": "AudiobookBase",
        "parameterizedName": "com.spotify.AudiobookBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudiobookBase",
        "shortDisplayName": "AudiobookBase"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   type SimplifiedAudiobookObject inherits AudiobookBase\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "dd50a1",
        "fullHash": "8c2b5c5a04b8c082d896ac3f9df5737138aae648a16e4629e17ff828aa5f0793"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SimplifiedAudiobookObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SimplifiedAudiobookObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SimplifiedAudiobookObject",
        "parameters": [],
        "name": "SimplifiedAudiobookObject",
        "parameterizedName": "com.spotify.SimplifiedAudiobookObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedAudiobookObject",
        "shortDisplayName": "SimplifiedAudiobookObject"
      },
      "fullyQualifiedName": "com.spotify.SimplifiedAudiobookObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AudiobookBase",
        "parameters": [],
        "name": "AudiobookBase",
        "parameterizedName": "com.spotify.AudiobookBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudiobookBase",
        "shortDisplayName": "AudiobookBase"
      },
      "attributes": {
        "authors": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.AuthorObject",
              "parameters": [],
              "name": "AuthorObject",
              "parameterizedName": "com.spotify.AuthorObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.AuthorObject",
              "shortDisplayName": "AuthorObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.AuthorObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.AuthorObject[]",
            "shortDisplayName": "AuthorObject[]"
          },
          "modifiers": [],
          "typeDoc": "The author(s) for the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AuthorObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the audiobook can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "copyrights": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.CopyrightObject",
              "parameters": [],
              "name": "CopyrightObject",
              "parameterizedName": "com.spotify.CopyrightObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.CopyrightObject",
              "shortDisplayName": "CopyrightObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.CopyrightObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.CopyrightObject[]",
            "shortDisplayName": "CopyrightObject[]"
          },
          "modifiers": [],
          "typeDoc": "The copyright statements of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.CopyrightObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the audiobook. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the audiobook. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "edition": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The edition of the audiobook.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the audiobook has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeAudiobookBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeAudiobookBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the audiobook in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the audiobook, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "media_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The media type of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "narrators": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.NarratorObject",
              "parameters": [],
              "name": "NarratorObject",
              "parameterizedName": "com.spotify.NarratorObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.NarratorObject",
              "shortDisplayName": "NarratorObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.NarratorObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.NarratorObject[]",
            "shortDisplayName": "NarratorObject[]"
          },
          "modifiers": [],
          "typeDoc": "The narrator(s) for the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.NarratorObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "publisher": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The publisher of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total_chapters": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of chapters in this audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AudiobookBase {\n         [[ The author(s) for the audiobook.\n         ]]\n         authors : AuthorObject[]\n         [[ A list of the countries in which the audiobook can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.\n         ]]\n         available_markets : String[]\n         [[ The copyright statements of the audiobook.\n         ]]\n         copyrights : CopyrightObject[]\n         [[ A description of the audiobook. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.\n         ]]\n         description : String\n         [[ A description of the audiobook. This field may contain HTML tags.\n         ]]\n         html_description : String\n         [[ The edition of the audiobook.\n         ]]\n         edition : String?\n         [[ Whether or not the audiobook has explicit content (true = yes it does; false = no it does not OR unknown).\n         ]]\n         explicit : Boolean\n         [[ External URLs for this audiobook.\n         ]]\n         external_urls : AnonymousTypeAudiobookBaseExternal_urls\n         [[ A link to the Web API endpoint providing full details of the audiobook.\n         ]]\n         href : String\n         [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the audiobook.\n         ]]\n         id : String\n         [[ The cover art for the audiobook in various sizes, widest first.\n         ]]\n         images : ImageObject[]\n         [[ A list of the languages used in the audiobook, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code.\n         ]]\n         languages : String[]\n         [[ The media type of the audiobook.\n         ]]\n         media_type : String\n         [[ The name of the audiobook.\n         ]]\n         name : String\n         [[ The narrator(s) for the audiobook.\n         ]]\n         narrators : NarratorObject[]\n         [[ The publisher of the audiobook.\n         ]]\n         publisher : String\n         [[ The object type.\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the audiobook.\n         ]]\n         uri : String\n         [[ The number of chapters in this audiobook.\n         ]]\n         total_chapters : Int\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "372ade",
        "fullHash": "5717bcb6b6cf0671bbba378d7d2c4fa6744916e66e942eaa67d34b01981cc4b7"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AudiobookBase",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AudiobookBase",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AudiobookBase",
        "parameters": [],
        "name": "AudiobookBase",
        "parameterizedName": "com.spotify.AudiobookBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudiobookBase",
        "shortDisplayName": "AudiobookBase"
      },
      "fullyQualifiedName": "com.spotify.AudiobookBase",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AuthorObject",
        "parameters": [],
        "name": "AuthorObject",
        "parameterizedName": "com.spotify.AuthorObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AuthorObject",
        "shortDisplayName": "AuthorObject"
      },
      "attributes": {
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the author.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AuthorObject {\n         [[ The name of the author.\n         ]]\n         name : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "bbfe4e",
        "fullHash": "4561d60451dcac748967e4d779a879fb15e38274bd20e776619886d0815c8108"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AuthorObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AuthorObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AuthorObject",
        "parameters": [],
        "name": "AuthorObject",
        "parameterizedName": "com.spotify.AuthorObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AuthorObject",
        "shortDisplayName": "AuthorObject"
      },
      "fullyQualifiedName": "com.spotify.AuthorObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeAudiobookBaseExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
        "shortDisplayName": "AnonymousTypeAudiobookBaseExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ External URLs for this audiobook.\n      ]]\n      type AnonymousTypeAudiobookBaseExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "e145a1",
        "fullHash": "0b608f2e69a5bbc31480073fa02b4dc07a40478b2e79a942c17b7c4b57282f49"
      }],
      "typeParameters": [],
      "typeDoc": "External URLs for this audiobook.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeAudiobookBaseExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
        "shortDisplayName": "AnonymousTypeAudiobookBaseExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.NarratorObject",
        "parameters": [],
        "name": "NarratorObject",
        "parameterizedName": "com.spotify.NarratorObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.NarratorObject",
        "shortDisplayName": "NarratorObject"
      },
      "attributes": {
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the Narrator.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model NarratorObject {\n         [[ The name of the Narrator.\n         ]]\n         name : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "9e62ee",
        "fullHash": "5bd4efc77a99fd0c91f23e6f6b3984c0514acbb008896c6f4fcf5017d54b12bf"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.NarratorObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.NarratorObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.NarratorObject",
        "parameters": [],
        "name": "NarratorObject",
        "parameterizedName": "com.spotify.NarratorObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.NarratorObject",
        "shortDisplayName": "NarratorObject"
      },
      "fullyQualifiedName": "com.spotify.NarratorObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedArtistObject",
        "parameters": [],
        "name": "PagingSimplifiedArtistObject",
        "parameterizedName": "com.spotify.PagingSimplifiedArtistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedArtistObject",
        "shortDisplayName": "PagingSimplifiedArtistObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedArtistObject",
              "parameters": [],
              "name": "SimplifiedArtistObject",
              "parameterizedName": "com.spotify.SimplifiedArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedArtistObject",
              "shortDisplayName": "SimplifiedArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedArtistObject[]",
            "shortDisplayName": "SimplifiedArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingSimplifiedArtistObject inherits PagingObject {\n         items : SimplifiedArtistObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "0b1315",
        "fullHash": "9f50f641cc3de6a437c7df14ae2ac6a5ca50dfe3f006ff473d339d5faca46254"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingSimplifiedArtistObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingSimplifiedArtistObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedArtistObject",
        "parameters": [],
        "name": "PagingSimplifiedArtistObject",
        "parameterizedName": "com.spotify.PagingSimplifiedArtistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedArtistObject",
        "shortDisplayName": "PagingSimplifiedArtistObject"
      },
      "fullyQualifiedName": "com.spotify.PagingSimplifiedArtistObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingArtistObject",
        "parameters": [],
        "name": "PagingArtistObject",
        "parameterizedName": "com.spotify.PagingArtistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingArtistObject",
        "shortDisplayName": "PagingArtistObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ArtistObject",
              "parameters": [],
              "name": "ArtistObject",
              "parameterizedName": "com.spotify.ArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ArtistObject",
              "shortDisplayName": "ArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ArtistObject[]",
            "shortDisplayName": "ArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingArtistObject inherits PagingObject {\n         items : ArtistObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "6e6119",
        "fullHash": "27dca78170357194ec59e6526627f48f3dac28130a838117dcaa3559538808bb"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingArtistObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingArtistObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingArtistObject",
        "parameters": [],
        "name": "PagingArtistObject",
        "parameterizedName": "com.spotify.PagingArtistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingArtistObject",
        "shortDisplayName": "PagingArtistObject"
      },
      "fullyQualifiedName": "com.spotify.PagingArtistObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedChapterObject",
        "parameters": [],
        "name": "PagingSimplifiedChapterObject",
        "parameterizedName": "com.spotify.PagingSimplifiedChapterObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedChapterObject",
        "shortDisplayName": "PagingSimplifiedChapterObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedChapterObject",
              "parameters": [],
              "name": "SimplifiedChapterObject",
              "parameterizedName": "com.spotify.SimplifiedChapterObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedChapterObject",
              "shortDisplayName": "SimplifiedChapterObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedChapterObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedChapterObject[]",
            "shortDisplayName": "SimplifiedChapterObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedChapterObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PagingSimplifiedChapterObject inherits PagingObject {\n         items : SimplifiedChapterObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "bd06d0",
        "fullHash": "2762501587aab34a67da40f8ae9c5bd8276eb9c1f2e82b6fbf791bc2cc3725f7"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PagingSimplifiedChapterObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PagingSimplifiedChapterObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PagingSimplifiedChapterObject",
        "parameters": [],
        "name": "PagingSimplifiedChapterObject",
        "parameterizedName": "com.spotify.PagingSimplifiedChapterObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedChapterObject",
        "shortDisplayName": "PagingSimplifiedChapterObject"
      },
      "fullyQualifiedName": "com.spotify.PagingSimplifiedChapterObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SimplifiedChapterObject",
        "parameters": [],
        "name": "SimplifiedChapterObject",
        "parameterizedName": "com.spotify.SimplifiedChapterObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedChapterObject",
        "shortDisplayName": "SimplifiedChapterObject"
      },
      "attributes": {
        "audio_preview_url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A URL to a 30 second preview (MP3 format) of the episode. `null` if not available.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the chapter can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "chapter_number": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of the chapter",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The episode length in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeChapterBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeChapterBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the episode in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playable": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if the episode is playable in the given market. Otherwise false.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the episode, identified by their [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The date the episode was first released, for example `\"1981-12-15\"`. Depending on the precision, it might be shown as `\"1981\"` or `\"1981-12\"`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date_precision": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The precision with which `release_date` value is known.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "resume_point": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseResume_point",
            "parameters": [],
            "name": "AnonymousTypeChapterBaseResume_point",
            "parameterizedName": "com.spotify.AnonymousTypeChapterBaseResume_point",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChapterBaseResume_point",
            "shortDisplayName": "AnonymousTypeChapterBaseResume_point"
          },
          "modifiers": [],
          "typeDoc": "The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeChapterBaseResume_point",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
            "parameters": [],
            "name": "AnonymousTypeChapterBaseRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
            "shortDisplayName": "AnonymousTypeChapterBaseRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ChapterBase",
        "parameters": [],
        "name": "ChapterBase",
        "parameterizedName": "com.spotify.ChapterBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChapterBase",
        "shortDisplayName": "ChapterBase"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   type SimplifiedChapterObject inherits ChapterBase\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "f920f5",
        "fullHash": "5f21c2f19c3ce7f310e832eacb84db0da56af2e47f8c789d5e22ee8fa144f686"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.SimplifiedChapterObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.SimplifiedChapterObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SimplifiedChapterObject",
        "parameters": [],
        "name": "SimplifiedChapterObject",
        "parameterizedName": "com.spotify.SimplifiedChapterObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SimplifiedChapterObject",
        "shortDisplayName": "SimplifiedChapterObject"
      },
      "fullyQualifiedName": "com.spotify.SimplifiedChapterObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ChapterBase",
        "parameters": [],
        "name": "ChapterBase",
        "parameterizedName": "com.spotify.ChapterBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChapterBase",
        "shortDisplayName": "ChapterBase"
      },
      "attributes": {
        "audio_preview_url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A URL to a 30 second preview (MP3 format) of the episode. `null` if not available.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the chapter can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "chapter_number": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of the chapter",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The episode length in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeChapterBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeChapterBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the episode in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playable": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if the episode is playable in the given market. Otherwise false.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the episode, identified by their [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The date the episode was first released, for example `\"1981-12-15\"`. Depending on the precision, it might be shown as `\"1981\"` or `\"1981-12\"`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date_precision": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The precision with which `release_date` value is known.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "resume_point": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseResume_point",
            "parameters": [],
            "name": "AnonymousTypeChapterBaseResume_point",
            "parameterizedName": "com.spotify.AnonymousTypeChapterBaseResume_point",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChapterBaseResume_point",
            "shortDisplayName": "AnonymousTypeChapterBaseResume_point"
          },
          "modifiers": [],
          "typeDoc": "The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeChapterBaseResume_point",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
            "parameters": [],
            "name": "AnonymousTypeChapterBaseRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
            "shortDisplayName": "AnonymousTypeChapterBaseRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ChapterBase {\n         [[ A URL to a 30 second preview (MP3 format) of the episode. `null` if not available.\n         ]]\n         audio_preview_url : String\n         [[ A list of the countries in which the chapter can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.\n         ]]\n         available_markets : String[]?\n         [[ The number of the chapter\n         ]]\n         chapter_number : Int\n         [[ A description of the episode. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.\n         ]]\n         description : String\n         [[ A description of the episode. This field may contain HTML tags.\n         ]]\n         html_description : String\n         [[ The episode length in milliseconds.\n         ]]\n         duration_ms : Int\n         [[ Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown).\n         ]]\n         explicit : Boolean\n         [[ External URLs for this episode.\n         ]]\n         external_urls : AnonymousTypeChapterBaseExternal_urls\n         [[ A link to the Web API endpoint providing full details of the episode.\n         ]]\n         href : String\n         [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the episode.\n         ]]\n         id : String\n         [[ The cover art for the episode in various sizes, widest first.\n         ]]\n         images : ImageObject[]\n         [[ True if the episode is playable in the given market. Otherwise false.\n         ]]\n         is_playable : Boolean\n         [[ A list of the languages used in the episode, identified by their [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639) code.\n         ]]\n         languages : String[]\n         [[ The name of the episode.\n         ]]\n         name : String\n         [[ The date the episode was first released, for example `\"1981-12-15\"`. Depending on the precision, it might be shown as `\"1981\"` or `\"1981-12\"`.\n         ]]\n         release_date : String\n         [[ The precision with which `release_date` value is known.\n         ]]\n         release_date_precision : String\n         [[ The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.\n         ]]\n         resume_point : AnonymousTypeChapterBaseResume_point\n         [[ The object type.\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the episode.\n         ]]\n         uri : String\n         [[ Included in the response when a content restriction is applied.\n         ]]\n         restrictions : AnonymousTypeChapterBaseRestrictions?\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "e308bf",
        "fullHash": "942601a81b69e622fe84ad1ff3bbd8320c42535fbd4dec529f6baacaff8711eb"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ChapterBase",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ChapterBase",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ChapterBase",
        "parameters": [],
        "name": "ChapterBase",
        "parameterizedName": "com.spotify.ChapterBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChapterBase",
        "shortDisplayName": "ChapterBase"
      },
      "fullyQualifiedName": "com.spotify.ChapterBase",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeChapterBaseExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
        "shortDisplayName": "AnonymousTypeChapterBaseExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ External URLs for this episode.\n      ]]\n      type AnonymousTypeChapterBaseExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "1d89d0",
        "fullHash": "a4e09db6799fd49827ce875c2ce10e2a2e9ac6b351bf3d0ed8103d8c52f89169"
      }],
      "typeParameters": [],
      "typeDoc": "External URLs for this episode.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
        "parameters": [],
        "name": "AnonymousTypeChapterBaseExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
        "shortDisplayName": "AnonymousTypeChapterBaseExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseResume_point",
        "parameters": [],
        "name": "AnonymousTypeChapterBaseResume_point",
        "parameterizedName": "com.spotify.AnonymousTypeChapterBaseResume_point",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeChapterBaseResume_point",
        "shortDisplayName": "AnonymousTypeChapterBaseResume_point"
      },
      "attributes": {
        "fully_played": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the episode has been fully played by the user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "resume_position_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The user's most recent position in the episode in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ResumePointObject",
        "parameters": [],
        "name": "ResumePointObject",
        "parameterizedName": "com.spotify.ResumePointObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ResumePointObject",
        "shortDisplayName": "ResumePointObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.\n      ]]\n      type AnonymousTypeChapterBaseResume_point inherits ResumePointObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "85739a",
        "fullHash": "87bb17952e7e201ff9740288ab043a617630c0d13b7475bc06d2ab62c52391f5"
      }],
      "typeParameters": [],
      "typeDoc": "The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeChapterBaseResume_point",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeChapterBaseResume_point",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseResume_point",
        "parameters": [],
        "name": "AnonymousTypeChapterBaseResume_point",
        "parameterizedName": "com.spotify.AnonymousTypeChapterBaseResume_point",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeChapterBaseResume_point",
        "shortDisplayName": "AnonymousTypeChapterBaseResume_point"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseResume_point",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
        "parameters": [],
        "name": "AnonymousTypeChapterBaseRestrictions",
        "parameterizedName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
        "shortDisplayName": "AnonymousTypeChapterBaseRestrictions"
      },
      "attributes": {
        "reason": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The reason for the restriction. Supported values:\n     - `market` - The content item is not available in the given market.\n     - `product` - The content item is not available for the user's subscription type.\n     - `explicit` - The content item is explicit and the user's account is set to not play explicit content.\n     - `payment_required` - Payment is required to play the content item.\n     Additional reasons may be added in the future.\n     **Note**: If you use this field, make sure that your application safely handles unknown values.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ChapterRestrictionObject",
        "parameters": [],
        "name": "ChapterRestrictionObject",
        "parameterizedName": "com.spotify.ChapterRestrictionObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChapterRestrictionObject",
        "shortDisplayName": "ChapterRestrictionObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Included in the response when a content restriction is applied.\n      ]]\n      type AnonymousTypeChapterBaseRestrictions inherits ChapterRestrictionObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "1c8c2f",
        "fullHash": "327f0f6d30705ca320f9c5749bed7b9ffdfc233adaa76c26c2f076a3a0c69689"
      }],
      "typeParameters": [],
      "typeDoc": "Included in the response when a content restriction is applied.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
        "parameters": [],
        "name": "AnonymousTypeChapterBaseRestrictions",
        "parameterizedName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
        "shortDisplayName": "AnonymousTypeChapterBaseRestrictions"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.RecommendationsObject",
        "parameters": [],
        "name": "RecommendationsObject",
        "parameterizedName": "com.spotify.RecommendationsObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.RecommendationsObject",
        "shortDisplayName": "RecommendationsObject"
      },
      "attributes": {
        "seeds": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.RecommendationSeedObject",
              "parameters": [],
              "name": "RecommendationSeedObject",
              "parameterizedName": "com.spotify.RecommendationSeedObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.RecommendationSeedObject",
              "shortDisplayName": "RecommendationSeedObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.RecommendationSeedObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.RecommendationSeedObject[]",
            "shortDisplayName": "RecommendationSeedObject[]"
          },
          "modifiers": [],
          "typeDoc": "An array of recommendation seed objects.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.RecommendationSeedObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "tracks": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.TrackObject",
              "parameters": [],
              "name": "TrackObject",
              "parameterizedName": "com.spotify.TrackObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.TrackObject",
              "shortDisplayName": "TrackObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.TrackObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.TrackObject[]",
            "shortDisplayName": "TrackObject[]"
          },
          "modifiers": [],
          "typeDoc": "An array of track object (simplified) ordered according to the parameters supplied.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.TrackObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model RecommendationsObject {\n         [[ An array of recommendation seed objects.\n         ]]\n         seeds : RecommendationSeedObject[]\n         [[ An array of track object (simplified) ordered according to the parameters supplied.\n         ]]\n         tracks : TrackObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "873b22",
        "fullHash": "db7d42c3c3e025b9b63defd63385c5787cb6032e183aade68735d27dba09f8d4"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.RecommendationsObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.RecommendationsObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.RecommendationsObject",
        "parameters": [],
        "name": "RecommendationsObject",
        "parameterizedName": "com.spotify.RecommendationsObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.RecommendationsObject",
        "shortDisplayName": "RecommendationsObject"
      },
      "fullyQualifiedName": "com.spotify.RecommendationsObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.RecommendationSeedObject",
        "parameters": [],
        "name": "RecommendationSeedObject",
        "parameterizedName": "com.spotify.RecommendationSeedObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.RecommendationSeedObject",
        "shortDisplayName": "RecommendationSeedObject"
      },
      "attributes": {
        "afterFilteringSize": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of tracks available after min\\_\\* and max\\_\\* filters have been applied.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "afterRelinkingSize": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of tracks available after relinking for regional availability.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the full track or artist data for this seed. For tracks this will be a link to a Track Object. For artists a link to an Artist Object. For genre seeds, this value will be `null`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The id used to select this seed. This will be the same as the string used in the `seed_artists`, `seed_tracks` or `seed_genres` parameter.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "initialPoolSize": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of recommended tracks available for this seed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The entity type of this seed. One of `artist`, `track` or `genre`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model RecommendationSeedObject {\n         [[ The number of tracks available after min\\_\\* and max\\_\\* filters have been applied.\n         ]]\n         afterFilteringSize : Int\n         [[ The number of tracks available after relinking for regional availability.\n         ]]\n         afterRelinkingSize : Int\n         [[ A link to the full track or artist data for this seed. For tracks this will be a link to a Track Object. For artists a link to an Artist Object. For genre seeds, this value will be `null`.\n         ]]\n         href : String\n         [[ The id used to select this seed. This will be the same as the string used in the `seed_artists`, `seed_tracks` or `seed_genres` parameter.\n         ]]\n         id : String\n         [[ The number of recommended tracks available for this seed.\n         ]]\n         initialPoolSize : Int\n         [[ The entity type of this seed. One of `artist`, `track` or `genre`.\n         ]]\n         `type` : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "e1e70c",
        "fullHash": "970c443e34efea99cf1caf945fce9e44e5ad6ba8b95c191c3840b7e5a86a8e11"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.RecommendationSeedObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.RecommendationSeedObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.RecommendationSeedObject",
        "parameters": [],
        "name": "RecommendationSeedObject",
        "parameterizedName": "com.spotify.RecommendationSeedObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.RecommendationSeedObject",
        "shortDisplayName": "RecommendationSeedObject"
      },
      "fullyQualifiedName": "com.spotify.RecommendationSeedObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.TuneableTrackObject",
        "parameters": [],
        "name": "TuneableTrackObject",
        "parameterizedName": "com.spotify.TuneableTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TuneableTrackObject",
        "shortDisplayName": "TuneableTrackObject"
      },
      "attributes": {
        "acousticness": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "danceability": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The duration of the track in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "energy": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "instrumentalness": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "Predicts whether a track contains no vocals. \"Ooh\" and \"aah\" sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly \"vocal\". The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "key": {
          "type": {
            "fullyQualifiedName": "com.spotify.Key",
            "parameters": [],
            "name": "Key",
            "parameterizedName": "com.spotify.Key",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.Key",
            "shortDisplayName": "Key"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.Key",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "liveness": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "loudness": {
          "type": {
            "fullyQualifiedName": "com.spotify.Loudness",
            "parameters": [],
            "name": "Loudness",
            "parameterizedName": "com.spotify.Loudness",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.Loudness",
            "shortDisplayName": "Loudness"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.Loudness",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "mode": {
          "type": {
            "fullyQualifiedName": "com.spotify.Mode",
            "parameters": [],
            "name": "Mode",
            "parameterizedName": "com.spotify.Mode",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.Mode",
            "shortDisplayName": "Mode"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.Mode",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "popularity": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "The popularity of the track. The value will be between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are. _**Note**: When applying track relinking via the `market` parameter, it is expected to find relinked tracks with popularities that do not match `min_*`, `max_*`and `target_*` popularities. These relinked tracks are accurate replacements for unplayable tracks with the expected popularity scores. Original, non-relinked tracks are available via the `linked_from` attribute of the [relinked track response](/documentation/web-api/concepts/track-relinking)._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "speechiness": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "tempo": {
          "type": {
            "fullyQualifiedName": "com.spotify.Tempo",
            "parameters": [],
            "name": "Tempo",
            "parameterizedName": "com.spotify.Tempo",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.Tempo",
            "shortDisplayName": "Tempo"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.Tempo",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "time_signature": {
          "type": {
            "fullyQualifiedName": "com.spotify.TimeSignature",
            "parameters": [],
            "name": "TimeSignature",
            "parameterizedName": "com.spotify.TimeSignature",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.TimeSignature",
            "shortDisplayName": "TimeSignature"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.TimeSignature",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "valence": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "modifiers": [],
          "typeDoc": "A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Decimal",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model TuneableTrackObject {\n         [[ A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.\n         ]]\n         acousticness : Decimal\n         [[ Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.\n         ]]\n         danceability : Decimal\n         [[ The duration of the track in milliseconds.\n         ]]\n         duration_ms : Int\n         [[ Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.\n         ]]\n         energy : Decimal\n         [[ Predicts whether a track contains no vocals. \"Ooh\" and \"aah\" sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly \"vocal\". The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\n         ]]\n         instrumentalness : Decimal\n         key : Key\n         [[ Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.\n         ]]\n         liveness : Decimal\n         loudness : Loudness\n         mode : Mode\n         [[ The popularity of the track. The value will be between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are. _**Note**: When applying track relinking via the `market` parameter, it is expected to find relinked tracks with popularities that do not match `min_*`, `max_*`and `target_*` popularities. These relinked tracks are accurate replacements for unplayable tracks with the expected popularity scores. Original, non-relinked tracks are available via the `linked_from` attribute of the [relinked track response](/documentation/web-api/concepts/track-relinking)._\n         ]]\n         popularity : Decimal\n         [[ Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.\n         ]]\n         speechiness : Decimal\n         tempo : Tempo\n         time_signature : TimeSignature\n         [[ A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\n         ]]\n         valence : Decimal\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "38ea35",
        "fullHash": "7fc57f4215bae93eb5c282e26b0f573d61c77568b9c1f407e82ea2cd7aa93899"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.TuneableTrackObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.TuneableTrackObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.TuneableTrackObject",
        "parameters": [],
        "name": "TuneableTrackObject",
        "parameterizedName": "com.spotify.TuneableTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TuneableTrackObject",
        "shortDisplayName": "TuneableTrackObject"
      },
      "fullyQualifiedName": "com.spotify.TuneableTrackObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlaylistObject",
        "parameters": [],
        "name": "PlaylistObject",
        "parameterizedName": "com.spotify.PlaylistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistObject",
        "shortDisplayName": "PlaylistObject"
      },
      "attributes": {
        "collaborative": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "`true` if the owner allows other users to modify the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The playlist description. _Only returned for modified, verified playlists, otherwise_ `null`.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypePlaylistObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
            "shortDisplayName": "AnonymousTypePlaylistObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known external URLs for this playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "followers": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
            "parameters": [],
            "name": "AnonymousTypePlaylistObjectFollowers",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
            "shortDisplayName": "AnonymousTypePlaylistObjectFollowers"
          },
          "modifiers": [],
          "typeDoc": "Information about the followers of the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "Images for the playlist. The array may be empty or contain up to three images. The images are returned by size in descending order. See [Working with Playlists](/documentation/web-api/concepts/playlists). _**Note**: If returned, the source URL for the image (`url`) is temporary and will expire in less than a day._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "owner": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectOwner",
            "parameters": [],
            "name": "AnonymousTypePlaylistObjectOwner",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistObjectOwner",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectOwner",
            "shortDisplayName": "AnonymousTypePlaylistObjectOwner"
          },
          "modifiers": [],
          "typeDoc": "The user who owns the playlist",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistObjectOwner",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "public": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "The playlist's public/private status: `true` the playlist is public, `false` the playlist is private, `null` the playlist status is not relevant. For more about public/private status, see [Working with Playlists](/documentation/web-api/concepts/playlists)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "snapshot_id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "tracks": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectTracks",
            "parameters": [],
            "name": "AnonymousTypePlaylistObjectTracks",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistObjectTracks",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectTracks",
            "shortDisplayName": "AnonymousTypePlaylistObjectTracks"
          },
          "modifiers": [],
          "typeDoc": "The tracks of the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistObjectTracks",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type: \"playlist\"",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the playlist.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model PlaylistObject {\n         [[ `true` if the owner allows other users to modify the playlist.\n         ]]\n         collaborative : Boolean\n         [[ The playlist description. _Only returned for modified, verified playlists, otherwise_ `null`.\n         ]]\n         description : String?\n         [[ Known external URLs for this playlist.\n         ]]\n         external_urls : AnonymousTypePlaylistObjectExternal_urls\n         [[ Information about the followers of the playlist. ]]\n         followers : AnonymousTypePlaylistObjectFollowers\n         [[ A link to the Web API endpoint providing full details of the playlist.\n         ]]\n         href : String\n         [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the playlist.\n         ]]\n         id : String\n         [[ Images for the playlist. The array may be empty or contain up to three images. The images are returned by size in descending order. See [Working with Playlists](/documentation/web-api/concepts/playlists). _**Note**: If returned, the source URL for the image (`url`) is temporary and will expire in less than a day._\n         ]]\n         images : ImageObject[]\n         [[ The name of the playlist.\n         ]]\n         name : String\n         [[ The user who owns the playlist\n         ]]\n         owner : AnonymousTypePlaylistObjectOwner\n         [[ The playlist's public/private status: `true` the playlist is public, `false` the playlist is private, `null` the playlist status is not relevant. For more about public/private status, see [Working with Playlists](/documentation/web-api/concepts/playlists)\n         ]]\n         public : Boolean\n         [[ The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version\n         ]]\n         snapshot_id : String\n         [[ The tracks of the playlist.\n         ]]\n         tracks : AnonymousTypePlaylistObjectTracks\n         [[ The object type: \"playlist\"\n         ]]\n         `type` : String\n         [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the playlist.\n         ]]\n         uri : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "0c1538",
        "fullHash": "421f1f52c2fd20afcaf18315888db31caf476503641a4dbc9ca757c42d73e9e3"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.PlaylistObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.PlaylistObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlaylistObject",
        "parameters": [],
        "name": "PlaylistObject",
        "parameterizedName": "com.spotify.PlaylistObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistObject",
        "shortDisplayName": "PlaylistObject"
      },
      "fullyQualifiedName": "com.spotify.PlaylistObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypePlaylistObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
        "shortDisplayName": "AnonymousTypePlaylistObjectExternal_urls"
      },
      "attributes": {
        "spotify": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ExternalUrlObject",
        "parameters": [],
        "name": "ExternalUrlObject",
        "parameterizedName": "com.spotify.ExternalUrlObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ExternalUrlObject",
        "shortDisplayName": "ExternalUrlObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Known external URLs for this playlist.\n      ]]\n      type AnonymousTypePlaylistObjectExternal_urls inherits ExternalUrlObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "ac420d",
        "fullHash": "86c476c471a636b401540ee77779612530e55b63132f6b542bed8519c45beb8d"
      }],
      "typeParameters": [],
      "typeDoc": "Known external URLs for this playlist.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
        "parameters": [],
        "name": "AnonymousTypePlaylistObjectExternal_urls",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
        "shortDisplayName": "AnonymousTypePlaylistObjectExternal_urls"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectExternal_urls",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
        "parameters": [],
        "name": "AnonymousTypePlaylistObjectFollowers",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
        "shortDisplayName": "AnonymousTypePlaylistObjectFollowers"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "This will always be set to null, as the Web API does not support it at the moment.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of followers.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.FollowersObject",
        "parameters": [],
        "name": "FollowersObject",
        "parameterizedName": "com.spotify.FollowersObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.FollowersObject",
        "shortDisplayName": "FollowersObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ Information about the followers of the playlist. ]]\n      type AnonymousTypePlaylistObjectFollowers inherits FollowersObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "06fa74",
        "fullHash": "9dd0f558778d6a55368234f5cbc98da3c31ff45602914f9a6642ed5d1e137aa0"
      }],
      "typeParameters": [],
      "typeDoc": "Information about the followers of the playlist.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
        "parameters": [],
        "name": "AnonymousTypePlaylistObjectFollowers",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
        "shortDisplayName": "AnonymousTypePlaylistObjectFollowers"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectFollowers",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectOwner",
        "parameters": [],
        "name": "AnonymousTypePlaylistObjectOwner",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistObjectOwner",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectOwner",
        "shortDisplayName": "AnonymousTypePlaylistObjectOwner"
      },
      "attributes": {
        "display_name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name displayed on the user's profile. `null` if not available.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "parameters": [],
            "name": "AnonymousTypePlaylistUserObjectExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
            "shortDisplayName": "AnonymousTypePlaylistUserObjectExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "Known public external URLs for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "followers": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "parameters": [],
            "name": "AnonymousTypePlaylistUserObjectFollowers",
            "parameterizedName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
            "shortDisplayName": "AnonymousTypePlaylistUserObjectFollowers"
          },
          "modifiers": [],
          "typeDoc": "Information about the followers of this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypePlaylistUserObjectFollowers",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PlaylistOwnerObject",
        "parameters": [],
        "name": "PlaylistOwnerObject",
        "parameterizedName": "com.spotify.PlaylistOwnerObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistOwnerObject",
        "shortDisplayName": "PlaylistOwnerObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The user who owns the playlist\n      ]]\n      type AnonymousTypePlaylistObjectOwner inherits PlaylistOwnerObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "0afed0",
        "fullHash": "65d2111c44cf7cdd10a905b5293e0caf0c7eb06000b96db74daf2599b0f1632d"
      }],
      "typeParameters": [],
      "typeDoc": "The user who owns the playlist",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePlaylistObjectOwner",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectOwner",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectOwner",
        "parameters": [],
        "name": "AnonymousTypePlaylistObjectOwner",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistObjectOwner",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectOwner",
        "shortDisplayName": "AnonymousTypePlaylistObjectOwner"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectOwner",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectTracks",
        "parameters": [],
        "name": "AnonymousTypePlaylistObjectTracks",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistObjectTracks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectTracks",
        "shortDisplayName": "AnonymousTypePlaylistObjectTracks"
      },
      "attributes": {
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.PlaylistTrackObject",
              "parameters": [],
              "name": "PlaylistTrackObject",
              "parameterizedName": "com.spotify.PlaylistTrackObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.PlaylistTrackObject",
              "shortDisplayName": "PlaylistTrackObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.PlaylistTrackObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.PlaylistTrackObject[]",
            "shortDisplayName": "PlaylistTrackObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PlaylistTrackObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingPlaylistTrackObject",
        "parameters": [],
        "name": "PagingPlaylistTrackObject",
        "parameterizedName": "com.spotify.PagingPlaylistTrackObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingPlaylistTrackObject",
        "shortDisplayName": "PagingPlaylistTrackObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The tracks of the playlist.\n      ]]\n      type AnonymousTypePlaylistObjectTracks inherits PagingPlaylistTrackObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "29be5d",
        "fullHash": "808fc04d438b5323d6de718baf51b2c9c56e2525ff03948953736a7ea52e9827"
      }],
      "typeParameters": [],
      "typeDoc": "The tracks of the playlist.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypePlaylistObjectTracks",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectTracks",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectTracks",
        "parameters": [],
        "name": "AnonymousTypePlaylistObjectTracks",
        "parameterizedName": "com.spotify.AnonymousTypePlaylistObjectTracks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypePlaylistObjectTracks",
        "shortDisplayName": "AnonymousTypePlaylistObjectTracks"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypePlaylistObjectTracks",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.CategoryObject",
        "parameters": [],
        "name": "CategoryObject",
        "parameterizedName": "com.spotify.CategoryObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CategoryObject",
        "shortDisplayName": "CategoryObject"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning full details of the category.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "icons": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The category icon, in various sizes.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify category ID](/documentation/web-api/concepts/spotify-uris-ids) of the category.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the category.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model CategoryObject {\n         [[ A link to the Web API endpoint returning full details of the category.\n         ]]\n         href : String\n         [[ The category icon, in various sizes.\n         ]]\n         icons : ImageObject[]\n         [[ The [Spotify category ID](/documentation/web-api/concepts/spotify-uris-ids) of the category.\n         ]]\n         id : String\n         [[ The name of the category.\n         ]]\n         name : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d2fd60",
        "fullHash": "6d931bcf13649e1515d2b6a49e2a4bbfcb86d3c2e21b663b3428d4dfac9c552c"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.CategoryObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.CategoryObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.CategoryObject",
        "parameters": [],
        "name": "CategoryObject",
        "parameterizedName": "com.spotify.CategoryObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.CategoryObject",
        "shortDisplayName": "CategoryObject"
      },
      "fullyQualifiedName": "com.spotify.CategoryObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ShowObject",
        "parameters": [],
        "name": "ShowObject",
        "parameterizedName": "com.spotify.ShowObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ShowObject",
        "shortDisplayName": "ShowObject"
      },
      "attributes": {
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the show can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "copyrights": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.CopyrightObject",
              "parameters": [],
              "name": "CopyrightObject",
              "parameterizedName": "com.spotify.CopyrightObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.CopyrightObject",
              "shortDisplayName": "CopyrightObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.CopyrightObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.CopyrightObject[]",
            "shortDisplayName": "CopyrightObject[]"
          },
          "modifiers": [],
          "typeDoc": "The copyright statements of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.CopyrightObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the show. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the show. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the show has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeShowBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeShowBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeShowBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the show in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_externally_hosted": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if all of the shows episodes are hosted outside of Spotify's CDN. This field might be `null` in some cases.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the show, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "media_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The media type of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "publisher": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The publisher of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total_episodes": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of episodes in the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "episodes": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeShowObjectEpisodes",
            "parameters": [],
            "name": "AnonymousTypeShowObjectEpisodes",
            "parameterizedName": "com.spotify.AnonymousTypeShowObjectEpisodes",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeShowObjectEpisodes",
            "shortDisplayName": "AnonymousTypeShowObjectEpisodes"
          },
          "modifiers": [],
          "typeDoc": "The episodes of the show.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeShowObjectEpisodes",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ShowBase",
        "parameters": [],
        "name": "ShowBase",
        "parameterizedName": "com.spotify.ShowBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ShowBase",
        "shortDisplayName": "ShowBase"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ShowObject inherits ShowBase {\n         [[ The episodes of the show.\n         ]]\n         episodes : AnonymousTypeShowObjectEpisodes\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "340411",
        "fullHash": "5bb34057085e68076d9ace63cde5eefca215157d34a33026a380a3490ccdc16f"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ShowObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ShowObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ShowObject",
        "parameters": [],
        "name": "ShowObject",
        "parameterizedName": "com.spotify.ShowObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ShowObject",
        "shortDisplayName": "ShowObject"
      },
      "fullyQualifiedName": "com.spotify.ShowObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeShowObjectEpisodes",
        "parameters": [],
        "name": "AnonymousTypeShowObjectEpisodes",
        "parameterizedName": "com.spotify.AnonymousTypeShowObjectEpisodes",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeShowObjectEpisodes",
        "shortDisplayName": "AnonymousTypeShowObjectEpisodes"
      },
      "attributes": {
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedEpisodeObject",
              "parameters": [],
              "name": "SimplifiedEpisodeObject",
              "parameterizedName": "com.spotify.SimplifiedEpisodeObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedEpisodeObject",
              "shortDisplayName": "SimplifiedEpisodeObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedEpisodeObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedEpisodeObject[]",
            "shortDisplayName": "SimplifiedEpisodeObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedEpisodeObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingSimplifiedEpisodeObject",
        "parameters": [],
        "name": "PagingSimplifiedEpisodeObject",
        "parameterizedName": "com.spotify.PagingSimplifiedEpisodeObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedEpisodeObject",
        "shortDisplayName": "PagingSimplifiedEpisodeObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The episodes of the show.\n      ]]\n      type AnonymousTypeShowObjectEpisodes inherits PagingSimplifiedEpisodeObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "e8548b",
        "fullHash": "100b7e7653c6f9ed193fe3f6e3e266d8eb892d63e45072366a3a6ecece9b8ead"
      }],
      "typeParameters": [],
      "typeDoc": "The episodes of the show.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeShowObjectEpisodes",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeShowObjectEpisodes",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeShowObjectEpisodes",
        "parameters": [],
        "name": "AnonymousTypeShowObjectEpisodes",
        "parameterizedName": "com.spotify.AnonymousTypeShowObjectEpisodes",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeShowObjectEpisodes",
        "shortDisplayName": "AnonymousTypeShowObjectEpisodes"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeShowObjectEpisodes",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AudiobookObject",
        "parameters": [],
        "name": "AudiobookObject",
        "parameterizedName": "com.spotify.AudiobookObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudiobookObject",
        "shortDisplayName": "AudiobookObject"
      },
      "attributes": {
        "authors": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.AuthorObject",
              "parameters": [],
              "name": "AuthorObject",
              "parameterizedName": "com.spotify.AuthorObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.AuthorObject",
              "shortDisplayName": "AuthorObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.AuthorObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.AuthorObject[]",
            "shortDisplayName": "AuthorObject[]"
          },
          "modifiers": [],
          "typeDoc": "The author(s) for the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AuthorObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the audiobook can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "copyrights": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.CopyrightObject",
              "parameters": [],
              "name": "CopyrightObject",
              "parameterizedName": "com.spotify.CopyrightObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.CopyrightObject",
              "shortDisplayName": "CopyrightObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.CopyrightObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.CopyrightObject[]",
            "shortDisplayName": "CopyrightObject[]"
          },
          "modifiers": [],
          "typeDoc": "The copyright statements of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.CopyrightObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the audiobook. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the audiobook. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "edition": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The edition of the audiobook.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the audiobook has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeAudiobookBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeAudiobookBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeAudiobookBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the audiobook in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the audiobook, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "media_type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The media type of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "narrators": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.NarratorObject",
              "parameters": [],
              "name": "NarratorObject",
              "parameterizedName": "com.spotify.NarratorObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.NarratorObject",
              "shortDisplayName": "NarratorObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.NarratorObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.NarratorObject[]",
            "shortDisplayName": "NarratorObject[]"
          },
          "modifiers": [],
          "typeDoc": "The narrator(s) for the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.NarratorObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "publisher": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The publisher of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total_chapters": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of chapters in this audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "chapters": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
            "parameters": [],
            "name": "AnonymousTypeAudiobookObjectChapters",
            "parameterizedName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
            "shortDisplayName": "AnonymousTypeAudiobookObjectChapters"
          },
          "modifiers": [],
          "typeDoc": "The chapters of the audiobook.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.AudiobookBase",
        "parameters": [],
        "name": "AudiobookBase",
        "parameterizedName": "com.spotify.AudiobookBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudiobookBase",
        "shortDisplayName": "AudiobookBase"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AudiobookObject inherits AudiobookBase {\n         [[ The chapters of the audiobook.\n         ]]\n         chapters : AnonymousTypeAudiobookObjectChapters\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "028d2a",
        "fullHash": "8f92801e716cabb1beb3f8e3bdcfa469cdfc13be1d71ee9024227b36c34654f2"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AudiobookObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AudiobookObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AudiobookObject",
        "parameters": [],
        "name": "AudiobookObject",
        "parameterizedName": "com.spotify.AudiobookObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudiobookObject",
        "shortDisplayName": "AudiobookObject"
      },
      "fullyQualifiedName": "com.spotify.AudiobookObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
        "parameters": [],
        "name": "AnonymousTypeAudiobookObjectChapters",
        "parameterizedName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
        "shortDisplayName": "AnonymousTypeAudiobookObjectChapters"
      },
      "attributes": {
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedChapterObject",
              "parameters": [],
              "name": "SimplifiedChapterObject",
              "parameterizedName": "com.spotify.SimplifiedChapterObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedChapterObject",
              "shortDisplayName": "SimplifiedChapterObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedChapterObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedChapterObject[]",
            "shortDisplayName": "SimplifiedChapterObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedChapterObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingSimplifiedChapterObject",
        "parameters": [],
        "name": "PagingSimplifiedChapterObject",
        "parameterizedName": "com.spotify.PagingSimplifiedChapterObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingSimplifiedChapterObject",
        "shortDisplayName": "PagingSimplifiedChapterObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   [[ The chapters of the audiobook.\n      ]]\n      type AnonymousTypeAudiobookObjectChapters inherits PagingSimplifiedChapterObject\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "380435",
        "fullHash": "60116970803aa33ad5d3004b2fb86b9c0564945b6f639a96675fd1fd3f6e8d40"
      }],
      "typeParameters": [],
      "typeDoc": "The chapters of the audiobook.",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
        "parameters": [],
        "name": "AnonymousTypeAudiobookObjectChapters",
        "parameterizedName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
        "shortDisplayName": "AnonymousTypeAudiobookObjectChapters"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeAudiobookObjectChapters",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ChapterObject",
        "parameters": [],
        "name": "ChapterObject",
        "parameterizedName": "com.spotify.ChapterObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChapterObject",
        "shortDisplayName": "ChapterObject"
      },
      "attributes": {
        "audio_preview_url": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A URL to a 30 second preview (MP3 format) of the episode. `null` if not available.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "available_markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the countries in which the chapter can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "chapter_number": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The number of the chapter",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "html_description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A description of the episode. This field may contain HTML tags.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "duration_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The episode length in milliseconds.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "explicit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "external_urls": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
            "parameters": [],
            "name": "AnonymousTypeChapterBaseExternal_urls",
            "parameterizedName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
            "shortDisplayName": "AnonymousTypeChapterBaseExternal_urls"
          },
          "modifiers": [],
          "typeDoc": "External URLs for this episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeChapterBaseExternal_urls",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint providing full details of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "images": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          },
          "modifiers": [],
          "typeDoc": "The cover art for the episode in various sizes, widest first.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ImageObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "is_playable": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "True if the episode is playable in the given market. Otherwise false.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "languages": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A list of the languages used in the episode, identified by their [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639) code.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name of the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The date the episode was first released, for example `\"1981-12-15\"`. Depending on the precision, it might be shown as `\"1981\"` or `\"1981-12\"`.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "release_date_precision": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The precision with which `release_date` value is known.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "resume_point": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseResume_point",
            "parameters": [],
            "name": "AnonymousTypeChapterBaseResume_point",
            "parameterizedName": "com.spotify.AnonymousTypeChapterBaseResume_point",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChapterBaseResume_point",
            "shortDisplayName": "AnonymousTypeChapterBaseResume_point"
          },
          "modifiers": [],
          "typeDoc": "The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeChapterBaseResume_point",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "type": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The object type.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the episode.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "restrictions": {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
            "parameters": [],
            "name": "AnonymousTypeChapterBaseRestrictions",
            "parameterizedName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
            "shortDisplayName": "AnonymousTypeChapterBaseRestrictions"
          },
          "modifiers": [],
          "typeDoc": "Included in the response when a content restriction is applied.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "com.spotify.AnonymousTypeChapterBaseRestrictions",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "audiobook": {
          "type": {
            "fullyQualifiedName": "com.spotify.SimplifiedAudiobookObject",
            "parameters": [],
            "name": "SimplifiedAudiobookObject",
            "parameterizedName": "com.spotify.SimplifiedAudiobookObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.SimplifiedAudiobookObject",
            "shortDisplayName": "SimplifiedAudiobookObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedAudiobookObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.ChapterBase",
        "parameters": [],
        "name": "ChapterBase",
        "parameterizedName": "com.spotify.ChapterBase",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChapterBase",
        "shortDisplayName": "ChapterBase"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model ChapterObject inherits ChapterBase {\n         audiobook : SimplifiedAudiobookObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "46e4ab",
        "fullHash": "88811aa9b5ba5ace235ec36254eaa2be4b205be73cae21c7bb3ee38245aac748"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.ChapterObject",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.ChapterObject",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ChapterObject",
        "parameters": [],
        "name": "ChapterObject",
        "parameterizedName": "com.spotify.ChapterObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChapterObject",
        "shortDisplayName": "ChapterObject"
      },
      "fullyQualifiedName": "com.spotify.ChapterObject",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_albums",
        "parameters": [],
        "name": "AnonymousTypeGet_multiple_albums",
        "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_albums",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_albums",
        "shortDisplayName": "AnonymousTypeGet_multiple_albums"
      },
      "attributes": {
        "albums": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.AlbumObject",
              "parameters": [],
              "name": "AlbumObject",
              "parameterizedName": "com.spotify.AlbumObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.AlbumObject",
              "shortDisplayName": "AlbumObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.AlbumObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.AlbumObject[]",
            "shortDisplayName": "AlbumObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AlbumObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_multiple_albums {\n         albums : AlbumObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "1ddfb4",
        "fullHash": "1f3b554fd57058ac14d0665ce4e0a42947dd637a1609c942dc5615bf769238c4"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_multiple_albums",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_albums",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_albums",
        "parameters": [],
        "name": "AnonymousTypeGet_multiple_albums",
        "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_albums",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_albums",
        "shortDisplayName": "AnonymousTypeGet_multiple_albums"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_albums",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_artists",
        "parameters": [],
        "name": "AnonymousTypeGet_multiple_artists",
        "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_artists",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_artists",
        "shortDisplayName": "AnonymousTypeGet_multiple_artists"
      },
      "attributes": {
        "artists": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ArtistObject",
              "parameters": [],
              "name": "ArtistObject",
              "parameterizedName": "com.spotify.ArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ArtistObject",
              "shortDisplayName": "ArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ArtistObject[]",
            "shortDisplayName": "ArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_multiple_artists {\n         artists : ArtistObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "15c837",
        "fullHash": "6e2939c606682d2903db8bf14f6554180229158fce8c8e9442b76425c168ca4a"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_multiple_artists",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_artists",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_artists",
        "parameters": [],
        "name": "AnonymousTypeGet_multiple_artists",
        "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_artists",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_artists",
        "shortDisplayName": "AnonymousTypeGet_multiple_artists"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_artists",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
        "parameters": [],
        "name": "AnonymousTypeGet_an_artists_top_tracks",
        "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
        "shortDisplayName": "AnonymousTypeGet_an_artists_top_tracks"
      },
      "attributes": {
        "tracks": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.TrackObject",
              "parameters": [],
              "name": "TrackObject",
              "parameterizedName": "com.spotify.TrackObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.TrackObject",
              "shortDisplayName": "TrackObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.TrackObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.TrackObject[]",
            "shortDisplayName": "TrackObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.TrackObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_an_artists_top_tracks {\n         tracks : TrackObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "6b5c5a",
        "fullHash": "e86d6764db78670afe24caf8c34482a8def6144c2980ce2193639a712fbce65b"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
        "parameters": [],
        "name": "AnonymousTypeGet_an_artists_top_tracks",
        "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
        "shortDisplayName": "AnonymousTypeGet_an_artists_top_tracks"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
        "parameters": [],
        "name": "AnonymousTypeGet_an_artists_related_artists",
        "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
        "shortDisplayName": "AnonymousTypeGet_an_artists_related_artists"
      },
      "attributes": {
        "artists": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ArtistObject",
              "parameters": [],
              "name": "ArtistObject",
              "parameterizedName": "com.spotify.ArtistObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ArtistObject",
              "shortDisplayName": "ArtistObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ArtistObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ArtistObject[]",
            "shortDisplayName": "ArtistObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ArtistObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_an_artists_related_artists {\n         artists : ArtistObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "67cab0",
        "fullHash": "086e5beab26d4f5e05f114fd6dc5dacace776ade4797360c9f7d2f96794dd35c"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
        "parameters": [],
        "name": "AnonymousTypeGet_an_artists_related_artists",
        "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
        "shortDisplayName": "AnonymousTypeGet_an_artists_related_artists"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_shows",
        "parameters": [],
        "name": "AnonymousTypeGet_multiple_shows",
        "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_shows",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_shows",
        "shortDisplayName": "AnonymousTypeGet_multiple_shows"
      },
      "attributes": {
        "shows": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.SimplifiedShowObject",
              "parameters": [],
              "name": "SimplifiedShowObject",
              "parameterizedName": "com.spotify.SimplifiedShowObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.SimplifiedShowObject",
              "shortDisplayName": "SimplifiedShowObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.SimplifiedShowObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.SimplifiedShowObject[]",
            "shortDisplayName": "SimplifiedShowObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.SimplifiedShowObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_multiple_shows {\n         shows : SimplifiedShowObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5a1500",
        "fullHash": "0bbc332f28cefbaf23731132edb13ad235d3804aef7613ef15e6731244437f79"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_multiple_shows",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_shows",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_shows",
        "parameters": [],
        "name": "AnonymousTypeGet_multiple_shows",
        "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_shows",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_shows",
        "shortDisplayName": "AnonymousTypeGet_multiple_shows"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_shows",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
        "parameters": [],
        "name": "AnonymousTypeGet_multiple_episodes",
        "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_episodes",
        "shortDisplayName": "AnonymousTypeGet_multiple_episodes"
      },
      "attributes": {
        "episodes": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.EpisodeObject",
              "parameters": [],
              "name": "EpisodeObject",
              "parameterizedName": "com.spotify.EpisodeObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.EpisodeObject",
              "shortDisplayName": "EpisodeObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.EpisodeObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.EpisodeObject[]",
            "shortDisplayName": "EpisodeObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.EpisodeObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_multiple_episodes {\n         episodes : EpisodeObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "22573b",
        "fullHash": "320f5c1a043bb0f0227f0ca5237df8f1b0eb538fc0f3bcc9f742d7efd6b1eac6"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_episodes",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
        "parameters": [],
        "name": "AnonymousTypeGet_multiple_episodes",
        "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_episodes",
        "shortDisplayName": "AnonymousTypeGet_multiple_episodes"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
        "parameters": [],
        "name": "AnonymousTypeGet_multiple_audiobooks",
        "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
        "shortDisplayName": "AnonymousTypeGet_multiple_audiobooks"
      },
      "attributes": {
        "audiobooks": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.AudiobookObject",
              "parameters": [],
              "name": "AudiobookObject",
              "parameterizedName": "com.spotify.AudiobookObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.AudiobookObject",
              "shortDisplayName": "AudiobookObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.AudiobookObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.AudiobookObject[]",
            "shortDisplayName": "AudiobookObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AudiobookObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_multiple_audiobooks {\n         audiobooks : AudiobookObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5306fb",
        "fullHash": "c519178df9b703887feea126600b126018612aefdc0a76603ff69f2dffc1b07a"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
        "parameters": [],
        "name": "AnonymousTypeGet_multiple_audiobooks",
        "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
        "shortDisplayName": "AnonymousTypeGet_multiple_audiobooks"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_chapters",
        "parameters": [],
        "name": "AnonymousTypeGet_several_chapters",
        "parameterizedName": "com.spotify.AnonymousTypeGet_several_chapters",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_several_chapters",
        "shortDisplayName": "AnonymousTypeGet_several_chapters"
      },
      "attributes": {
        "chapters": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ChapterObject",
              "parameters": [],
              "name": "ChapterObject",
              "parameterizedName": "com.spotify.ChapterObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ChapterObject",
              "shortDisplayName": "ChapterObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ChapterObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ChapterObject[]",
            "shortDisplayName": "ChapterObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.ChapterObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_several_chapters {\n         chapters : ChapterObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "3fe757",
        "fullHash": "0699cc1ff7049ce8c81d9512a98e57100fff8322e26c4217e1a529fa3a329b74"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_several_chapters",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_several_chapters",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_chapters",
        "parameters": [],
        "name": "AnonymousTypeGet_several_chapters",
        "parameterizedName": "com.spotify.AnonymousTypeGet_several_chapters",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_several_chapters",
        "shortDisplayName": "AnonymousTypeGet_several_chapters"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_chapters",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_tracks",
        "parameters": [],
        "name": "AnonymousTypeGet_several_tracks",
        "parameterizedName": "com.spotify.AnonymousTypeGet_several_tracks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_several_tracks",
        "shortDisplayName": "AnonymousTypeGet_several_tracks"
      },
      "attributes": {
        "tracks": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.TrackObject",
              "parameters": [],
              "name": "TrackObject",
              "parameterizedName": "com.spotify.TrackObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.TrackObject",
              "shortDisplayName": "TrackObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.TrackObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.TrackObject[]",
            "shortDisplayName": "TrackObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.TrackObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_several_tracks {\n         tracks : TrackObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "6b51af",
        "fullHash": "2c5b8289cd240aba1036d7ed093ac1017b8d4e84dcfbf50a65cc6100b8e06aaf"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_several_tracks",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_several_tracks",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_tracks",
        "parameters": [],
        "name": "AnonymousTypeGet_several_tracks",
        "parameterizedName": "com.spotify.AnonymousTypeGet_several_tracks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_several_tracks",
        "shortDisplayName": "AnonymousTypeGet_several_tracks"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_tracks",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSearch",
        "parameters": [],
        "name": "AnonymousTypeSearch",
        "parameterizedName": "com.spotify.AnonymousTypeSearch",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSearch",
        "shortDisplayName": "AnonymousTypeSearch"
      },
      "attributes": {
        "tracks": {
          "type": {
            "fullyQualifiedName": "com.spotify.PagingTrackObject",
            "parameters": [],
            "name": "PagingTrackObject",
            "parameterizedName": "com.spotify.PagingTrackObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingTrackObject",
            "shortDisplayName": "PagingTrackObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PagingTrackObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "artists": {
          "type": {
            "fullyQualifiedName": "com.spotify.PagingArtistObject",
            "parameters": [],
            "name": "PagingArtistObject",
            "parameterizedName": "com.spotify.PagingArtistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingArtistObject",
            "shortDisplayName": "PagingArtistObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PagingArtistObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "albums": {
          "type": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedAlbumObject",
            "parameters": [],
            "name": "PagingSimplifiedAlbumObject",
            "parameterizedName": "com.spotify.PagingSimplifiedAlbumObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
            "shortDisplayName": "PagingSimplifiedAlbumObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "playlists": {
          "type": {
            "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
            "parameters": [],
            "name": "PagingPlaylistObject",
            "parameterizedName": "com.spotify.PagingPlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingPlaylistObject",
            "shortDisplayName": "PagingPlaylistObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PagingPlaylistObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "shows": {
          "type": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedShowObject",
            "parameters": [],
            "name": "PagingSimplifiedShowObject",
            "parameterizedName": "com.spotify.PagingSimplifiedShowObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedShowObject",
            "shortDisplayName": "PagingSimplifiedShowObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PagingSimplifiedShowObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "episodes": {
          "type": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedEpisodeObject",
            "parameters": [],
            "name": "PagingSimplifiedEpisodeObject",
            "parameterizedName": "com.spotify.PagingSimplifiedEpisodeObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedEpisodeObject",
            "shortDisplayName": "PagingSimplifiedEpisodeObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PagingSimplifiedEpisodeObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "audiobooks": {
          "type": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedAudiobookObject",
            "parameters": [],
            "name": "PagingSimplifiedAudiobookObject",
            "parameterizedName": "com.spotify.PagingSimplifiedAudiobookObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedAudiobookObject",
            "shortDisplayName": "PagingSimplifiedAudiobookObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PagingSimplifiedAudiobookObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeSearch {\n         tracks : PagingTrackObject\n         artists : PagingArtistObject\n         albums : PagingSimplifiedAlbumObject\n         playlists : PagingPlaylistObject\n         shows : PagingSimplifiedShowObject\n         episodes : PagingSimplifiedEpisodeObject\n         audiobooks : PagingSimplifiedAudiobookObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "88b629",
        "fullHash": "e045e78463587fcf729e77cf6fbb4420b72b9504addcfc8937f4795e24bb0dde"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSearch",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSearch",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSearch",
        "parameters": [],
        "name": "AnonymousTypeSearch",
        "parameterizedName": "com.spotify.AnonymousTypeSearch",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSearch",
        "shortDisplayName": "AnonymousTypeSearch"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSearch",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
        "parameters": [],
        "name": "AnonymousTypeChange_playlist_detailsBody",
        "parameterizedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
        "shortDisplayName": "AnonymousTypeChange_playlist_detailsBody"
      },
      "attributes": {
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The new name for the playlist, for example `\"My New Playlist Title\"`",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "public": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "If `true` the playlist will be public, if `false` it will be private.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "collaborative": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "If `true`, the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client. <br/>\n     _**Note**: You can only set `collaborative` to `true` on non-public playlists._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "Value for playlist description as displayed in Spotify Clients and in the Web API.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeChange_playlist_detailsBody {\n         [[ The new name for the playlist, for example `\"My New Playlist Title\"`\n         ]]\n         name : String\n         [[ If `true` the playlist will be public, if `false` it will be private.\n         ]]\n         public : Boolean\n         [[ If `true`, the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client. <br/>\n         _**Note**: You can only set `collaborative` to `true` on non-public playlists._\n         ]]\n         collaborative : Boolean\n         [[ Value for playlist description as displayed in Spotify Clients and in the Web API.\n         ]]\n         description : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d8962c",
        "fullHash": "e6830071438381769389b354ef8d6ef54fb5bc2566aa04abdeb29c4f2c308b42"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
        "parameters": [],
        "name": "AnonymousTypeChange_playlist_detailsBody",
        "parameterizedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
        "shortDisplayName": "AnonymousTypeChange_playlist_detailsBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
        "parameters": [],
        "name": "AnonymousTypeReorder_or_replace_playlists_tracksBody",
        "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
        "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracksBody"
      },
      "attributes": {
        "uris": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "range_start": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The position of the first item to be reordered.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "insert_before": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The position where the items should be inserted.<br/>To reorder the items to the end of the playlist, simply set _insert_before_ to the position after the last item.<br/>Examples:<br/>To reorder the first item to the last position in a playlist with 10 items, set _range_start_ to 0, and _insert_before_ to 10.<br/>To reorder the last item in a playlist with 10 items to the start of the playlist, set _range_start_ to 9, and _insert_before_ to 0.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "range_length": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The amount of items to be reordered. Defaults to 1 if not set.<br/>The range of items to be reordered begins from the _range_start_ position, and includes the _range_length_ subsequent items.<br/>Example:<br/>To move the items at index 9-10 to the start of the playlist, _range_start_ is set to 9, and _range_length_ is set to 2.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "snapshot_id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The playlist's snapshot ID against which you want to make the changes.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeReorder_or_replace_playlists_tracksBody {\n         uris : String[]\n         [[ The position of the first item to be reordered.\n         ]]\n         range_start : Int\n         [[ The position where the items should be inserted.<br/>To reorder the items to the end of the playlist, simply set _insert_before_ to the position after the last item.<br/>Examples:<br/>To reorder the first item to the last position in a playlist with 10 items, set _range_start_ to 0, and _insert_before_ to 10.<br/>To reorder the last item in a playlist with 10 items to the start of the playlist, set _range_start_ to 9, and _insert_before_ to 0.\n         ]]\n         insert_before : Int\n         [[ The amount of items to be reordered. Defaults to 1 if not set.<br/>The range of items to be reordered begins from the _range_start_ position, and includes the _range_length_ subsequent items.<br/>Example:<br/>To move the items at index 9-10 to the start of the playlist, _range_start_ is set to 9, and _range_length_ is set to 2.\n         ]]\n         range_length : Int\n         [[ The playlist's snapshot ID against which you want to make the changes.\n         ]]\n         snapshot_id : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "eb350f",
        "fullHash": "a98ead46e5b8f051458b70c4d83dc80550c84b1a507a0e188123acc2d7e902cf"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
        "parameters": [],
        "name": "AnonymousTypeReorder_or_replace_playlists_tracksBody",
        "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
        "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracksBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
        "parameters": [],
        "name": "AnonymousTypeReorder_or_replace_playlists_tracks",
        "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
        "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracks"
      },
      "attributes": {
        "snapshot_id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeReorder_or_replace_playlists_tracks {\n         snapshot_id : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "8e79a4",
        "fullHash": "d71064a61fc71d15f7d2f2a6a01d2605279fa635d85597ac9106c99a059028a7"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
        "parameters": [],
        "name": "AnonymousTypeReorder_or_replace_playlists_tracks",
        "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
        "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracks"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
        "parameters": [],
        "name": "AnonymousTypeAdd_tracks_to_playlistBody",
        "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
        "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlistBody"
      },
      "attributes": {
        "uris": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A JSON array of the [Spotify URIs](/documentation/web-api/concepts/spotify-uris-ids) to add. For example: `{\"uris\": [\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\",\"spotify:track:1301WleyT98MSxVHPZCA6M\", \"spotify:episode:512ojhOuo1ktJprKbVcKyQ\"]}`<br/>A maximum of 100 items can be added in one request. _**Note**: if the `uris` parameter is present in the query string, any URIs listed here in the body will be ignored._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "position": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The position to insert the items, a zero-based index. For example, to insert the items in the first position: `position=0` ; to insert the items in the third position: `position=2`. If omitted, the items will be appended to the playlist. Items are added in the order they appear in the uris array. For example: `{\"uris\": [\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\",\"spotify:track:1301WleyT98MSxVHPZCA6M\"], \"position\": 3}`",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeAdd_tracks_to_playlistBody {\n         [[ A JSON array of the [Spotify URIs](/documentation/web-api/concepts/spotify-uris-ids) to add. For example: `{\"uris\": [\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\",\"spotify:track:1301WleyT98MSxVHPZCA6M\", \"spotify:episode:512ojhOuo1ktJprKbVcKyQ\"]}`<br/>A maximum of 100 items can be added in one request. _**Note**: if the `uris` parameter is present in the query string, any URIs listed here in the body will be ignored._\n         ]]\n         uris : String[]\n         [[ The position to insert the items, a zero-based index. For example, to insert the items in the first position: `position=0` ; to insert the items in the third position: `position=2`. If omitted, the items will be appended to the playlist. Items are added in the order they appear in the uris array. For example: `{\"uris\": [\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\",\"spotify:track:1301WleyT98MSxVHPZCA6M\"], \"position\": 3}`\n         ]]\n         position : Int\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "aa4f73",
        "fullHash": "0cfb9d6746efa2c142093f42c4b575597963f2a2d294ca00f5149db992facf5f"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
        "parameters": [],
        "name": "AnonymousTypeAdd_tracks_to_playlistBody",
        "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
        "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlistBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
        "parameters": [],
        "name": "AnonymousTypeAdd_tracks_to_playlist",
        "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
        "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlist"
      },
      "attributes": {
        "snapshot_id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeAdd_tracks_to_playlist {\n         snapshot_id : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "9fd689",
        "fullHash": "21bcab103c519835860a56c84b6ed33b9d1cea305205831d0c8e1c93a7cafb32"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
        "parameters": [],
        "name": "AnonymousTypeAdd_tracks_to_playlist",
        "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
        "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlist"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
        "parameters": [],
        "name": "AnonymousTypeRemove_tracks_playlistBody",
        "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
        "shortDisplayName": "AnonymousTypeRemove_tracks_playlistBody"
      },
      "attributes": {
        "tracks": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement",
              "parameters": [],
              "name": "AnonymousTypeRemove_tracks_playlistBodyTracksElement",
              "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement",
              "shortDisplayName": "AnonymousTypeRemove_tracks_playlistBodyTracksElement"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement[]",
            "shortDisplayName": "AnonymousTypeRemove_tracks_playlistBodyTracksElement[]"
          },
          "modifiers": [],
          "typeDoc": "An array of objects containing [Spotify URIs](/documentation/web-api/concepts/spotify-uris-ids) of the tracks or episodes to remove.\n     For example: `{ \"tracks\": [{ \"uri\": \"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\" },{ \"uri\": \"spotify:track:1301WleyT98MSxVHPZCA6M\" }] }`. A maximum of 100 objects can be sent at once.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "snapshot_id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The playlist's snapshot ID against which you want to make the changes.\n     The API will validate that the specified items exist and in the specified positions and make the changes,\n     even if more recent changes have been made to the playlist.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeRemove_tracks_playlistBody {\n         [[ An array of objects containing [Spotify URIs](/documentation/web-api/concepts/spotify-uris-ids) of the tracks or episodes to remove.\n         For example: `{ \"tracks\": [{ \"uri\": \"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\" },{ \"uri\": \"spotify:track:1301WleyT98MSxVHPZCA6M\" }] }`. A maximum of 100 objects can be sent at once.\n         ]]\n         tracks : AnonymousTypeRemove_tracks_playlistBodyTracksElement[]\n         [[ The playlist's snapshot ID against which you want to make the changes.\n         The API will validate that the specified items exist and in the specified positions and make the changes,\n         even if more recent changes have been made to the playlist.\n         ]]\n         snapshot_id : String?\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "62a376",
        "fullHash": "2fa2f1fb621ba42f26c68b01b95c5cb9991c4d0de69ec67f7c90a578936b3511"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
        "parameters": [],
        "name": "AnonymousTypeRemove_tracks_playlistBody",
        "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
        "shortDisplayName": "AnonymousTypeRemove_tracks_playlistBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement",
        "parameters": [],
        "name": "AnonymousTypeRemove_tracks_playlistBodyTracksElement",
        "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement",
        "shortDisplayName": "AnonymousTypeRemove_tracks_playlistBodyTracksElement"
      },
      "attributes": {
        "uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "Spotify URI",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeRemove_tracks_playlistBodyTracksElement {\n         [[ Spotify URI ]]\n         uri : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "030f18",
        "fullHash": "b49b09ae738908b2c4c6144cb204da2e7d9a9c42b2daf9e754db073d4d0a0f47"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement",
        "parameters": [],
        "name": "AnonymousTypeRemove_tracks_playlistBodyTracksElement",
        "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement",
        "shortDisplayName": "AnonymousTypeRemove_tracks_playlistBodyTracksElement"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBodyTracksElement",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
        "parameters": [],
        "name": "AnonymousTypeRemove_tracks_playlist",
        "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
        "shortDisplayName": "AnonymousTypeRemove_tracks_playlist"
      },
      "attributes": {
        "snapshot_id": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeRemove_tracks_playlist {\n         snapshot_id : String\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "53cb5f",
        "fullHash": "a96587930bc5542edb247933064482210ec36fca78c63706afe0a8262777ba1b"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
        "parameters": [],
        "name": "AnonymousTypeRemove_tracks_playlist",
        "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
        "shortDisplayName": "AnonymousTypeRemove_tracks_playlist"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSave_albums_userBody",
        "parameters": [],
        "name": "AnonymousTypeSave_albums_userBody",
        "parameterizedName": "com.spotify.AnonymousTypeSave_albums_userBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSave_albums_userBody",
        "shortDisplayName": "AnonymousTypeSave_albums_userBody"
      },
      "attributes": {
        "ids": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: `[\"4iV5W9uYEdYUVa79Axb7Rh\", \"1301WleyT98MSxVHPZCA6M\"]`<br/>A maximum of 50 items can be specified in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeSave_albums_userBody {\n         [[ A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: `[\"4iV5W9uYEdYUVa79Axb7Rh\", \"1301WleyT98MSxVHPZCA6M\"]`<br/>A maximum of 50 items can be specified in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._\n         ]]\n         ids : String[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "c646c2",
        "fullHash": "6d6a69e6fe381da5ab6642630abddf7112311edfdf5f8d16f6c60682e70cf266"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSave_albums_userBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSave_albums_userBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSave_albums_userBody",
        "parameters": [],
        "name": "AnonymousTypeSave_albums_userBody",
        "parameterizedName": "com.spotify.AnonymousTypeSave_albums_userBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSave_albums_userBody",
        "shortDisplayName": "AnonymousTypeSave_albums_userBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSave_albums_userBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
        "parameters": [],
        "name": "AnonymousTypeRemove_albums_userBody",
        "parameterizedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeRemove_albums_userBody",
        "shortDisplayName": "AnonymousTypeRemove_albums_userBody"
      },
      "attributes": {
        "ids": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: `[\"4iV5W9uYEdYUVa79Axb7Rh\", \"1301WleyT98MSxVHPZCA6M\"]`<br/>A maximum of 50 items can be specified in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeRemove_albums_userBody {\n         [[ A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: `[\"4iV5W9uYEdYUVa79Axb7Rh\", \"1301WleyT98MSxVHPZCA6M\"]`<br/>A maximum of 50 items can be specified in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._\n         ]]\n         ids : String[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "f0a16c",
        "fullHash": "c8f4485a757b592e1a4a0d1527f05edb4532b9fb3363256f0f5db5c668095868"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeRemove_albums_userBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
        "parameters": [],
        "name": "AnonymousTypeRemove_albums_userBody",
        "parameterizedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeRemove_albums_userBody",
        "shortDisplayName": "AnonymousTypeRemove_albums_userBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
        "parameters": [],
        "name": "AnonymousTypeSave_tracks_userBody",
        "parameterizedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSave_tracks_userBody",
        "shortDisplayName": "AnonymousTypeSave_tracks_userBody"
      },
      "attributes": {
        "ids": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: `[\"4iV5W9uYEdYUVa79Axb7Rh\", \"1301WleyT98MSxVHPZCA6M\"]`<br/>A maximum of 50 items can be specified in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeSave_tracks_userBody {\n         [[ A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: `[\"4iV5W9uYEdYUVa79Axb7Rh\", \"1301WleyT98MSxVHPZCA6M\"]`<br/>A maximum of 50 items can be specified in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._\n         ]]\n         ids : String[]?\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "40a877",
        "fullHash": "ce1a077d655ee25917ce966c1c3eaad7252284f624864d0854ab1b29262d7d1b"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSave_tracks_userBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
        "parameters": [],
        "name": "AnonymousTypeSave_tracks_userBody",
        "parameterizedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSave_tracks_userBody",
        "shortDisplayName": "AnonymousTypeSave_tracks_userBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
        "parameters": [],
        "name": "AnonymousTypeRemove_tracks_userBody",
        "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
        "shortDisplayName": "AnonymousTypeRemove_tracks_userBody"
      },
      "attributes": {
        "ids": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: `[\"4iV5W9uYEdYUVa79Axb7Rh\", \"1301WleyT98MSxVHPZCA6M\"]`<br/>A maximum of 50 items can be specified in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeRemove_tracks_userBody {\n         [[ A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: `[\"4iV5W9uYEdYUVa79Axb7Rh\", \"1301WleyT98MSxVHPZCA6M\"]`<br/>A maximum of 50 items can be specified in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._\n         ]]\n         ids : String[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "069bc0",
        "fullHash": "7db59a1b052f12f5feda5e41cbf5e6feb9c792f45c0b2ae19c92ac3cef34a0aa"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
        "parameters": [],
        "name": "AnonymousTypeRemove_tracks_userBody",
        "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
        "shortDisplayName": "AnonymousTypeRemove_tracks_userBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
        "parameters": [],
        "name": "AnonymousTypeSave_episodes_userBody",
        "parameterizedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSave_episodes_userBody",
        "shortDisplayName": "AnonymousTypeSave_episodes_userBody"
      },
      "attributes": {
        "ids": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). <br/>A maximum of 50 items can be specified in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeSave_episodes_userBody {\n         [[ A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). <br/>A maximum of 50 items can be specified in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._\n         ]]\n         ids : String[]?\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "f77519",
        "fullHash": "9b1c68821f7294fd01954124efa716ae8f3e807cf601084ad62068fcd1450b99"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeSave_episodes_userBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
        "parameters": [],
        "name": "AnonymousTypeSave_episodes_userBody",
        "parameterizedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeSave_episodes_userBody",
        "shortDisplayName": "AnonymousTypeSave_episodes_userBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
        "parameters": [],
        "name": "AnonymousTypeRemove_episodes_userBody",
        "parameterizedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
        "shortDisplayName": "AnonymousTypeRemove_episodes_userBody"
      },
      "attributes": {
        "ids": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). <br/>A maximum of 50 items can be specified in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeRemove_episodes_userBody {\n         [[ A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). <br/>A maximum of 50 items can be specified in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._\n         ]]\n         ids : String[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "901623",
        "fullHash": "1c15caa55094272952e62978a26dddd9d325e603e2a6ded3ecc86edfdac8dfc7"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
        "parameters": [],
        "name": "AnonymousTypeRemove_episodes_userBody",
        "parameterizedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
        "shortDisplayName": "AnonymousTypeRemove_episodes_userBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
        "parameters": [],
        "name": "AnonymousTypeGet_users_top_artists_and_tracks",
        "parameterizedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
        "shortDisplayName": "AnonymousTypeGet_users_top_artists_and_tracks"
      },
      "attributes": {
        "href": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "A link to the Web API endpoint returning the full result of the request",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "limit": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The maximum number of items in the response (as set in the query or by default).",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "next": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the next page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The offset of the items returned (as set in the query or by default)",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "previous": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "URL to the previous page of items. ( `null` if none)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "total": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "modifiers": [],
          "typeDoc": "The total number of items available to return.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Int",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "items": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Any",
              "parameters": [],
              "name": "Any",
              "parameterizedName": "lang.taxi.Any",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Any",
              "shortDisplayName": "Any"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Any>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any[]",
            "shortDisplayName": "Any[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Any[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "com.spotify.PagingObject",
        "parameters": [],
        "name": "PagingObject",
        "parameterizedName": "com.spotify.PagingObject",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PagingObject",
        "shortDisplayName": "PagingObject"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_users_top_artists_and_tracks inherits PagingObject {\n         items : Any[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "480e01",
        "fullHash": "60a510fea9a0b08a777cfde6243367512cf6c5f24d9def2556c0de73799d7dac"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
        "parameters": [],
        "name": "AnonymousTypeGet_users_top_artists_and_tracks",
        "parameterizedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
        "shortDisplayName": "AnonymousTypeGet_users_top_artists_and_tracks"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeCreate_playlistBody",
        "parameters": [],
        "name": "AnonymousTypeCreate_playlistBody",
        "parameterizedName": "com.spotify.AnonymousTypeCreate_playlistBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeCreate_playlistBody",
        "shortDisplayName": "AnonymousTypeCreate_playlistBody"
      },
      "attributes": {
        "name": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "The name for the new playlist, for example `\"Your Coolest Playlist\"`. This name does not need to be unique; a user may have several playlists with the same name.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "public": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Defaults to `true`. If `true` the playlist will be public, if `false` it will be private. To be able to create private playlists, the user must have granted the `playlist-modify-private` [scope](/documentation/web-api/concepts/scopes/#list-of-scopes)",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "collaborative": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Defaults to `false`. If `true` the playlist will be collaborative. _**Note**: to create a collaborative playlist you must also set `public` to `false`. To create collaborative playlists you must have granted `playlist-modify-private` and `playlist-modify-public` [scopes](/documentation/web-api/concepts/scopes/#list-of-scopes)._",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "description": {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "modifiers": [],
          "typeDoc": "value for playlist description as displayed in Spotify Clients and in the Web API.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.String",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeCreate_playlistBody {\n         [[ The name for the new playlist, for example `\"Your Coolest Playlist\"`. This name does not need to be unique; a user may have several playlists with the same name.\n         ]]\n         name : String\n         [[ Defaults to `true`. If `true` the playlist will be public, if `false` it will be private. To be able to create private playlists, the user must have granted the `playlist-modify-private` [scope](/documentation/web-api/concepts/scopes/#list-of-scopes)\n         ]]\n         public : Boolean?\n         [[ Defaults to `false`. If `true` the playlist will be collaborative. _**Note**: to create a collaborative playlist you must also set `public` to `false`. To create collaborative playlists you must have granted `playlist-modify-private` and `playlist-modify-public` [scopes](/documentation/web-api/concepts/scopes/#list-of-scopes)._\n         ]]\n         collaborative : Boolean?\n         [[ value for playlist description as displayed in Spotify Clients and in the Web API.\n         ]]\n         description : String?\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "ea8061",
        "fullHash": "eba69ade05b8244e3f9cde39331e749b9d9f49bdc2ae96e291561a59292fbca0"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeCreate_playlistBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeCreate_playlistBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeCreate_playlistBody",
        "parameters": [],
        "name": "AnonymousTypeCreate_playlistBody",
        "parameterizedName": "com.spotify.AnonymousTypeCreate_playlistBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeCreate_playlistBody",
        "shortDisplayName": "AnonymousTypeCreate_playlistBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeCreate_playlistBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_playlistBody",
        "parameters": [],
        "name": "AnonymousTypeFollow_playlistBody",
        "parameterizedName": "com.spotify.AnonymousTypeFollow_playlistBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeFollow_playlistBody",
        "shortDisplayName": "AnonymousTypeFollow_playlistBody"
      },
      "attributes": {
        "public": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "modifiers": [],
          "typeDoc": "Defaults to `true`. If `true` the playlist will be included in user's public playlists, if `false` it will remain private.",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Boolean",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeFollow_playlistBody {\n         [[ Defaults to `true`. If `true` the playlist will be included in user's public playlists, if `false` it will remain private.\n         ]]\n         public : Boolean\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "83a139",
        "fullHash": "8e818537314ddb83601ac7b6edc50b3e393842a97c8f20d013016c31e16d4c45"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeFollow_playlistBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeFollow_playlistBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_playlistBody",
        "parameters": [],
        "name": "AnonymousTypeFollow_playlistBody",
        "parameterizedName": "com.spotify.AnonymousTypeFollow_playlistBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeFollow_playlistBody",
        "shortDisplayName": "AnonymousTypeFollow_playlistBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_playlistBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_categories",
        "parameters": [],
        "name": "AnonymousTypeGet_categories",
        "parameterizedName": "com.spotify.AnonymousTypeGet_categories",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_categories",
        "shortDisplayName": "AnonymousTypeGet_categories"
      },
      "attributes": {
        "categories": {
          "type": {
            "fullyQualifiedName": "com.spotify.PagingObject",
            "parameters": [],
            "name": "PagingObject",
            "parameterizedName": "com.spotify.PagingObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingObject",
            "shortDisplayName": "PagingObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PagingObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_categories {\n         categories : PagingObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "ddd6c1",
        "fullHash": "5b714ace2644f1b38e7c06fb1ae9068daeb4b3ed5fe1f435767428d94cb395a9"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_categories",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_categories",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_categories",
        "parameters": [],
        "name": "AnonymousTypeGet_categories",
        "parameterizedName": "com.spotify.AnonymousTypeGet_categories",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_categories",
        "shortDisplayName": "AnonymousTypeGet_categories"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_categories",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.byte",
        "parameters": [],
        "name": "byte",
        "parameterizedName": "com.spotify.byte",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.byte",
        "shortDisplayName": "byte"
      },
      "attributes": {},
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [{
        "fullyQualifiedName": "lang.taxi.String",
        "parameters": [],
        "name": "String",
        "parameterizedName": "lang.taxi.String",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.String",
        "shortDisplayName": "String"
      }],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   type byte inherits String\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "7ce053",
        "fullHash": "64a7ffe148a1b07769829d26bba145c20aa1ad971d0243c264eb3694520fdc19"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.byte",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": {
        "fullyQualifiedName": "lang.taxi.String",
        "parameters": [],
        "name": "String",
        "parameterizedName": "lang.taxi.String",
        "namespace": "lang.taxi",
        "longDisplayName": "lang.taxi.String",
        "shortDisplayName": "String"
      },
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.byte",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.byte",
        "parameters": [],
        "name": "byte",
        "parameterizedName": "com.spotify.byte",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.byte",
        "shortDisplayName": "byte"
      },
      "fullyQualifiedName": "com.spotify.byte",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": true
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_new_releases",
        "parameters": [],
        "name": "AnonymousTypeGet_new_releases",
        "parameterizedName": "com.spotify.AnonymousTypeGet_new_releases",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_new_releases",
        "shortDisplayName": "AnonymousTypeGet_new_releases"
      },
      "attributes": {
        "albums": {
          "type": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedAlbumObject",
            "parameters": [],
            "name": "PagingSimplifiedAlbumObject",
            "parameterizedName": "com.spotify.PagingSimplifiedAlbumObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
            "shortDisplayName": "PagingSimplifiedAlbumObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_new_releases {\n         albums : PagingSimplifiedAlbumObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "7133bb",
        "fullHash": "1baf5d839ce39daec5fddcc44bf1595828545439e86c8a46eb5f3c2466ade5e3"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_new_releases",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_new_releases",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_new_releases",
        "parameters": [],
        "name": "AnonymousTypeGet_new_releases",
        "parameterizedName": "com.spotify.AnonymousTypeGet_new_releases",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_new_releases",
        "shortDisplayName": "AnonymousTypeGet_new_releases"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_new_releases",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_followed",
        "parameters": [],
        "name": "AnonymousTypeGet_followed",
        "parameterizedName": "com.spotify.AnonymousTypeGet_followed",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_followed",
        "shortDisplayName": "AnonymousTypeGet_followed"
      },
      "attributes": {
        "artists": {
          "type": {
            "fullyQualifiedName": "com.spotify.CursorPagingSimplifiedArtistObject",
            "parameters": [],
            "name": "CursorPagingSimplifiedArtistObject",
            "parameterizedName": "com.spotify.CursorPagingSimplifiedArtistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.CursorPagingSimplifiedArtistObject",
            "shortDisplayName": "CursorPagingSimplifiedArtistObject"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.CursorPagingSimplifiedArtistObject",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_followed {\n         artists : CursorPagingSimplifiedArtistObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "352edb",
        "fullHash": "05359ddfd5df5ac44c738ed20a3f3623d284c469cd5d29a06f2d496c7e689774"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_followed",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_followed",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_followed",
        "parameters": [],
        "name": "AnonymousTypeGet_followed",
        "parameterizedName": "com.spotify.AnonymousTypeGet_followed",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_followed",
        "shortDisplayName": "AnonymousTypeGet_followed"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_followed",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
        "parameters": [],
        "name": "AnonymousTypeFollow_artists_usersBody",
        "parameterizedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
        "shortDisplayName": "AnonymousTypeFollow_artists_usersBody"
      },
      "attributes": {
        "ids": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A JSON array of the artist or user [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids).\n     For example: `{ids:[\"74ASZWbe4lXaubB36ztrGX\", \"08td7MxkoHQkXnWAYD8d6Q\"]}`. A maximum of 50 IDs can be sent in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeFollow_artists_usersBody {\n         [[ A JSON array of the artist or user [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids).\n         For example: `{ids:[\"74ASZWbe4lXaubB36ztrGX\", \"08td7MxkoHQkXnWAYD8d6Q\"]}`. A maximum of 50 IDs can be sent in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._\n         ]]\n         ids : String[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "a17e64",
        "fullHash": "72c63b4bc269221c2314870831fc2f8d773a028da8effc9160350f0943782551"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
        "parameters": [],
        "name": "AnonymousTypeFollow_artists_usersBody",
        "parameterizedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
        "shortDisplayName": "AnonymousTypeFollow_artists_usersBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
        "parameters": [],
        "name": "AnonymousTypeUnfollow_artists_usersBody",
        "parameterizedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
        "shortDisplayName": "AnonymousTypeUnfollow_artists_usersBody"
      },
      "attributes": {
        "ids": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A JSON array of the artist or user [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: `{ids:[\"74ASZWbe4lXaubB36ztrGX\", \"08td7MxkoHQkXnWAYD8d6Q\"]}`. A maximum of 50 IDs can be sent in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeUnfollow_artists_usersBody {\n         [[ A JSON array of the artist or user [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: `{ids:[\"74ASZWbe4lXaubB36ztrGX\", \"08td7MxkoHQkXnWAYD8d6Q\"]}`. A maximum of 50 IDs can be sent in one request. _**Note**: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored._\n         ]]\n         ids : String[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "b71471",
        "fullHash": "7fd86a75f43104ca5ba991c75977ecafdd66c00b67b06bbf32d58741052bf2d8"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
        "parameters": [],
        "name": "AnonymousTypeUnfollow_artists_usersBody",
        "parameterizedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
        "shortDisplayName": "AnonymousTypeUnfollow_artists_usersBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_audio_features",
        "parameters": [],
        "name": "AnonymousTypeGet_several_audio_features",
        "parameterizedName": "com.spotify.AnonymousTypeGet_several_audio_features",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_several_audio_features",
        "shortDisplayName": "AnonymousTypeGet_several_audio_features"
      },
      "attributes": {
        "audio_features": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.AudioFeaturesObject",
              "parameters": [],
              "name": "AudioFeaturesObject",
              "parameterizedName": "com.spotify.AudioFeaturesObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.AudioFeaturesObject",
              "shortDisplayName": "AudioFeaturesObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.AudioFeaturesObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.AudioFeaturesObject[]",
            "shortDisplayName": "AudioFeaturesObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.AudioFeaturesObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_several_audio_features {\n         audio_features : AudioFeaturesObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "972b0d",
        "fullHash": "34336d246ec14c22f9322af7c6693e1ade0435d088847876054291527f0d8b3b"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_several_audio_features",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_several_audio_features",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_audio_features",
        "parameters": [],
        "name": "AnonymousTypeGet_several_audio_features",
        "parameterizedName": "com.spotify.AnonymousTypeGet_several_audio_features",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_several_audio_features",
        "shortDisplayName": "AnonymousTypeGet_several_audio_features"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_audio_features",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
        "parameters": [],
        "name": "AnonymousTypeGet_recommendation_genres",
        "parameterizedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_recommendation_genres",
        "shortDisplayName": "AnonymousTypeGet_recommendation_genres"
      },
      "attributes": {
        "genres": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_recommendation_genres {\n         genres : String[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "7e23bc",
        "fullHash": "56c46a151357b387cef6b4c8a7b6aae9e43f977ee9758a5a0a2f41e1c4cbc969"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_recommendation_genres",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
        "parameters": [],
        "name": "AnonymousTypeGet_recommendation_genres",
        "parameterizedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_recommendation_genres",
        "shortDisplayName": "AnonymousTypeGet_recommendation_genres"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
        "parameters": [],
        "name": "AnonymousTypeTransfer_a_users_playbackBody",
        "parameterizedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
        "shortDisplayName": "AnonymousTypeTransfer_a_users_playbackBody"
      },
      "attributes": {
        "device_ids": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "A JSON array containing the ID of the device on which playback should be started/transferred.<br/>For example:`{device_ids:[\"74ASZWbe4lXaubB36ztrGX\"]}`<br/>_**Note**: Although an array is accepted, only a single device_id is currently supported. Supplying more than one will return `400 Bad Request`_",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "play": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Any",
            "parameters": [],
            "name": "Any",
            "parameterizedName": "lang.taxi.Any",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any",
            "shortDisplayName": "Any"
          },
          "modifiers": [],
          "typeDoc": "**true**: ensure playback happens on new device.<br/>**false** or not provided: keep the current playback state.",
          "defaultValue": null,
          "nullable": true,
          "typeDisplayName": "lang.taxi.Any",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeTransfer_a_users_playbackBody {\n         [[ A JSON array containing the ID of the device on which playback should be started/transferred.<br/>For example:`{device_ids:[\"74ASZWbe4lXaubB36ztrGX\"]}`<br/>_**Note**: Although an array is accepted, only a single device_id is currently supported. Supplying more than one will return `400 Bad Request`_\n         ]]\n         device_ids : String[]\n         [[ **true**: ensure playback happens on new device.<br/>**false** or not provided: keep the current playback state.\n         ]]\n         play : Any?\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "865f23",
        "fullHash": "5ee2f97525242b55a4e9c0de134f047b6fe5006084f5fdf66fc799e19939c9b4"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
        "parameters": [],
        "name": "AnonymousTypeTransfer_a_users_playbackBody",
        "parameterizedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
        "shortDisplayName": "AnonymousTypeTransfer_a_users_playbackBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
        "parameters": [],
        "name": "AnonymousTypeGet_a_users_available_devices",
        "parameterizedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
        "shortDisplayName": "AnonymousTypeGet_a_users_available_devices"
      },
      "attributes": {
        "devices": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.DeviceObject",
              "parameters": [],
              "name": "DeviceObject",
              "parameterizedName": "com.spotify.DeviceObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.DeviceObject",
              "shortDisplayName": "DeviceObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.DeviceObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.DeviceObject[]",
            "shortDisplayName": "DeviceObject[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "com.spotify.DeviceObject[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_a_users_available_devices {\n         devices : DeviceObject[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "cb1353",
        "fullHash": "dbfb328839d9058691c5691a73e33554fbe3bd9acce1df97f451beae0f31c3c3"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
        "parameters": [],
        "name": "AnonymousTypeGet_a_users_available_devices",
        "parameterizedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
        "shortDisplayName": "AnonymousTypeGet_a_users_available_devices"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
        "parameters": [],
        "name": "AnonymousTypeStart_a_users_playbackBody",
        "parameterizedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
        "shortDisplayName": "AnonymousTypeStart_a_users_playbackBody"
      },
      "attributes": {
        "context_uri": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Any",
            "parameters": [],
            "name": "Any",
            "parameterizedName": "lang.taxi.Any",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any",
            "shortDisplayName": "Any"
          },
          "modifiers": [],
          "typeDoc": "Optional. Spotify URI of the context to play.\n     Valid contexts are albums, artists & playlists.\n     `{context_uri:\"spotify:album:1Je1IMUlBXcx1Fz0WE7oPT\"}`",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Any",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "uris": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": "Optional. A JSON array of the Spotify track URIs to play.\n     For example: `{\"uris\": [\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\", \"spotify:track:1301WleyT98MSxVHPZCA6M\"]}`",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "offset": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Any",
            "parameters": [],
            "name": "Any",
            "parameterizedName": "lang.taxi.Any",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any",
            "shortDisplayName": "Any"
          },
          "modifiers": [],
          "typeDoc": "Optional. Indicates from where in the context playback should start. Only available when context_uri corresponds to an album or playlist object\n     \"position\" is zero based and can’t be negative. Example: `\"offset\": {\"position\": 5}`\n     \"uri\" is a string representing the uri of the item to start at. Example: `\"offset\": {\"uri\": \"spotify:track:1301WleyT98MSxVHPZCA6M\"}`",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Any",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        },
        "position_ms": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Any",
            "parameters": [],
            "name": "Any",
            "parameterizedName": "lang.taxi.Any",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Any",
            "shortDisplayName": "Any"
          },
          "modifiers": [],
          "typeDoc": "integer",
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.Any",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeStart_a_users_playbackBody {\n         [[ Optional. Spotify URI of the context to play.\n         Valid contexts are albums, artists & playlists.\n         `{context_uri:\"spotify:album:1Je1IMUlBXcx1Fz0WE7oPT\"}`\n         ]]\n         context_uri : Any\n         [[ Optional. A JSON array of the Spotify track URIs to play.\n         For example: `{\"uris\": [\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\", \"spotify:track:1301WleyT98MSxVHPZCA6M\"]}`\n         ]]\n         uris : String[]\n         [[ Optional. Indicates from where in the context playback should start. Only available when context_uri corresponds to an album or playlist object\n         \"position\" is zero based and can’t be negative. Example: `\"offset\": {\"position\": 5}`\n         \"uri\" is a string representing the uri of the item to start at. Example: `\"offset\": {\"uri\": \"spotify:track:1301WleyT98MSxVHPZCA6M\"}`\n         ]]\n         offset : Any\n         [[ integer ]]\n         position_ms : Any\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5c8a05",
        "fullHash": "a2637289088008fcc1cc3f712fc312280d2aec4646343a0e7992b9d5070d64a1"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
        "parameters": [],
        "name": "AnonymousTypeStart_a_users_playbackBody",
        "parameterizedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
        "shortDisplayName": "AnonymousTypeStart_a_users_playbackBody"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_available_markets",
        "parameters": [],
        "name": "AnonymousTypeGet_available_markets",
        "parameterizedName": "com.spotify.AnonymousTypeGet_available_markets",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_available_markets",
        "shortDisplayName": "AnonymousTypeGet_available_markets"
      },
      "attributes": {
        "markets": {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "modifiers": [],
          "typeDoc": null,
          "defaultValue": null,
          "nullable": false,
          "typeDisplayName": "lang.taxi.String[]",
          "metadata": [],
          "sourcedBy": null,
          "format": null,
          "anonymousType": null
        }
      },
      "modifiers": [],
      "metadata": [],
      "aliasForType": null,
      "inheritsFrom": [],
      "enumValues": [],
      "sources": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   model AnonymousTypeGet_available_markets {\n         markets : String[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "753691",
        "fullHash": "b3b89356c05a3d902a91a1a11bb079c36c29b4e1b96b0293637f0591098ee30e"
      }],
      "typeParameters": [],
      "typeDoc": "",
      "schemaMemberKind": "TYPE",
      "paramaterizedName": "com.spotify.AnonymousTypeGet_available_markets",
      "isTypeAlias": false,
      "formatAndZoneOffset": {"patterns": [], "utcZoneOffsetInMinutes": null, "definesPattern": false, "isEmpty": true},
      "offset": null,
      "format": [],
      "hasFormat": false,
      "declaresFormat": true,
      "basePrimitiveTypeName": null,
      "hasExpression": false,
      "unformattedTypeName": null,
      "isParameterType": false,
      "isClosed": false,
      "isPrimitive": false,
      "longDisplayName": "com.spotify.AnonymousTypeGet_available_markets",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AnonymousTypeGet_available_markets",
        "parameters": [],
        "name": "AnonymousTypeGet_available_markets",
        "parameterizedName": "com.spotify.AnonymousTypeGet_available_markets",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AnonymousTypeGet_available_markets",
        "shortDisplayName": "AnonymousTypeGet_available_markets"
      },
      "fullyQualifiedName": "com.spotify.AnonymousTypeGet_available_markets",
      "underlyingTypeParameters": [],
      "isCollection": false,
      "isStream": false,
      "collectionType": null,
      "isScalar": false
    }],
  "services": [
    {
      "name": {
        "fullyQualifiedName": "com.spotify.AlbumsIdService",
        "parameters": [],
        "name": "AlbumsIdService",
        "parameterizedName": "com.spotify.AlbumsIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumsIdService",
        "shortDisplayName": "AlbumsIdService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.AlbumsIdService@@get_an_album",
          "parameters": [],
          "name": "AlbumsIdService@@get_an_album",
          "parameterizedName": "com.spotify.AlbumsIdService@@get_an_album",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumsIdService / get_an_album",
          "shortDisplayName": "get_an_album"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AlbumObject",
          "parameters": [],
          "name": "AlbumObject",
          "parameterizedName": "com.spotify.AlbumObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumObject",
          "shortDisplayName": "AlbumObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/albums/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AlbumObject",
            "parameters": [],
            "name": "AlbumObject",
            "parameterizedName": "com.spotify.AlbumObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AlbumObject",
            "shortDisplayName": "AlbumObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single album.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AlbumObject",
          "parameters": [],
          "name": "AlbumObject",
          "parameterizedName": "com.spotify.AlbumObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumObject",
          "shortDisplayName": "AlbumObject"
        },
        "name": "get_an_album",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.AlbumsIdService@@get_an_album",
          "parameters": [],
          "name": "AlbumsIdService@@get_an_album",
          "parameterizedName": "com.spotify.AlbumsIdService@@get_an_album",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumsIdService / get_an_album",
          "shortDisplayName": "get_an_album"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service AlbumsIdService {\n         [[ Get Spotify catalog information for a single album.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/albums/{id}\")\n         operation get_an_album( @PathVariable(value = \"id\") id : String,  market : String ) : AlbumObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "9dcfc2",
        "fullHash": "4826e7796929a2856c3a8ad628df3c6a310651c2bfb1026fbe3ec8c8bac37fff"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.AlbumsIdService@@get_an_album",
          "parameters": [],
          "name": "AlbumsIdService@@get_an_album",
          "parameterizedName": "com.spotify.AlbumsIdService@@get_an_album",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumsIdService / get_an_album",
          "shortDisplayName": "get_an_album"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AlbumObject",
          "parameters": [],
          "name": "AlbumObject",
          "parameterizedName": "com.spotify.AlbumObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumObject",
          "shortDisplayName": "AlbumObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/albums/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AlbumObject",
            "parameters": [],
            "name": "AlbumObject",
            "parameterizedName": "com.spotify.AlbumObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AlbumObject",
            "shortDisplayName": "AlbumObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single album.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AlbumObject",
          "parameters": [],
          "name": "AlbumObject",
          "parameterizedName": "com.spotify.AlbumObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumObject",
          "shortDisplayName": "AlbumObject"
        },
        "name": "get_an_album",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.AlbumsIdService@@get_an_album",
          "parameters": [],
          "name": "AlbumsIdService@@get_an_album",
          "parameterizedName": "com.spotify.AlbumsIdService@@get_an_album",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumsIdService / get_an_album",
          "shortDisplayName": "get_an_album"
        }
      }],
      "qualifiedName": "com.spotify.AlbumsIdService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AlbumsIdService",
        "parameters": [],
        "name": "AlbumsIdService",
        "parameterizedName": "com.spotify.AlbumsIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumsIdService",
        "shortDisplayName": "AlbumsIdService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AlbumsService",
        "parameters": [],
        "name": "AlbumsService",
        "parameterizedName": "com.spotify.AlbumsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumsService",
        "shortDisplayName": "AlbumsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.AlbumsService@@get_multiple_albums",
          "parameters": [],
          "name": "AlbumsService@@get_multiple_albums",
          "parameterizedName": "com.spotify.AlbumsService@@get_multiple_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumsService / get_multiple_albums",
          "shortDisplayName": "get_multiple_albums"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_albums",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_albums",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_albums",
          "shortDisplayName": "AnonymousTypeGet_multiple_albums"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/albums"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_albums",
            "parameters": [],
            "name": "AnonymousTypeGet_multiple_albums",
            "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_albums",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_albums",
            "shortDisplayName": "AnonymousTypeGet_multiple_albums"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for multiple albums identified by their Spotify IDs.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_albums",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_albums",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_albums",
          "shortDisplayName": "AnonymousTypeGet_multiple_albums"
        },
        "name": "get_multiple_albums",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.AlbumsService@@get_multiple_albums",
          "parameters": [],
          "name": "AlbumsService@@get_multiple_albums",
          "parameterizedName": "com.spotify.AlbumsService@@get_multiple_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumsService / get_multiple_albums",
          "shortDisplayName": "get_multiple_albums"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service AlbumsService {\n         [[ Get Spotify catalog information for multiple albums identified by their Spotify IDs.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/albums\")\n         operation get_multiple_albums(  ids : String,  market : String ) : AnonymousTypeGet_multiple_albums\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "2e49f0",
        "fullHash": "e66ca44956edd66312f369e93ef9bfffecf471f5b49d9bd2417778076b0c2d63"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.AlbumsService@@get_multiple_albums",
          "parameters": [],
          "name": "AlbumsService@@get_multiple_albums",
          "parameterizedName": "com.spotify.AlbumsService@@get_multiple_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumsService / get_multiple_albums",
          "shortDisplayName": "get_multiple_albums"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_albums",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_albums",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_albums",
          "shortDisplayName": "AnonymousTypeGet_multiple_albums"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/albums"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_albums",
            "parameters": [],
            "name": "AnonymousTypeGet_multiple_albums",
            "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_albums",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_albums",
            "shortDisplayName": "AnonymousTypeGet_multiple_albums"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for multiple albums identified by their Spotify IDs.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_albums",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_albums",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_albums",
          "shortDisplayName": "AnonymousTypeGet_multiple_albums"
        },
        "name": "get_multiple_albums",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.AlbumsService@@get_multiple_albums",
          "parameters": [],
          "name": "AlbumsService@@get_multiple_albums",
          "parameterizedName": "com.spotify.AlbumsService@@get_multiple_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumsService / get_multiple_albums",
          "shortDisplayName": "get_multiple_albums"
        }
      }],
      "qualifiedName": "com.spotify.AlbumsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AlbumsService",
        "parameters": [],
        "name": "AlbumsService",
        "parameterizedName": "com.spotify.AlbumsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumsService",
        "shortDisplayName": "AlbumsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AlbumsIdTracksService",
        "parameters": [],
        "name": "AlbumsIdTracksService",
        "parameterizedName": "com.spotify.AlbumsIdTracksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumsIdTracksService",
        "shortDisplayName": "AlbumsIdTracksService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.AlbumsIdTracksService@@get_an_albums_tracks",
          "parameters": [],
          "name": "AlbumsIdTracksService@@get_an_albums_tracks",
          "parameterizedName": "com.spotify.AlbumsIdTracksService@@get_an_albums_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumsIdTracksService / get_an_albums_tracks",
          "shortDisplayName": "get_an_albums_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedTrackObject",
          "parameters": [],
          "name": "PagingSimplifiedTrackObject",
          "parameterizedName": "com.spotify.PagingSimplifiedTrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedTrackObject",
          "shortDisplayName": "PagingSimplifiedTrackObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/albums/{id}/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedTrackObject",
            "parameters": [],
            "name": "PagingSimplifiedTrackObject",
            "parameterizedName": "com.spotify.PagingSimplifiedTrackObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedTrackObject",
            "shortDisplayName": "PagingSimplifiedTrackObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about an album’s tracks.\n     Optional parameters can be used to limit the number of tracks returned.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedTrackObject",
          "parameters": [],
          "name": "PagingSimplifiedTrackObject",
          "parameterizedName": "com.spotify.PagingSimplifiedTrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedTrackObject",
          "shortDisplayName": "PagingSimplifiedTrackObject"
        },
        "name": "get_an_albums_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.AlbumsIdTracksService@@get_an_albums_tracks",
          "parameters": [],
          "name": "AlbumsIdTracksService@@get_an_albums_tracks",
          "parameterizedName": "com.spotify.AlbumsIdTracksService@@get_an_albums_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumsIdTracksService / get_an_albums_tracks",
          "shortDisplayName": "get_an_albums_tracks"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service AlbumsIdTracksService {\n         [[ Get Spotify catalog information about an album’s tracks.\n         Optional parameters can be used to limit the number of tracks returned.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/albums/{id}/tracks\")\n         operation get_an_albums_tracks( @PathVariable(value = \"id\") id : String,  market : String,  limit : Int,  offset : Int ) : PagingSimplifiedTrackObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "e6172a",
        "fullHash": "63661fb08a63b2add3899fb7b694166a5f03b0e438c87f87aaa96de8394dd2a3"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.AlbumsIdTracksService@@get_an_albums_tracks",
          "parameters": [],
          "name": "AlbumsIdTracksService@@get_an_albums_tracks",
          "parameterizedName": "com.spotify.AlbumsIdTracksService@@get_an_albums_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumsIdTracksService / get_an_albums_tracks",
          "shortDisplayName": "get_an_albums_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedTrackObject",
          "parameters": [],
          "name": "PagingSimplifiedTrackObject",
          "parameterizedName": "com.spotify.PagingSimplifiedTrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedTrackObject",
          "shortDisplayName": "PagingSimplifiedTrackObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/albums/{id}/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedTrackObject",
            "parameters": [],
            "name": "PagingSimplifiedTrackObject",
            "parameterizedName": "com.spotify.PagingSimplifiedTrackObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedTrackObject",
            "shortDisplayName": "PagingSimplifiedTrackObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about an album’s tracks.\n     Optional parameters can be used to limit the number of tracks returned.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedTrackObject",
          "parameters": [],
          "name": "PagingSimplifiedTrackObject",
          "parameterizedName": "com.spotify.PagingSimplifiedTrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedTrackObject",
          "shortDisplayName": "PagingSimplifiedTrackObject"
        },
        "name": "get_an_albums_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.AlbumsIdTracksService@@get_an_albums_tracks",
          "parameters": [],
          "name": "AlbumsIdTracksService@@get_an_albums_tracks",
          "parameterizedName": "com.spotify.AlbumsIdTracksService@@get_an_albums_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AlbumsIdTracksService / get_an_albums_tracks",
          "shortDisplayName": "get_an_albums_tracks"
        }
      }],
      "qualifiedName": "com.spotify.AlbumsIdTracksService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AlbumsIdTracksService",
        "parameters": [],
        "name": "AlbumsIdTracksService",
        "parameterizedName": "com.spotify.AlbumsIdTracksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AlbumsIdTracksService",
        "shortDisplayName": "AlbumsIdTracksService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ArtistsIdService",
        "parameters": [],
        "name": "ArtistsIdService",
        "parameterizedName": "com.spotify.ArtistsIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ArtistsIdService",
        "shortDisplayName": "ArtistsIdService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdService@@get_an_artist",
          "parameters": [],
          "name": "ArtistsIdService@@get_an_artist",
          "parameterizedName": "com.spotify.ArtistsIdService@@get_an_artist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdService / get_an_artist",
          "shortDisplayName": "get_an_artist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.ArtistObject",
          "parameters": [],
          "name": "ArtistObject",
          "parameterizedName": "com.spotify.ArtistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistObject",
          "shortDisplayName": "ArtistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/artists/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.ArtistObject",
            "parameters": [],
            "name": "ArtistObject",
            "parameterizedName": "com.spotify.ArtistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.ArtistObject",
            "shortDisplayName": "ArtistObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single artist identified by their unique Spotify ID.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.ArtistObject",
          "parameters": [],
          "name": "ArtistObject",
          "parameterizedName": "com.spotify.ArtistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistObject",
          "shortDisplayName": "ArtistObject"
        },
        "name": "get_an_artist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdService@@get_an_artist",
          "parameters": [],
          "name": "ArtistsIdService@@get_an_artist",
          "parameterizedName": "com.spotify.ArtistsIdService@@get_an_artist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdService / get_an_artist",
          "shortDisplayName": "get_an_artist"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service ArtistsIdService {\n         [[ Get Spotify catalog information for a single artist identified by their unique Spotify ID.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/artists/{id}\")\n         operation get_an_artist( @PathVariable(value = \"id\") id : String ) : ArtistObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "342fbe",
        "fullHash": "cb14391068da6141f4c5362f71fccf3250109bb345b6ab9f46eca0c9ae9a2008"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdService@@get_an_artist",
          "parameters": [],
          "name": "ArtistsIdService@@get_an_artist",
          "parameterizedName": "com.spotify.ArtistsIdService@@get_an_artist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdService / get_an_artist",
          "shortDisplayName": "get_an_artist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.ArtistObject",
          "parameters": [],
          "name": "ArtistObject",
          "parameterizedName": "com.spotify.ArtistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistObject",
          "shortDisplayName": "ArtistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/artists/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.ArtistObject",
            "parameters": [],
            "name": "ArtistObject",
            "parameterizedName": "com.spotify.ArtistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.ArtistObject",
            "shortDisplayName": "ArtistObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single artist identified by their unique Spotify ID.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.ArtistObject",
          "parameters": [],
          "name": "ArtistObject",
          "parameterizedName": "com.spotify.ArtistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistObject",
          "shortDisplayName": "ArtistObject"
        },
        "name": "get_an_artist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdService@@get_an_artist",
          "parameters": [],
          "name": "ArtistsIdService@@get_an_artist",
          "parameterizedName": "com.spotify.ArtistsIdService@@get_an_artist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdService / get_an_artist",
          "shortDisplayName": "get_an_artist"
        }
      }],
      "qualifiedName": "com.spotify.ArtistsIdService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ArtistsIdService",
        "parameters": [],
        "name": "ArtistsIdService",
        "parameterizedName": "com.spotify.ArtistsIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ArtistsIdService",
        "shortDisplayName": "ArtistsIdService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ArtistsService",
        "parameters": [],
        "name": "ArtistsService",
        "parameterizedName": "com.spotify.ArtistsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ArtistsService",
        "shortDisplayName": "ArtistsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsService@@get_multiple_artists",
          "parameters": [],
          "name": "ArtistsService@@get_multiple_artists",
          "parameterizedName": "com.spotify.ArtistsService@@get_multiple_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsService / get_multiple_artists",
          "shortDisplayName": "get_multiple_artists"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_artists",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_artists",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_artists",
          "shortDisplayName": "AnonymousTypeGet_multiple_artists"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/artists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_artists",
            "parameters": [],
            "name": "AnonymousTypeGet_multiple_artists",
            "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_artists",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_artists",
            "shortDisplayName": "AnonymousTypeGet_multiple_artists"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for several artists based on their Spotify IDs.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_artists",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_artists",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_artists",
          "shortDisplayName": "AnonymousTypeGet_multiple_artists"
        },
        "name": "get_multiple_artists",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsService@@get_multiple_artists",
          "parameters": [],
          "name": "ArtistsService@@get_multiple_artists",
          "parameterizedName": "com.spotify.ArtistsService@@get_multiple_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsService / get_multiple_artists",
          "shortDisplayName": "get_multiple_artists"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service ArtistsService {\n         [[ Get Spotify catalog information for several artists based on their Spotify IDs.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/artists\")\n         operation get_multiple_artists(  ids : String ) : AnonymousTypeGet_multiple_artists\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "7ec2a6",
        "fullHash": "d86f5796747bead63b76d8e933117fadbedd476eb3bd17990a7b2364f8c9b24a"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsService@@get_multiple_artists",
          "parameters": [],
          "name": "ArtistsService@@get_multiple_artists",
          "parameterizedName": "com.spotify.ArtistsService@@get_multiple_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsService / get_multiple_artists",
          "shortDisplayName": "get_multiple_artists"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_artists",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_artists",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_artists",
          "shortDisplayName": "AnonymousTypeGet_multiple_artists"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/artists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_artists",
            "parameters": [],
            "name": "AnonymousTypeGet_multiple_artists",
            "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_artists",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_artists",
            "shortDisplayName": "AnonymousTypeGet_multiple_artists"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for several artists based on their Spotify IDs.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_artists",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_artists",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_artists",
          "shortDisplayName": "AnonymousTypeGet_multiple_artists"
        },
        "name": "get_multiple_artists",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsService@@get_multiple_artists",
          "parameters": [],
          "name": "ArtistsService@@get_multiple_artists",
          "parameterizedName": "com.spotify.ArtistsService@@get_multiple_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsService / get_multiple_artists",
          "shortDisplayName": "get_multiple_artists"
        }
      }],
      "qualifiedName": "com.spotify.ArtistsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ArtistsService",
        "parameters": [],
        "name": "ArtistsService",
        "parameterizedName": "com.spotify.ArtistsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ArtistsService",
        "shortDisplayName": "ArtistsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ArtistsIdAlbumsService",
        "parameters": [],
        "name": "ArtistsIdAlbumsService",
        "parameterizedName": "com.spotify.ArtistsIdAlbumsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ArtistsIdAlbumsService",
        "shortDisplayName": "ArtistsIdAlbumsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdAlbumsService@@get_an_artists_albums",
          "parameters": [],
          "name": "ArtistsIdAlbumsService@@get_an_artists_albums",
          "parameterizedName": "com.spotify.ArtistsIdAlbumsService@@get_an_artists_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdAlbumsService / get_an_artists_albums",
          "shortDisplayName": "get_an_artists_albums"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "include_groups",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedAlbumObject",
          "parameters": [],
          "name": "PagingSimplifiedAlbumObject",
          "parameterizedName": "com.spotify.PagingSimplifiedAlbumObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
          "shortDisplayName": "PagingSimplifiedAlbumObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/artists/{id}/albums"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedAlbumObject",
            "parameters": [],
            "name": "PagingSimplifiedAlbumObject",
            "parameterizedName": "com.spotify.PagingSimplifiedAlbumObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
            "shortDisplayName": "PagingSimplifiedAlbumObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about an artist's albums.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedAlbumObject",
          "parameters": [],
          "name": "PagingSimplifiedAlbumObject",
          "parameterizedName": "com.spotify.PagingSimplifiedAlbumObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
          "shortDisplayName": "PagingSimplifiedAlbumObject"
        },
        "name": "get_an_artists_albums",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdAlbumsService@@get_an_artists_albums",
          "parameters": [],
          "name": "ArtistsIdAlbumsService@@get_an_artists_albums",
          "parameterizedName": "com.spotify.ArtistsIdAlbumsService@@get_an_artists_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdAlbumsService / get_an_artists_albums",
          "shortDisplayName": "get_an_artists_albums"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service ArtistsIdAlbumsService {\n         [[ Get Spotify catalog information about an artist's albums.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/artists/{id}/albums\")\n         operation get_an_artists_albums( @PathVariable(value = \"id\") id : String,  include_groups : String,  market : String,  limit : Int,  offset : Int ) : PagingSimplifiedAlbumObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "99833a",
        "fullHash": "d2bc6b11f30e7d61c41a2967a3351bb674109530eb68cc74aeac84034cdf1c80"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdAlbumsService@@get_an_artists_albums",
          "parameters": [],
          "name": "ArtistsIdAlbumsService@@get_an_artists_albums",
          "parameterizedName": "com.spotify.ArtistsIdAlbumsService@@get_an_artists_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdAlbumsService / get_an_artists_albums",
          "shortDisplayName": "get_an_artists_albums"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "include_groups",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedAlbumObject",
          "parameters": [],
          "name": "PagingSimplifiedAlbumObject",
          "parameterizedName": "com.spotify.PagingSimplifiedAlbumObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
          "shortDisplayName": "PagingSimplifiedAlbumObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/artists/{id}/albums"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedAlbumObject",
            "parameters": [],
            "name": "PagingSimplifiedAlbumObject",
            "parameterizedName": "com.spotify.PagingSimplifiedAlbumObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
            "shortDisplayName": "PagingSimplifiedAlbumObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about an artist's albums.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedAlbumObject",
          "parameters": [],
          "name": "PagingSimplifiedAlbumObject",
          "parameterizedName": "com.spotify.PagingSimplifiedAlbumObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedAlbumObject",
          "shortDisplayName": "PagingSimplifiedAlbumObject"
        },
        "name": "get_an_artists_albums",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdAlbumsService@@get_an_artists_albums",
          "parameters": [],
          "name": "ArtistsIdAlbumsService@@get_an_artists_albums",
          "parameterizedName": "com.spotify.ArtistsIdAlbumsService@@get_an_artists_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdAlbumsService / get_an_artists_albums",
          "shortDisplayName": "get_an_artists_albums"
        }
      }],
      "qualifiedName": "com.spotify.ArtistsIdAlbumsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ArtistsIdAlbumsService",
        "parameters": [],
        "name": "ArtistsIdAlbumsService",
        "parameterizedName": "com.spotify.ArtistsIdAlbumsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ArtistsIdAlbumsService",
        "shortDisplayName": "ArtistsIdAlbumsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ArtistsIdTop_tracksService",
        "parameters": [],
        "name": "ArtistsIdTop_tracksService",
        "parameterizedName": "com.spotify.ArtistsIdTop_tracksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ArtistsIdTop_tracksService",
        "shortDisplayName": "ArtistsIdTop_tracksService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdTop_tracksService@@get_an_artists_top_tracks",
          "parameters": [],
          "name": "ArtistsIdTop_tracksService@@get_an_artists_top_tracks",
          "parameterizedName": "com.spotify.ArtistsIdTop_tracksService@@get_an_artists_top_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdTop_tracksService / get_an_artists_top_tracks",
          "shortDisplayName": "get_an_artists_top_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
          "parameters": [],
          "name": "AnonymousTypeGet_an_artists_top_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
          "shortDisplayName": "AnonymousTypeGet_an_artists_top_tracks"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/artists/{id}/top-tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
            "parameters": [],
            "name": "AnonymousTypeGet_an_artists_top_tracks",
            "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
            "shortDisplayName": "AnonymousTypeGet_an_artists_top_tracks"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about an artist's top tracks by country.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
          "parameters": [],
          "name": "AnonymousTypeGet_an_artists_top_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
          "shortDisplayName": "AnonymousTypeGet_an_artists_top_tracks"
        },
        "name": "get_an_artists_top_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdTop_tracksService@@get_an_artists_top_tracks",
          "parameters": [],
          "name": "ArtistsIdTop_tracksService@@get_an_artists_top_tracks",
          "parameterizedName": "com.spotify.ArtistsIdTop_tracksService@@get_an_artists_top_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdTop_tracksService / get_an_artists_top_tracks",
          "shortDisplayName": "get_an_artists_top_tracks"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service ArtistsIdTop_tracksService {\n         [[ Get Spotify catalog information about an artist's top tracks by country.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/artists/{id}/top-tracks\")\n         operation get_an_artists_top_tracks( @PathVariable(value = \"id\") id : String,  market : String ) : AnonymousTypeGet_an_artists_top_tracks\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "ecf997",
        "fullHash": "069330a56019d6f9525606ea91a0fcd63c3e606f993f8d0d89c9a9b6ccd1b24b"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdTop_tracksService@@get_an_artists_top_tracks",
          "parameters": [],
          "name": "ArtistsIdTop_tracksService@@get_an_artists_top_tracks",
          "parameterizedName": "com.spotify.ArtistsIdTop_tracksService@@get_an_artists_top_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdTop_tracksService / get_an_artists_top_tracks",
          "shortDisplayName": "get_an_artists_top_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
          "parameters": [],
          "name": "AnonymousTypeGet_an_artists_top_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
          "shortDisplayName": "AnonymousTypeGet_an_artists_top_tracks"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/artists/{id}/top-tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
            "parameters": [],
            "name": "AnonymousTypeGet_an_artists_top_tracks",
            "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
            "shortDisplayName": "AnonymousTypeGet_an_artists_top_tracks"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about an artist's top tracks by country.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
          "parameters": [],
          "name": "AnonymousTypeGet_an_artists_top_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_top_tracks",
          "shortDisplayName": "AnonymousTypeGet_an_artists_top_tracks"
        },
        "name": "get_an_artists_top_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdTop_tracksService@@get_an_artists_top_tracks",
          "parameters": [],
          "name": "ArtistsIdTop_tracksService@@get_an_artists_top_tracks",
          "parameterizedName": "com.spotify.ArtistsIdTop_tracksService@@get_an_artists_top_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdTop_tracksService / get_an_artists_top_tracks",
          "shortDisplayName": "get_an_artists_top_tracks"
        }
      }],
      "qualifiedName": "com.spotify.ArtistsIdTop_tracksService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ArtistsIdTop_tracksService",
        "parameters": [],
        "name": "ArtistsIdTop_tracksService",
        "parameterizedName": "com.spotify.ArtistsIdTop_tracksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ArtistsIdTop_tracksService",
        "shortDisplayName": "ArtistsIdTop_tracksService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ArtistsIdRelated_artistsService",
        "parameters": [],
        "name": "ArtistsIdRelated_artistsService",
        "parameterizedName": "com.spotify.ArtistsIdRelated_artistsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ArtistsIdRelated_artistsService",
        "shortDisplayName": "ArtistsIdRelated_artistsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdRelated_artistsService@@get_an_artists_related_artists",
          "parameters": [],
          "name": "ArtistsIdRelated_artistsService@@get_an_artists_related_artists",
          "parameterizedName": "com.spotify.ArtistsIdRelated_artistsService@@get_an_artists_related_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdRelated_artistsService / get_an_artists_related_artists",
          "shortDisplayName": "get_an_artists_related_artists"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
          "parameters": [],
          "name": "AnonymousTypeGet_an_artists_related_artists",
          "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
          "shortDisplayName": "AnonymousTypeGet_an_artists_related_artists"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/artists/{id}/related-artists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
            "parameters": [],
            "name": "AnonymousTypeGet_an_artists_related_artists",
            "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
            "shortDisplayName": "AnonymousTypeGet_an_artists_related_artists"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about artists similar to a given artist. Similarity is based on analysis of the Spotify community's listening history.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
          "parameters": [],
          "name": "AnonymousTypeGet_an_artists_related_artists",
          "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
          "shortDisplayName": "AnonymousTypeGet_an_artists_related_artists"
        },
        "name": "get_an_artists_related_artists",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdRelated_artistsService@@get_an_artists_related_artists",
          "parameters": [],
          "name": "ArtistsIdRelated_artistsService@@get_an_artists_related_artists",
          "parameterizedName": "com.spotify.ArtistsIdRelated_artistsService@@get_an_artists_related_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdRelated_artistsService / get_an_artists_related_artists",
          "shortDisplayName": "get_an_artists_related_artists"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service ArtistsIdRelated_artistsService {\n         [[ Get Spotify catalog information about artists similar to a given artist. Similarity is based on analysis of the Spotify community's listening history.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/artists/{id}/related-artists\")\n         operation get_an_artists_related_artists( @PathVariable(value = \"id\") id : String ) : AnonymousTypeGet_an_artists_related_artists\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "1b6eb8",
        "fullHash": "965c566fcfa968988acdd5e1be199c928ec1af963f6e8ae82e00affcfe5f23e3"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdRelated_artistsService@@get_an_artists_related_artists",
          "parameters": [],
          "name": "ArtistsIdRelated_artistsService@@get_an_artists_related_artists",
          "parameterizedName": "com.spotify.ArtistsIdRelated_artistsService@@get_an_artists_related_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdRelated_artistsService / get_an_artists_related_artists",
          "shortDisplayName": "get_an_artists_related_artists"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
          "parameters": [],
          "name": "AnonymousTypeGet_an_artists_related_artists",
          "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
          "shortDisplayName": "AnonymousTypeGet_an_artists_related_artists"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/artists/{id}/related-artists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
            "parameters": [],
            "name": "AnonymousTypeGet_an_artists_related_artists",
            "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
            "shortDisplayName": "AnonymousTypeGet_an_artists_related_artists"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about artists similar to a given artist. Similarity is based on analysis of the Spotify community's listening history.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
          "parameters": [],
          "name": "AnonymousTypeGet_an_artists_related_artists",
          "parameterizedName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_an_artists_related_artists",
          "shortDisplayName": "AnonymousTypeGet_an_artists_related_artists"
        },
        "name": "get_an_artists_related_artists",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ArtistsIdRelated_artistsService@@get_an_artists_related_artists",
          "parameters": [],
          "name": "ArtistsIdRelated_artistsService@@get_an_artists_related_artists",
          "parameterizedName": "com.spotify.ArtistsIdRelated_artistsService@@get_an_artists_related_artists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ArtistsIdRelated_artistsService / get_an_artists_related_artists",
          "shortDisplayName": "get_an_artists_related_artists"
        }
      }],
      "qualifiedName": "com.spotify.ArtistsIdRelated_artistsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ArtistsIdRelated_artistsService",
        "parameters": [],
        "name": "ArtistsIdRelated_artistsService",
        "parameterizedName": "com.spotify.ArtistsIdRelated_artistsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ArtistsIdRelated_artistsService",
        "shortDisplayName": "ArtistsIdRelated_artistsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ShowsIdService",
        "parameters": [],
        "name": "ShowsIdService",
        "parameterizedName": "com.spotify.ShowsIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ShowsIdService",
        "shortDisplayName": "ShowsIdService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ShowsIdService@@get_a_show",
          "parameters": [],
          "name": "ShowsIdService@@get_a_show",
          "parameterizedName": "com.spotify.ShowsIdService@@get_a_show",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowsIdService / get_a_show",
          "shortDisplayName": "get_a_show"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.ShowObject",
          "parameters": [],
          "name": "ShowObject",
          "parameterizedName": "com.spotify.ShowObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowObject",
          "shortDisplayName": "ShowObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/shows/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.ShowObject",
            "parameters": [],
            "name": "ShowObject",
            "parameterizedName": "com.spotify.ShowObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.ShowObject",
            "shortDisplayName": "ShowObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single show identified by its\n     unique Spotify ID.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.ShowObject",
          "parameters": [],
          "name": "ShowObject",
          "parameterizedName": "com.spotify.ShowObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowObject",
          "shortDisplayName": "ShowObject"
        },
        "name": "get_a_show",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ShowsIdService@@get_a_show",
          "parameters": [],
          "name": "ShowsIdService@@get_a_show",
          "parameterizedName": "com.spotify.ShowsIdService@@get_a_show",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowsIdService / get_a_show",
          "shortDisplayName": "get_a_show"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service ShowsIdService {\n         [[ Get Spotify catalog information for a single show identified by its\n         unique Spotify ID.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/shows/{id}\")\n         operation get_a_show(  market : String, @PathVariable(value = \"id\") id : String ) : ShowObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "ff4eba",
        "fullHash": "8d13dfcbfc9764305acb5267ea291e9fc4ffb239627e7966fd32106ee4d0a8a2"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ShowsIdService@@get_a_show",
          "parameters": [],
          "name": "ShowsIdService@@get_a_show",
          "parameterizedName": "com.spotify.ShowsIdService@@get_a_show",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowsIdService / get_a_show",
          "shortDisplayName": "get_a_show"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.ShowObject",
          "parameters": [],
          "name": "ShowObject",
          "parameterizedName": "com.spotify.ShowObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowObject",
          "shortDisplayName": "ShowObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/shows/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.ShowObject",
            "parameters": [],
            "name": "ShowObject",
            "parameterizedName": "com.spotify.ShowObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.ShowObject",
            "shortDisplayName": "ShowObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single show identified by its\n     unique Spotify ID.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.ShowObject",
          "parameters": [],
          "name": "ShowObject",
          "parameterizedName": "com.spotify.ShowObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowObject",
          "shortDisplayName": "ShowObject"
        },
        "name": "get_a_show",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ShowsIdService@@get_a_show",
          "parameters": [],
          "name": "ShowsIdService@@get_a_show",
          "parameterizedName": "com.spotify.ShowsIdService@@get_a_show",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowsIdService / get_a_show",
          "shortDisplayName": "get_a_show"
        }
      }],
      "qualifiedName": "com.spotify.ShowsIdService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ShowsIdService",
        "parameters": [],
        "name": "ShowsIdService",
        "parameterizedName": "com.spotify.ShowsIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ShowsIdService",
        "shortDisplayName": "ShowsIdService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ShowsService",
        "parameters": [],
        "name": "ShowsService",
        "parameterizedName": "com.spotify.ShowsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ShowsService",
        "shortDisplayName": "ShowsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ShowsService@@get_multiple_shows",
          "parameters": [],
          "name": "ShowsService@@get_multiple_shows",
          "parameterizedName": "com.spotify.ShowsService@@get_multiple_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowsService / get_multiple_shows",
          "shortDisplayName": "get_multiple_shows"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_shows",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_shows",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_shows",
          "shortDisplayName": "AnonymousTypeGet_multiple_shows"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/shows"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_shows",
            "parameters": [],
            "name": "AnonymousTypeGet_multiple_shows",
            "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_shows",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_shows",
            "shortDisplayName": "AnonymousTypeGet_multiple_shows"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for several shows based on their Spotify IDs.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_shows",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_shows",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_shows",
          "shortDisplayName": "AnonymousTypeGet_multiple_shows"
        },
        "name": "get_multiple_shows",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ShowsService@@get_multiple_shows",
          "parameters": [],
          "name": "ShowsService@@get_multiple_shows",
          "parameterizedName": "com.spotify.ShowsService@@get_multiple_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowsService / get_multiple_shows",
          "shortDisplayName": "get_multiple_shows"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service ShowsService {\n         [[ Get Spotify catalog information for several shows based on their Spotify IDs.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/shows\")\n         operation get_multiple_shows(  market : String,  ids : String ) : AnonymousTypeGet_multiple_shows\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "129845",
        "fullHash": "f7c419550968b033a94b22c2d6d9f2957376e6e89e6dd1567e54a8f1eab15146"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ShowsService@@get_multiple_shows",
          "parameters": [],
          "name": "ShowsService@@get_multiple_shows",
          "parameterizedName": "com.spotify.ShowsService@@get_multiple_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowsService / get_multiple_shows",
          "shortDisplayName": "get_multiple_shows"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_shows",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_shows",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_shows",
          "shortDisplayName": "AnonymousTypeGet_multiple_shows"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/shows"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_shows",
            "parameters": [],
            "name": "AnonymousTypeGet_multiple_shows",
            "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_shows",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_shows",
            "shortDisplayName": "AnonymousTypeGet_multiple_shows"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for several shows based on their Spotify IDs.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_shows",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_shows",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_shows",
          "shortDisplayName": "AnonymousTypeGet_multiple_shows"
        },
        "name": "get_multiple_shows",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ShowsService@@get_multiple_shows",
          "parameters": [],
          "name": "ShowsService@@get_multiple_shows",
          "parameterizedName": "com.spotify.ShowsService@@get_multiple_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowsService / get_multiple_shows",
          "shortDisplayName": "get_multiple_shows"
        }
      }],
      "qualifiedName": "com.spotify.ShowsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ShowsService",
        "parameters": [],
        "name": "ShowsService",
        "parameterizedName": "com.spotify.ShowsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ShowsService",
        "shortDisplayName": "ShowsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ShowsIdEpisodesService",
        "parameters": [],
        "name": "ShowsIdEpisodesService",
        "parameterizedName": "com.spotify.ShowsIdEpisodesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ShowsIdEpisodesService",
        "shortDisplayName": "ShowsIdEpisodesService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ShowsIdEpisodesService@@get_a_shows_episodes",
          "parameters": [],
          "name": "ShowsIdEpisodesService@@get_a_shows_episodes",
          "parameterizedName": "com.spotify.ShowsIdEpisodesService@@get_a_shows_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowsIdEpisodesService / get_a_shows_episodes",
          "shortDisplayName": "get_a_shows_episodes"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedEpisodeObject",
          "parameters": [],
          "name": "PagingSimplifiedEpisodeObject",
          "parameterizedName": "com.spotify.PagingSimplifiedEpisodeObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedEpisodeObject",
          "shortDisplayName": "PagingSimplifiedEpisodeObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/shows/{id}/episodes"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedEpisodeObject",
            "parameters": [],
            "name": "PagingSimplifiedEpisodeObject",
            "parameterizedName": "com.spotify.PagingSimplifiedEpisodeObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedEpisodeObject",
            "shortDisplayName": "PagingSimplifiedEpisodeObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about an show’s episodes. Optional parameters can be used to limit the number of episodes returned.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedEpisodeObject",
          "parameters": [],
          "name": "PagingSimplifiedEpisodeObject",
          "parameterizedName": "com.spotify.PagingSimplifiedEpisodeObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedEpisodeObject",
          "shortDisplayName": "PagingSimplifiedEpisodeObject"
        },
        "name": "get_a_shows_episodes",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ShowsIdEpisodesService@@get_a_shows_episodes",
          "parameters": [],
          "name": "ShowsIdEpisodesService@@get_a_shows_episodes",
          "parameterizedName": "com.spotify.ShowsIdEpisodesService@@get_a_shows_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowsIdEpisodesService / get_a_shows_episodes",
          "shortDisplayName": "get_a_shows_episodes"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service ShowsIdEpisodesService {\n         [[ Get Spotify catalog information about an show’s episodes. Optional parameters can be used to limit the number of episodes returned.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/shows/{id}/episodes\")\n         operation get_a_shows_episodes( @PathVariable(value = \"id\") id : String,  market : String,  limit : Int,  offset : Int ) : PagingSimplifiedEpisodeObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5ef9cd",
        "fullHash": "5ec9928d2d6071eccfe342814e440fface7153e00dac4cc108b4b7d53b53b668"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ShowsIdEpisodesService@@get_a_shows_episodes",
          "parameters": [],
          "name": "ShowsIdEpisodesService@@get_a_shows_episodes",
          "parameterizedName": "com.spotify.ShowsIdEpisodesService@@get_a_shows_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowsIdEpisodesService / get_a_shows_episodes",
          "shortDisplayName": "get_a_shows_episodes"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedEpisodeObject",
          "parameters": [],
          "name": "PagingSimplifiedEpisodeObject",
          "parameterizedName": "com.spotify.PagingSimplifiedEpisodeObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedEpisodeObject",
          "shortDisplayName": "PagingSimplifiedEpisodeObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/shows/{id}/episodes"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedEpisodeObject",
            "parameters": [],
            "name": "PagingSimplifiedEpisodeObject",
            "parameterizedName": "com.spotify.PagingSimplifiedEpisodeObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedEpisodeObject",
            "shortDisplayName": "PagingSimplifiedEpisodeObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about an show’s episodes. Optional parameters can be used to limit the number of episodes returned.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedEpisodeObject",
          "parameters": [],
          "name": "PagingSimplifiedEpisodeObject",
          "parameterizedName": "com.spotify.PagingSimplifiedEpisodeObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedEpisodeObject",
          "shortDisplayName": "PagingSimplifiedEpisodeObject"
        },
        "name": "get_a_shows_episodes",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ShowsIdEpisodesService@@get_a_shows_episodes",
          "parameters": [],
          "name": "ShowsIdEpisodesService@@get_a_shows_episodes",
          "parameterizedName": "com.spotify.ShowsIdEpisodesService@@get_a_shows_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ShowsIdEpisodesService / get_a_shows_episodes",
          "shortDisplayName": "get_a_shows_episodes"
        }
      }],
      "qualifiedName": "com.spotify.ShowsIdEpisodesService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ShowsIdEpisodesService",
        "parameters": [],
        "name": "ShowsIdEpisodesService",
        "parameterizedName": "com.spotify.ShowsIdEpisodesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ShowsIdEpisodesService",
        "shortDisplayName": "ShowsIdEpisodesService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.EpisodesIdService",
        "parameters": [],
        "name": "EpisodesIdService",
        "parameterizedName": "com.spotify.EpisodesIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodesIdService",
        "shortDisplayName": "EpisodesIdService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.EpisodesIdService@@get_an_episode",
          "parameters": [],
          "name": "EpisodesIdService@@get_an_episode",
          "parameterizedName": "com.spotify.EpisodesIdService@@get_an_episode",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.EpisodesIdService / get_an_episode",
          "shortDisplayName": "get_an_episode"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.EpisodeObject",
          "parameters": [],
          "name": "EpisodeObject",
          "parameterizedName": "com.spotify.EpisodeObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.EpisodeObject",
          "shortDisplayName": "EpisodeObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/episodes/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.EpisodeObject",
            "parameters": [],
            "name": "EpisodeObject",
            "parameterizedName": "com.spotify.EpisodeObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.EpisodeObject",
            "shortDisplayName": "EpisodeObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single episode identified by its\n     unique Spotify ID.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.EpisodeObject",
          "parameters": [],
          "name": "EpisodeObject",
          "parameterizedName": "com.spotify.EpisodeObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.EpisodeObject",
          "shortDisplayName": "EpisodeObject"
        },
        "name": "get_an_episode",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.EpisodesIdService@@get_an_episode",
          "parameters": [],
          "name": "EpisodesIdService@@get_an_episode",
          "parameterizedName": "com.spotify.EpisodesIdService@@get_an_episode",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.EpisodesIdService / get_an_episode",
          "shortDisplayName": "get_an_episode"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service EpisodesIdService {\n         [[ Get Spotify catalog information for a single episode identified by its\n         unique Spotify ID.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/episodes/{id}\")\n         operation get_an_episode( @PathVariable(value = \"id\") id : String,  market : String ) : EpisodeObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5e08a8",
        "fullHash": "66e396fef6a4b72f448503dab10b013d7bd1ed605491cf3cdd825d57d278b279"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.EpisodesIdService@@get_an_episode",
          "parameters": [],
          "name": "EpisodesIdService@@get_an_episode",
          "parameterizedName": "com.spotify.EpisodesIdService@@get_an_episode",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.EpisodesIdService / get_an_episode",
          "shortDisplayName": "get_an_episode"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.EpisodeObject",
          "parameters": [],
          "name": "EpisodeObject",
          "parameterizedName": "com.spotify.EpisodeObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.EpisodeObject",
          "shortDisplayName": "EpisodeObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/episodes/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.EpisodeObject",
            "parameters": [],
            "name": "EpisodeObject",
            "parameterizedName": "com.spotify.EpisodeObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.EpisodeObject",
            "shortDisplayName": "EpisodeObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single episode identified by its\n     unique Spotify ID.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.EpisodeObject",
          "parameters": [],
          "name": "EpisodeObject",
          "parameterizedName": "com.spotify.EpisodeObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.EpisodeObject",
          "shortDisplayName": "EpisodeObject"
        },
        "name": "get_an_episode",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.EpisodesIdService@@get_an_episode",
          "parameters": [],
          "name": "EpisodesIdService@@get_an_episode",
          "parameterizedName": "com.spotify.EpisodesIdService@@get_an_episode",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.EpisodesIdService / get_an_episode",
          "shortDisplayName": "get_an_episode"
        }
      }],
      "qualifiedName": "com.spotify.EpisodesIdService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.EpisodesIdService",
        "parameters": [],
        "name": "EpisodesIdService",
        "parameterizedName": "com.spotify.EpisodesIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodesIdService",
        "shortDisplayName": "EpisodesIdService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.EpisodesService",
        "parameters": [],
        "name": "EpisodesService",
        "parameterizedName": "com.spotify.EpisodesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodesService",
        "shortDisplayName": "EpisodesService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.EpisodesService@@get_multiple_episodes",
          "parameters": [],
          "name": "EpisodesService@@get_multiple_episodes",
          "parameterizedName": "com.spotify.EpisodesService@@get_multiple_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.EpisodesService / get_multiple_episodes",
          "shortDisplayName": "get_multiple_episodes"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_episodes",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_episodes",
          "shortDisplayName": "AnonymousTypeGet_multiple_episodes"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/episodes"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
            "parameters": [],
            "name": "AnonymousTypeGet_multiple_episodes",
            "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_episodes",
            "shortDisplayName": "AnonymousTypeGet_multiple_episodes"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for several episodes based on their Spotify IDs.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_episodes",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_episodes",
          "shortDisplayName": "AnonymousTypeGet_multiple_episodes"
        },
        "name": "get_multiple_episodes",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.EpisodesService@@get_multiple_episodes",
          "parameters": [],
          "name": "EpisodesService@@get_multiple_episodes",
          "parameterizedName": "com.spotify.EpisodesService@@get_multiple_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.EpisodesService / get_multiple_episodes",
          "shortDisplayName": "get_multiple_episodes"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service EpisodesService {\n         [[ Get Spotify catalog information for several episodes based on their Spotify IDs.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/episodes\")\n         operation get_multiple_episodes(  ids : String,  market : String ) : AnonymousTypeGet_multiple_episodes\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "ebed89",
        "fullHash": "7b12d35332e09e575b9e32b763c1b5caa9452c79dea304520ac8595ac7da83a9"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.EpisodesService@@get_multiple_episodes",
          "parameters": [],
          "name": "EpisodesService@@get_multiple_episodes",
          "parameterizedName": "com.spotify.EpisodesService@@get_multiple_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.EpisodesService / get_multiple_episodes",
          "shortDisplayName": "get_multiple_episodes"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_episodes",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_episodes",
          "shortDisplayName": "AnonymousTypeGet_multiple_episodes"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/episodes"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
            "parameters": [],
            "name": "AnonymousTypeGet_multiple_episodes",
            "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_episodes",
            "shortDisplayName": "AnonymousTypeGet_multiple_episodes"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for several episodes based on their Spotify IDs.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_episodes",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_episodes",
          "shortDisplayName": "AnonymousTypeGet_multiple_episodes"
        },
        "name": "get_multiple_episodes",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.EpisodesService@@get_multiple_episodes",
          "parameters": [],
          "name": "EpisodesService@@get_multiple_episodes",
          "parameterizedName": "com.spotify.EpisodesService@@get_multiple_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.EpisodesService / get_multiple_episodes",
          "shortDisplayName": "get_multiple_episodes"
        }
      }],
      "qualifiedName": "com.spotify.EpisodesService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.EpisodesService",
        "parameters": [],
        "name": "EpisodesService",
        "parameterizedName": "com.spotify.EpisodesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.EpisodesService",
        "shortDisplayName": "EpisodesService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AudiobooksIdService",
        "parameters": [],
        "name": "AudiobooksIdService",
        "parameterizedName": "com.spotify.AudiobooksIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudiobooksIdService",
        "shortDisplayName": "AudiobooksIdService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.AudiobooksIdService@@get_an_audiobook",
          "parameters": [],
          "name": "AudiobooksIdService@@get_an_audiobook",
          "parameterizedName": "com.spotify.AudiobooksIdService@@get_an_audiobook",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobooksIdService / get_an_audiobook",
          "shortDisplayName": "get_an_audiobook"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AudiobookObject",
          "parameters": [],
          "name": "AudiobookObject",
          "parameterizedName": "com.spotify.AudiobookObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobookObject",
          "shortDisplayName": "AudiobookObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/audiobooks/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AudiobookObject",
            "parameters": [],
            "name": "AudiobookObject",
            "parameterizedName": "com.spotify.AudiobookObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AudiobookObject",
            "shortDisplayName": "AudiobookObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single audiobook.<br />\n     **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AudiobookObject",
          "parameters": [],
          "name": "AudiobookObject",
          "parameterizedName": "com.spotify.AudiobookObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobookObject",
          "shortDisplayName": "AudiobookObject"
        },
        "name": "get_an_audiobook",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.AudiobooksIdService@@get_an_audiobook",
          "parameters": [],
          "name": "AudiobooksIdService@@get_an_audiobook",
          "parameterizedName": "com.spotify.AudiobooksIdService@@get_an_audiobook",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobooksIdService / get_an_audiobook",
          "shortDisplayName": "get_an_audiobook"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service AudiobooksIdService {\n         [[ Get Spotify catalog information for a single audiobook.<br />\n         **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/audiobooks/{id}\")\n         operation get_an_audiobook( @PathVariable(value = \"id\") id : String,  market : String ) : AudiobookObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "6aedaa",
        "fullHash": "f0f71517c877e1ada4473ca80adc1420f60177684b8ddea1316bfe40cbf3b52c"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.AudiobooksIdService@@get_an_audiobook",
          "parameters": [],
          "name": "AudiobooksIdService@@get_an_audiobook",
          "parameterizedName": "com.spotify.AudiobooksIdService@@get_an_audiobook",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobooksIdService / get_an_audiobook",
          "shortDisplayName": "get_an_audiobook"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AudiobookObject",
          "parameters": [],
          "name": "AudiobookObject",
          "parameterizedName": "com.spotify.AudiobookObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobookObject",
          "shortDisplayName": "AudiobookObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/audiobooks/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AudiobookObject",
            "parameters": [],
            "name": "AudiobookObject",
            "parameterizedName": "com.spotify.AudiobookObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AudiobookObject",
            "shortDisplayName": "AudiobookObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single audiobook.<br />\n     **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AudiobookObject",
          "parameters": [],
          "name": "AudiobookObject",
          "parameterizedName": "com.spotify.AudiobookObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobookObject",
          "shortDisplayName": "AudiobookObject"
        },
        "name": "get_an_audiobook",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.AudiobooksIdService@@get_an_audiobook",
          "parameters": [],
          "name": "AudiobooksIdService@@get_an_audiobook",
          "parameterizedName": "com.spotify.AudiobooksIdService@@get_an_audiobook",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobooksIdService / get_an_audiobook",
          "shortDisplayName": "get_an_audiobook"
        }
      }],
      "qualifiedName": "com.spotify.AudiobooksIdService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AudiobooksIdService",
        "parameters": [],
        "name": "AudiobooksIdService",
        "parameterizedName": "com.spotify.AudiobooksIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudiobooksIdService",
        "shortDisplayName": "AudiobooksIdService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AudiobooksService",
        "parameters": [],
        "name": "AudiobooksService",
        "parameterizedName": "com.spotify.AudiobooksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudiobooksService",
        "shortDisplayName": "AudiobooksService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.AudiobooksService@@get_multiple_audiobooks",
          "parameters": [],
          "name": "AudiobooksService@@get_multiple_audiobooks",
          "parameterizedName": "com.spotify.AudiobooksService@@get_multiple_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobooksService / get_multiple_audiobooks",
          "shortDisplayName": "get_multiple_audiobooks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_audiobooks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
          "shortDisplayName": "AnonymousTypeGet_multiple_audiobooks"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/audiobooks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
            "parameters": [],
            "name": "AnonymousTypeGet_multiple_audiobooks",
            "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
            "shortDisplayName": "AnonymousTypeGet_multiple_audiobooks"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for several audiobooks identified by their Spotify IDs.<br />\n     **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_audiobooks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
          "shortDisplayName": "AnonymousTypeGet_multiple_audiobooks"
        },
        "name": "get_multiple_audiobooks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.AudiobooksService@@get_multiple_audiobooks",
          "parameters": [],
          "name": "AudiobooksService@@get_multiple_audiobooks",
          "parameterizedName": "com.spotify.AudiobooksService@@get_multiple_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobooksService / get_multiple_audiobooks",
          "shortDisplayName": "get_multiple_audiobooks"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service AudiobooksService {\n         [[ Get Spotify catalog information for several audiobooks identified by their Spotify IDs.<br />\n         **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/audiobooks\")\n         operation get_multiple_audiobooks(  ids : String,  market : String ) : AnonymousTypeGet_multiple_audiobooks\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "05bd41",
        "fullHash": "45868a2a965fea572cb39e3ba2ca71a9b4f5c1145edbed4e9fb58a7ebcf6eda6"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.AudiobooksService@@get_multiple_audiobooks",
          "parameters": [],
          "name": "AudiobooksService@@get_multiple_audiobooks",
          "parameterizedName": "com.spotify.AudiobooksService@@get_multiple_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobooksService / get_multiple_audiobooks",
          "shortDisplayName": "get_multiple_audiobooks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_audiobooks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
          "shortDisplayName": "AnonymousTypeGet_multiple_audiobooks"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/audiobooks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
            "parameters": [],
            "name": "AnonymousTypeGet_multiple_audiobooks",
            "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
            "shortDisplayName": "AnonymousTypeGet_multiple_audiobooks"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for several audiobooks identified by their Spotify IDs.<br />\n     **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
          "parameters": [],
          "name": "AnonymousTypeGet_multiple_audiobooks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_multiple_audiobooks",
          "shortDisplayName": "AnonymousTypeGet_multiple_audiobooks"
        },
        "name": "get_multiple_audiobooks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.AudiobooksService@@get_multiple_audiobooks",
          "parameters": [],
          "name": "AudiobooksService@@get_multiple_audiobooks",
          "parameterizedName": "com.spotify.AudiobooksService@@get_multiple_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobooksService / get_multiple_audiobooks",
          "shortDisplayName": "get_multiple_audiobooks"
        }
      }],
      "qualifiedName": "com.spotify.AudiobooksService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AudiobooksService",
        "parameters": [],
        "name": "AudiobooksService",
        "parameterizedName": "com.spotify.AudiobooksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudiobooksService",
        "shortDisplayName": "AudiobooksService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.AudiobooksIdChaptersService",
        "parameters": [],
        "name": "AudiobooksIdChaptersService",
        "parameterizedName": "com.spotify.AudiobooksIdChaptersService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudiobooksIdChaptersService",
        "shortDisplayName": "AudiobooksIdChaptersService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.AudiobooksIdChaptersService@@get_audiobook_chapters",
          "parameters": [],
          "name": "AudiobooksIdChaptersService@@get_audiobook_chapters",
          "parameterizedName": "com.spotify.AudiobooksIdChaptersService@@get_audiobook_chapters",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobooksIdChaptersService / get_audiobook_chapters",
          "shortDisplayName": "get_audiobook_chapters"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedChapterObject",
          "parameters": [],
          "name": "PagingSimplifiedChapterObject",
          "parameterizedName": "com.spotify.PagingSimplifiedChapterObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedChapterObject",
          "shortDisplayName": "PagingSimplifiedChapterObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/audiobooks/{id}/chapters"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedChapterObject",
            "parameters": [],
            "name": "PagingSimplifiedChapterObject",
            "parameterizedName": "com.spotify.PagingSimplifiedChapterObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedChapterObject",
            "shortDisplayName": "PagingSimplifiedChapterObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about an audiobook's chapters.<br />\n     **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedChapterObject",
          "parameters": [],
          "name": "PagingSimplifiedChapterObject",
          "parameterizedName": "com.spotify.PagingSimplifiedChapterObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedChapterObject",
          "shortDisplayName": "PagingSimplifiedChapterObject"
        },
        "name": "get_audiobook_chapters",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.AudiobooksIdChaptersService@@get_audiobook_chapters",
          "parameters": [],
          "name": "AudiobooksIdChaptersService@@get_audiobook_chapters",
          "parameterizedName": "com.spotify.AudiobooksIdChaptersService@@get_audiobook_chapters",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobooksIdChaptersService / get_audiobook_chapters",
          "shortDisplayName": "get_audiobook_chapters"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service AudiobooksIdChaptersService {\n         [[ Get Spotify catalog information about an audiobook's chapters.<br />\n         **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/audiobooks/{id}/chapters\")\n         operation get_audiobook_chapters( @PathVariable(value = \"id\") id : String,  market : String,  limit : Int,  offset : Int ) : PagingSimplifiedChapterObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5a831b",
        "fullHash": "b31e2b10b7f008687ea4283615997d2b990e93b1078acc56120e471fd87736f0"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.AudiobooksIdChaptersService@@get_audiobook_chapters",
          "parameters": [],
          "name": "AudiobooksIdChaptersService@@get_audiobook_chapters",
          "parameterizedName": "com.spotify.AudiobooksIdChaptersService@@get_audiobook_chapters",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobooksIdChaptersService / get_audiobook_chapters",
          "shortDisplayName": "get_audiobook_chapters"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedChapterObject",
          "parameters": [],
          "name": "PagingSimplifiedChapterObject",
          "parameterizedName": "com.spotify.PagingSimplifiedChapterObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedChapterObject",
          "shortDisplayName": "PagingSimplifiedChapterObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/audiobooks/{id}/chapters"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedChapterObject",
            "parameters": [],
            "name": "PagingSimplifiedChapterObject",
            "parameterizedName": "com.spotify.PagingSimplifiedChapterObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedChapterObject",
            "shortDisplayName": "PagingSimplifiedChapterObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about an audiobook's chapters.<br />\n     **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedChapterObject",
          "parameters": [],
          "name": "PagingSimplifiedChapterObject",
          "parameterizedName": "com.spotify.PagingSimplifiedChapterObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedChapterObject",
          "shortDisplayName": "PagingSimplifiedChapterObject"
        },
        "name": "get_audiobook_chapters",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.AudiobooksIdChaptersService@@get_audiobook_chapters",
          "parameters": [],
          "name": "AudiobooksIdChaptersService@@get_audiobook_chapters",
          "parameterizedName": "com.spotify.AudiobooksIdChaptersService@@get_audiobook_chapters",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudiobooksIdChaptersService / get_audiobook_chapters",
          "shortDisplayName": "get_audiobook_chapters"
        }
      }],
      "qualifiedName": "com.spotify.AudiobooksIdChaptersService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.AudiobooksIdChaptersService",
        "parameters": [],
        "name": "AudiobooksIdChaptersService",
        "parameterizedName": "com.spotify.AudiobooksIdChaptersService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.AudiobooksIdChaptersService",
        "shortDisplayName": "AudiobooksIdChaptersService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeAudiobooksService",
        "parameters": [],
        "name": "MeAudiobooksService",
        "parameterizedName": "com.spotify.MeAudiobooksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeAudiobooksService",
        "shortDisplayName": "MeAudiobooksService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksService@@get_users_saved_audiobooks",
          "parameters": [],
          "name": "MeAudiobooksService@@get_users_saved_audiobooks",
          "parameterizedName": "com.spotify.MeAudiobooksService@@get_users_saved_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksService / get_users_saved_audiobooks",
          "shortDisplayName": "get_users_saved_audiobooks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedAudiobookObject",
          "parameters": [],
          "name": "PagingSimplifiedAudiobookObject",
          "parameterizedName": "com.spotify.PagingSimplifiedAudiobookObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedAudiobookObject",
          "shortDisplayName": "PagingSimplifiedAudiobookObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/audiobooks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedAudiobookObject",
            "parameters": [],
            "name": "PagingSimplifiedAudiobookObject",
            "parameterizedName": "com.spotify.PagingSimplifiedAudiobookObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedAudiobookObject",
            "shortDisplayName": "PagingSimplifiedAudiobookObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of the audiobooks saved in the current Spotify user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedAudiobookObject",
          "parameters": [],
          "name": "PagingSimplifiedAudiobookObject",
          "parameterizedName": "com.spotify.PagingSimplifiedAudiobookObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedAudiobookObject",
          "shortDisplayName": "PagingSimplifiedAudiobookObject"
        },
        "name": "get_users_saved_audiobooks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksService@@get_users_saved_audiobooks",
          "parameters": [],
          "name": "MeAudiobooksService@@get_users_saved_audiobooks",
          "parameterizedName": "com.spotify.MeAudiobooksService@@get_users_saved_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksService / get_users_saved_audiobooks",
          "shortDisplayName": "get_users_saved_audiobooks"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksService@@save_audiobooks_user",
          "parameters": [],
          "name": "MeAudiobooksService@@save_audiobooks_user",
          "parameterizedName": "com.spotify.MeAudiobooksService@@save_audiobooks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksService / save_audiobooks_user",
          "shortDisplayName": "save_audiobooks_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/audiobooks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Save one or more audiobooks to the current Spotify user's library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "save_audiobooks_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksService@@save_audiobooks_user",
          "parameters": [],
          "name": "MeAudiobooksService@@save_audiobooks_user",
          "parameterizedName": "com.spotify.MeAudiobooksService@@save_audiobooks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksService / save_audiobooks_user",
          "shortDisplayName": "save_audiobooks_user"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksService@@remove_audiobooks_user",
          "parameters": [],
          "name": "MeAudiobooksService@@remove_audiobooks_user",
          "parameterizedName": "com.spotify.MeAudiobooksService@@remove_audiobooks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksService / remove_audiobooks_user",
          "shortDisplayName": "remove_audiobooks_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/me/audiobooks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Remove one or more audiobooks from the Spotify user's library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "remove_audiobooks_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksService@@remove_audiobooks_user",
          "parameters": [],
          "name": "MeAudiobooksService@@remove_audiobooks_user",
          "parameterizedName": "com.spotify.MeAudiobooksService@@remove_audiobooks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksService / remove_audiobooks_user",
          "shortDisplayName": "remove_audiobooks_user"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeAudiobooksService {\n         [[ Get a list of the audiobooks saved in the current Spotify user's 'Your Music' library.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/audiobooks\")\n         operation get_users_saved_audiobooks(  limit : Int,  offset : Int ) : PagingSimplifiedAudiobookObject\n         [[ Save one or more audiobooks to the current Spotify user's library.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/audiobooks\")\n         operation save_audiobooks_user(  ids : String )\n         [[ Remove one or more audiobooks from the Spotify user's library.\n         ]]\n         @HttpOperation(method = \"DELETE\" , url = \"https://api.spotify.com/v1/me/audiobooks\")\n         operation remove_audiobooks_user(  ids : String )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "8d6458",
        "fullHash": "e12509e3be0485e55461f31df0f5545b9b9174ea028449a4b442523e0d762e9b"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksService@@get_users_saved_audiobooks",
          "parameters": [],
          "name": "MeAudiobooksService@@get_users_saved_audiobooks",
          "parameterizedName": "com.spotify.MeAudiobooksService@@get_users_saved_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksService / get_users_saved_audiobooks",
          "shortDisplayName": "get_users_saved_audiobooks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedAudiobookObject",
          "parameters": [],
          "name": "PagingSimplifiedAudiobookObject",
          "parameterizedName": "com.spotify.PagingSimplifiedAudiobookObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedAudiobookObject",
          "shortDisplayName": "PagingSimplifiedAudiobookObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/audiobooks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSimplifiedAudiobookObject",
            "parameters": [],
            "name": "PagingSimplifiedAudiobookObject",
            "parameterizedName": "com.spotify.PagingSimplifiedAudiobookObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSimplifiedAudiobookObject",
            "shortDisplayName": "PagingSimplifiedAudiobookObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of the audiobooks saved in the current Spotify user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSimplifiedAudiobookObject",
          "parameters": [],
          "name": "PagingSimplifiedAudiobookObject",
          "parameterizedName": "com.spotify.PagingSimplifiedAudiobookObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSimplifiedAudiobookObject",
          "shortDisplayName": "PagingSimplifiedAudiobookObject"
        },
        "name": "get_users_saved_audiobooks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksService@@get_users_saved_audiobooks",
          "parameters": [],
          "name": "MeAudiobooksService@@get_users_saved_audiobooks",
          "parameterizedName": "com.spotify.MeAudiobooksService@@get_users_saved_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksService / get_users_saved_audiobooks",
          "shortDisplayName": "get_users_saved_audiobooks"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksService@@save_audiobooks_user",
          "parameters": [],
          "name": "MeAudiobooksService@@save_audiobooks_user",
          "parameterizedName": "com.spotify.MeAudiobooksService@@save_audiobooks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksService / save_audiobooks_user",
          "shortDisplayName": "save_audiobooks_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/audiobooks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Save one or more audiobooks to the current Spotify user's library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "save_audiobooks_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksService@@save_audiobooks_user",
          "parameters": [],
          "name": "MeAudiobooksService@@save_audiobooks_user",
          "parameterizedName": "com.spotify.MeAudiobooksService@@save_audiobooks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksService / save_audiobooks_user",
          "shortDisplayName": "save_audiobooks_user"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksService@@remove_audiobooks_user",
          "parameters": [],
          "name": "MeAudiobooksService@@remove_audiobooks_user",
          "parameterizedName": "com.spotify.MeAudiobooksService@@remove_audiobooks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksService / remove_audiobooks_user",
          "shortDisplayName": "remove_audiobooks_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/me/audiobooks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Remove one or more audiobooks from the Spotify user's library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "remove_audiobooks_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksService@@remove_audiobooks_user",
          "parameters": [],
          "name": "MeAudiobooksService@@remove_audiobooks_user",
          "parameterizedName": "com.spotify.MeAudiobooksService@@remove_audiobooks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksService / remove_audiobooks_user",
          "shortDisplayName": "remove_audiobooks_user"
        }
      }],
      "qualifiedName": "com.spotify.MeAudiobooksService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeAudiobooksService",
        "parameters": [],
        "name": "MeAudiobooksService",
        "parameterizedName": "com.spotify.MeAudiobooksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeAudiobooksService",
        "shortDisplayName": "MeAudiobooksService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeAudiobooksContainsService",
        "parameters": [],
        "name": "MeAudiobooksContainsService",
        "parameterizedName": "com.spotify.MeAudiobooksContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeAudiobooksContainsService",
        "shortDisplayName": "MeAudiobooksContainsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksContainsService@@check_users_saved_audiobooks",
          "parameters": [],
          "name": "MeAudiobooksContainsService@@check_users_saved_audiobooks",
          "parameterizedName": "com.spotify.MeAudiobooksContainsService@@check_users_saved_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksContainsService / check_users_saved_audiobooks",
          "shortDisplayName": "check_users_saved_audiobooks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/audiobooks/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check if one or more audiobooks are already saved in the current Spotify user's library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_users_saved_audiobooks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksContainsService@@check_users_saved_audiobooks",
          "parameters": [],
          "name": "MeAudiobooksContainsService@@check_users_saved_audiobooks",
          "parameterizedName": "com.spotify.MeAudiobooksContainsService@@check_users_saved_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksContainsService / check_users_saved_audiobooks",
          "shortDisplayName": "check_users_saved_audiobooks"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeAudiobooksContainsService {\n         [[ Check if one or more audiobooks are already saved in the current Spotify user's library.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/audiobooks/contains\")\n         operation check_users_saved_audiobooks(  ids : String ) : Boolean[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "8ca02b",
        "fullHash": "87f9b2197ba747e092415b790e0d30078479df8164cef7109e1fbacafeaf7a01"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksContainsService@@check_users_saved_audiobooks",
          "parameters": [],
          "name": "MeAudiobooksContainsService@@check_users_saved_audiobooks",
          "parameterizedName": "com.spotify.MeAudiobooksContainsService@@check_users_saved_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksContainsService / check_users_saved_audiobooks",
          "shortDisplayName": "check_users_saved_audiobooks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/audiobooks/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check if one or more audiobooks are already saved in the current Spotify user's library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_users_saved_audiobooks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAudiobooksContainsService@@check_users_saved_audiobooks",
          "parameters": [],
          "name": "MeAudiobooksContainsService@@check_users_saved_audiobooks",
          "parameterizedName": "com.spotify.MeAudiobooksContainsService@@check_users_saved_audiobooks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAudiobooksContainsService / check_users_saved_audiobooks",
          "shortDisplayName": "check_users_saved_audiobooks"
        }
      }],
      "qualifiedName": "com.spotify.MeAudiobooksContainsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeAudiobooksContainsService",
        "parameters": [],
        "name": "MeAudiobooksContainsService",
        "parameterizedName": "com.spotify.MeAudiobooksContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeAudiobooksContainsService",
        "shortDisplayName": "MeAudiobooksContainsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ChaptersIdService",
        "parameters": [],
        "name": "ChaptersIdService",
        "parameterizedName": "com.spotify.ChaptersIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChaptersIdService",
        "shortDisplayName": "ChaptersIdService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ChaptersIdService@@get_a_chapter",
          "parameters": [],
          "name": "ChaptersIdService@@get_a_chapter",
          "parameterizedName": "com.spotify.ChaptersIdService@@get_a_chapter",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ChaptersIdService / get_a_chapter",
          "shortDisplayName": "get_a_chapter"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.ChapterObject",
          "parameters": [],
          "name": "ChapterObject",
          "parameterizedName": "com.spotify.ChapterObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ChapterObject",
          "shortDisplayName": "ChapterObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/chapters/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.ChapterObject",
            "parameters": [],
            "name": "ChapterObject",
            "parameterizedName": "com.spotify.ChapterObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.ChapterObject",
            "shortDisplayName": "ChapterObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single chapter.<br />\n     **Note: Chapters are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.ChapterObject",
          "parameters": [],
          "name": "ChapterObject",
          "parameterizedName": "com.spotify.ChapterObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ChapterObject",
          "shortDisplayName": "ChapterObject"
        },
        "name": "get_a_chapter",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ChaptersIdService@@get_a_chapter",
          "parameters": [],
          "name": "ChaptersIdService@@get_a_chapter",
          "parameterizedName": "com.spotify.ChaptersIdService@@get_a_chapter",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ChaptersIdService / get_a_chapter",
          "shortDisplayName": "get_a_chapter"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service ChaptersIdService {\n         [[ Get Spotify catalog information for a single chapter.<br />\n         **Note: Chapters are only available for the US, UK, Ireland, New Zealand and Australia markets.**\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/chapters/{id}\")\n         operation get_a_chapter( @PathVariable(value = \"id\") id : String,  market : String ) : ChapterObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5878f6",
        "fullHash": "41bddcfbde337477c8ef7e507418641c24c9c204025af1c58fc8a1536dd45841"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ChaptersIdService@@get_a_chapter",
          "parameters": [],
          "name": "ChaptersIdService@@get_a_chapter",
          "parameterizedName": "com.spotify.ChaptersIdService@@get_a_chapter",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ChaptersIdService / get_a_chapter",
          "shortDisplayName": "get_a_chapter"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.ChapterObject",
          "parameters": [],
          "name": "ChapterObject",
          "parameterizedName": "com.spotify.ChapterObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ChapterObject",
          "shortDisplayName": "ChapterObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/chapters/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.ChapterObject",
            "parameters": [],
            "name": "ChapterObject",
            "parameterizedName": "com.spotify.ChapterObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.ChapterObject",
            "shortDisplayName": "ChapterObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single chapter.<br />\n     **Note: Chapters are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.ChapterObject",
          "parameters": [],
          "name": "ChapterObject",
          "parameterizedName": "com.spotify.ChapterObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ChapterObject",
          "shortDisplayName": "ChapterObject"
        },
        "name": "get_a_chapter",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ChaptersIdService@@get_a_chapter",
          "parameters": [],
          "name": "ChaptersIdService@@get_a_chapter",
          "parameterizedName": "com.spotify.ChaptersIdService@@get_a_chapter",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ChaptersIdService / get_a_chapter",
          "shortDisplayName": "get_a_chapter"
        }
      }],
      "qualifiedName": "com.spotify.ChaptersIdService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ChaptersIdService",
        "parameters": [],
        "name": "ChaptersIdService",
        "parameterizedName": "com.spotify.ChaptersIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChaptersIdService",
        "shortDisplayName": "ChaptersIdService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.ChaptersService",
        "parameters": [],
        "name": "ChaptersService",
        "parameterizedName": "com.spotify.ChaptersService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChaptersService",
        "shortDisplayName": "ChaptersService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ChaptersService@@get_several_chapters",
          "parameters": [],
          "name": "ChaptersService@@get_several_chapters",
          "parameterizedName": "com.spotify.ChaptersService@@get_several_chapters",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ChaptersService / get_several_chapters",
          "shortDisplayName": "get_several_chapters"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_chapters",
          "parameters": [],
          "name": "AnonymousTypeGet_several_chapters",
          "parameterizedName": "com.spotify.AnonymousTypeGet_several_chapters",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_several_chapters",
          "shortDisplayName": "AnonymousTypeGet_several_chapters"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/chapters"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_chapters",
            "parameters": [],
            "name": "AnonymousTypeGet_several_chapters",
            "parameterizedName": "com.spotify.AnonymousTypeGet_several_chapters",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_several_chapters",
            "shortDisplayName": "AnonymousTypeGet_several_chapters"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for several chapters identified by their Spotify IDs.<br />\n     **Note: Chapters are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_chapters",
          "parameters": [],
          "name": "AnonymousTypeGet_several_chapters",
          "parameterizedName": "com.spotify.AnonymousTypeGet_several_chapters",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_several_chapters",
          "shortDisplayName": "AnonymousTypeGet_several_chapters"
        },
        "name": "get_several_chapters",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ChaptersService@@get_several_chapters",
          "parameters": [],
          "name": "ChaptersService@@get_several_chapters",
          "parameterizedName": "com.spotify.ChaptersService@@get_several_chapters",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ChaptersService / get_several_chapters",
          "shortDisplayName": "get_several_chapters"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service ChaptersService {\n         [[ Get Spotify catalog information for several chapters identified by their Spotify IDs.<br />\n         **Note: Chapters are only available for the US, UK, Ireland, New Zealand and Australia markets.**\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/chapters\")\n         operation get_several_chapters(  ids : String,  market : String ) : AnonymousTypeGet_several_chapters\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "002aae",
        "fullHash": "dfa3e6649a790e9a084a9fc5f3ca845edba1b480cb285e0f665b71068e1d5019"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.ChaptersService@@get_several_chapters",
          "parameters": [],
          "name": "ChaptersService@@get_several_chapters",
          "parameterizedName": "com.spotify.ChaptersService@@get_several_chapters",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ChaptersService / get_several_chapters",
          "shortDisplayName": "get_several_chapters"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_chapters",
          "parameters": [],
          "name": "AnonymousTypeGet_several_chapters",
          "parameterizedName": "com.spotify.AnonymousTypeGet_several_chapters",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_several_chapters",
          "shortDisplayName": "AnonymousTypeGet_several_chapters"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/chapters"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_chapters",
            "parameters": [],
            "name": "AnonymousTypeGet_several_chapters",
            "parameterizedName": "com.spotify.AnonymousTypeGet_several_chapters",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_several_chapters",
            "shortDisplayName": "AnonymousTypeGet_several_chapters"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for several chapters identified by their Spotify IDs.<br />\n     **Note: Chapters are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_chapters",
          "parameters": [],
          "name": "AnonymousTypeGet_several_chapters",
          "parameterizedName": "com.spotify.AnonymousTypeGet_several_chapters",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_several_chapters",
          "shortDisplayName": "AnonymousTypeGet_several_chapters"
        },
        "name": "get_several_chapters",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.ChaptersService@@get_several_chapters",
          "parameters": [],
          "name": "ChaptersService@@get_several_chapters",
          "parameterizedName": "com.spotify.ChaptersService@@get_several_chapters",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.ChaptersService / get_several_chapters",
          "shortDisplayName": "get_several_chapters"
        }
      }],
      "qualifiedName": "com.spotify.ChaptersService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.ChaptersService",
        "parameters": [],
        "name": "ChaptersService",
        "parameterizedName": "com.spotify.ChaptersService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.ChaptersService",
        "shortDisplayName": "ChaptersService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.TracksIdService",
        "parameters": [],
        "name": "TracksIdService",
        "parameterizedName": "com.spotify.TracksIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TracksIdService",
        "shortDisplayName": "TracksIdService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.TracksIdService@@get_track",
          "parameters": [],
          "name": "TracksIdService@@get_track",
          "parameterizedName": "com.spotify.TracksIdService@@get_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.TracksIdService / get_track",
          "shortDisplayName": "get_track"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.TrackObject",
          "parameters": [],
          "name": "TrackObject",
          "parameterizedName": "com.spotify.TrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.TrackObject",
          "shortDisplayName": "TrackObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/tracks/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.TrackObject",
            "parameters": [],
            "name": "TrackObject",
            "parameterizedName": "com.spotify.TrackObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.TrackObject",
            "shortDisplayName": "TrackObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single track identified by its\n     unique Spotify ID.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.TrackObject",
          "parameters": [],
          "name": "TrackObject",
          "parameterizedName": "com.spotify.TrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.TrackObject",
          "shortDisplayName": "TrackObject"
        },
        "name": "get_track",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.TracksIdService@@get_track",
          "parameters": [],
          "name": "TracksIdService@@get_track",
          "parameterizedName": "com.spotify.TracksIdService@@get_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.TracksIdService / get_track",
          "shortDisplayName": "get_track"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service TracksIdService {\n         [[ Get Spotify catalog information for a single track identified by its\n         unique Spotify ID.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/tracks/{id}\")\n         operation get_track( @PathVariable(value = \"id\") id : String,  market : String ) : TrackObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "3e7618",
        "fullHash": "2bc84ef852ab6355e6781e4cb3ef80bef35eef374495eb5b83140000eb4dc2da"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.TracksIdService@@get_track",
          "parameters": [],
          "name": "TracksIdService@@get_track",
          "parameterizedName": "com.spotify.TracksIdService@@get_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.TracksIdService / get_track",
          "shortDisplayName": "get_track"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.TrackObject",
          "parameters": [],
          "name": "TrackObject",
          "parameterizedName": "com.spotify.TrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.TrackObject",
          "shortDisplayName": "TrackObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/tracks/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.TrackObject",
            "parameters": [],
            "name": "TrackObject",
            "parameterizedName": "com.spotify.TrackObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.TrackObject",
            "shortDisplayName": "TrackObject"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for a single track identified by its\n     unique Spotify ID.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.TrackObject",
          "parameters": [],
          "name": "TrackObject",
          "parameterizedName": "com.spotify.TrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.TrackObject",
          "shortDisplayName": "TrackObject"
        },
        "name": "get_track",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.TracksIdService@@get_track",
          "parameters": [],
          "name": "TracksIdService@@get_track",
          "parameterizedName": "com.spotify.TracksIdService@@get_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.TracksIdService / get_track",
          "shortDisplayName": "get_track"
        }
      }],
      "qualifiedName": "com.spotify.TracksIdService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.TracksIdService",
        "parameters": [],
        "name": "TracksIdService",
        "parameterizedName": "com.spotify.TracksIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TracksIdService",
        "shortDisplayName": "TracksIdService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.TracksService",
        "parameters": [],
        "name": "TracksService",
        "parameterizedName": "com.spotify.TracksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TracksService",
        "shortDisplayName": "TracksService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.TracksService@@get_several_tracks",
          "parameters": [],
          "name": "TracksService@@get_several_tracks",
          "parameterizedName": "com.spotify.TracksService@@get_several_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.TracksService / get_several_tracks",
          "shortDisplayName": "get_several_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_tracks",
          "parameters": [],
          "name": "AnonymousTypeGet_several_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_several_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_several_tracks",
          "shortDisplayName": "AnonymousTypeGet_several_tracks"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_tracks",
            "parameters": [],
            "name": "AnonymousTypeGet_several_tracks",
            "parameterizedName": "com.spotify.AnonymousTypeGet_several_tracks",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_several_tracks",
            "shortDisplayName": "AnonymousTypeGet_several_tracks"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for multiple tracks based on their Spotify IDs.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_tracks",
          "parameters": [],
          "name": "AnonymousTypeGet_several_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_several_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_several_tracks",
          "shortDisplayName": "AnonymousTypeGet_several_tracks"
        },
        "name": "get_several_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.TracksService@@get_several_tracks",
          "parameters": [],
          "name": "TracksService@@get_several_tracks",
          "parameterizedName": "com.spotify.TracksService@@get_several_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.TracksService / get_several_tracks",
          "shortDisplayName": "get_several_tracks"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service TracksService {\n         [[ Get Spotify catalog information for multiple tracks based on their Spotify IDs.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/tracks\")\n         operation get_several_tracks(  market : String,  ids : String ) : AnonymousTypeGet_several_tracks\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "2cda92",
        "fullHash": "4f7b290c3e7d21e0b62c9372f0b44b479914aaf7eb12b4897df32c58491bfd70"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.TracksService@@get_several_tracks",
          "parameters": [],
          "name": "TracksService@@get_several_tracks",
          "parameterizedName": "com.spotify.TracksService@@get_several_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.TracksService / get_several_tracks",
          "shortDisplayName": "get_several_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_tracks",
          "parameters": [],
          "name": "AnonymousTypeGet_several_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_several_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_several_tracks",
          "shortDisplayName": "AnonymousTypeGet_several_tracks"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_tracks",
            "parameters": [],
            "name": "AnonymousTypeGet_several_tracks",
            "parameterizedName": "com.spotify.AnonymousTypeGet_several_tracks",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_several_tracks",
            "shortDisplayName": "AnonymousTypeGet_several_tracks"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information for multiple tracks based on their Spotify IDs.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_tracks",
          "parameters": [],
          "name": "AnonymousTypeGet_several_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_several_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_several_tracks",
          "shortDisplayName": "AnonymousTypeGet_several_tracks"
        },
        "name": "get_several_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.TracksService@@get_several_tracks",
          "parameters": [],
          "name": "TracksService@@get_several_tracks",
          "parameterizedName": "com.spotify.TracksService@@get_several_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.TracksService / get_several_tracks",
          "shortDisplayName": "get_several_tracks"
        }
      }],
      "qualifiedName": "com.spotify.TracksService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.TracksService",
        "parameters": [],
        "name": "TracksService",
        "parameterizedName": "com.spotify.TracksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.TracksService",
        "shortDisplayName": "TracksService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.SearchService",
        "parameters": [],
        "name": "SearchService",
        "parameterizedName": "com.spotify.SearchService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SearchService",
        "shortDisplayName": "SearchService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.SearchService@@search",
          "parameters": [],
          "name": "SearchService@@search",
          "parameterizedName": "com.spotify.SearchService@@search",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.SearchService / search",
          "shortDisplayName": "search"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "`q`",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "name": "`type`",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "include_external",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeSearch",
          "parameters": [],
          "name": "AnonymousTypeSearch",
          "parameterizedName": "com.spotify.AnonymousTypeSearch",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeSearch",
          "shortDisplayName": "AnonymousTypeSearch"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/search"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSearch",
            "parameters": [],
            "name": "AnonymousTypeSearch",
            "parameterizedName": "com.spotify.AnonymousTypeSearch",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSearch",
            "shortDisplayName": "AnonymousTypeSearch"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about albums, artists, playlists, tracks, shows, episodes or audiobooks\n     that match a keyword string.<br />\n     **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeSearch",
          "parameters": [],
          "name": "AnonymousTypeSearch",
          "parameterizedName": "com.spotify.AnonymousTypeSearch",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeSearch",
          "shortDisplayName": "AnonymousTypeSearch"
        },
        "name": "search",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.SearchService@@search",
          "parameters": [],
          "name": "SearchService@@search",
          "parameterizedName": "com.spotify.SearchService@@search",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.SearchService / search",
          "shortDisplayName": "search"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service SearchService {\n         [[ Get Spotify catalog information about albums, artists, playlists, tracks, shows, episodes or audiobooks\n         that match a keyword string.<br />\n         **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/search\")\n         operation search(  `q` : String,  `type` : String[],  market : String,  limit : Int,  offset : Int,  include_external : String ) : AnonymousTypeSearch\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "50031b",
        "fullHash": "e9d078e620b8e482745d973d6d264555466c9870dcf424840767b96d252f3756"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.SearchService@@search",
          "parameters": [],
          "name": "SearchService@@search",
          "parameterizedName": "com.spotify.SearchService@@search",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.SearchService / search",
          "shortDisplayName": "search"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "`q`",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          },
          "name": "`type`",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.String",
              "parameters": [],
              "name": "String",
              "parameterizedName": "lang.taxi.String",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.String",
              "shortDisplayName": "String"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.String>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String[]",
            "shortDisplayName": "String[]"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "include_external",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeSearch",
          "parameters": [],
          "name": "AnonymousTypeSearch",
          "parameterizedName": "com.spotify.AnonymousTypeSearch",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeSearch",
          "shortDisplayName": "AnonymousTypeSearch"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/search"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSearch",
            "parameters": [],
            "name": "AnonymousTypeSearch",
            "parameterizedName": "com.spotify.AnonymousTypeSearch",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSearch",
            "shortDisplayName": "AnonymousTypeSearch"
          }, "constraints": []
        },
        "typeDoc": "Get Spotify catalog information about albums, artists, playlists, tracks, shows, episodes or audiobooks\n     that match a keyword string.<br />\n     **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeSearch",
          "parameters": [],
          "name": "AnonymousTypeSearch",
          "parameterizedName": "com.spotify.AnonymousTypeSearch",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeSearch",
          "shortDisplayName": "AnonymousTypeSearch"
        },
        "name": "search",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.SearchService@@search",
          "parameters": [],
          "name": "SearchService@@search",
          "parameterizedName": "com.spotify.SearchService@@search",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.SearchService / search",
          "shortDisplayName": "search"
        }
      }],
      "qualifiedName": "com.spotify.SearchService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.SearchService",
        "parameters": [],
        "name": "SearchService",
        "parameterizedName": "com.spotify.SearchService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.SearchService",
        "shortDisplayName": "SearchService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeService",
        "parameters": [],
        "name": "MeService",
        "parameterizedName": "com.spotify.MeService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeService",
        "shortDisplayName": "MeService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeService@@get_current_users_profile",
          "parameters": [],
          "name": "MeService@@get_current_users_profile",
          "parameterizedName": "com.spotify.MeService@@get_current_users_profile",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeService / get_current_users_profile",
          "shortDisplayName": "get_current_users_profile"
        },
        "parameters": [],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PrivateUserObject",
          "parameters": [],
          "name": "PrivateUserObject",
          "parameterizedName": "com.spotify.PrivateUserObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PrivateUserObject",
          "shortDisplayName": "PrivateUserObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PrivateUserObject",
            "parameters": [],
            "name": "PrivateUserObject",
            "parameterizedName": "com.spotify.PrivateUserObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PrivateUserObject",
            "shortDisplayName": "PrivateUserObject"
          }, "constraints": []
        },
        "typeDoc": "Get detailed profile information about the current user (including the\n     current user's username).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PrivateUserObject",
          "parameters": [],
          "name": "PrivateUserObject",
          "parameterizedName": "com.spotify.PrivateUserObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PrivateUserObject",
          "shortDisplayName": "PrivateUserObject"
        },
        "name": "get_current_users_profile",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeService@@get_current_users_profile",
          "parameters": [],
          "name": "MeService@@get_current_users_profile",
          "parameterizedName": "com.spotify.MeService@@get_current_users_profile",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeService / get_current_users_profile",
          "shortDisplayName": "get_current_users_profile"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeService {\n         [[ Get detailed profile information about the current user (including the\n         current user's username).\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me\")\n         operation get_current_users_profile(  ) : PrivateUserObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "07619a",
        "fullHash": "1fcd03f7fe3a793dc43160e7c30055d3bf390e5b03c26e1d112d8a00cbddae9d"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeService@@get_current_users_profile",
          "parameters": [],
          "name": "MeService@@get_current_users_profile",
          "parameterizedName": "com.spotify.MeService@@get_current_users_profile",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeService / get_current_users_profile",
          "shortDisplayName": "get_current_users_profile"
        },
        "parameters": [],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PrivateUserObject",
          "parameters": [],
          "name": "PrivateUserObject",
          "parameterizedName": "com.spotify.PrivateUserObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PrivateUserObject",
          "shortDisplayName": "PrivateUserObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PrivateUserObject",
            "parameters": [],
            "name": "PrivateUserObject",
            "parameterizedName": "com.spotify.PrivateUserObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PrivateUserObject",
            "shortDisplayName": "PrivateUserObject"
          }, "constraints": []
        },
        "typeDoc": "Get detailed profile information about the current user (including the\n     current user's username).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PrivateUserObject",
          "parameters": [],
          "name": "PrivateUserObject",
          "parameterizedName": "com.spotify.PrivateUserObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PrivateUserObject",
          "shortDisplayName": "PrivateUserObject"
        },
        "name": "get_current_users_profile",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeService@@get_current_users_profile",
          "parameters": [],
          "name": "MeService@@get_current_users_profile",
          "parameterizedName": "com.spotify.MeService@@get_current_users_profile",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeService / get_current_users_profile",
          "shortDisplayName": "get_current_users_profile"
        }
      }],
      "qualifiedName": "com.spotify.MeService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeService",
        "parameters": [],
        "name": "MeService",
        "parameterizedName": "com.spotify.MeService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeService",
        "shortDisplayName": "MeService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idService",
        "parameters": [],
        "name": "PlaylistsPlaylist_idService",
        "parameterizedName": "com.spotify.PlaylistsPlaylist_idService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistsPlaylist_idService",
        "shortDisplayName": "PlaylistsPlaylist_idService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idService@@get_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idService@@get_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idService@@get_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idService / get_playlist",
          "shortDisplayName": "get_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "fields",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "additional_types",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PlaylistObject",
          "parameters": [],
          "name": "PlaylistObject",
          "parameterizedName": "com.spotify.PlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistObject",
          "shortDisplayName": "PlaylistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/playlists/{playlist_id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PlaylistObject",
            "parameters": [],
            "name": "PlaylistObject",
            "parameterizedName": "com.spotify.PlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PlaylistObject",
            "shortDisplayName": "PlaylistObject"
          }, "constraints": []
        },
        "typeDoc": "Get a playlist owned by a Spotify user.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PlaylistObject",
          "parameters": [],
          "name": "PlaylistObject",
          "parameterizedName": "com.spotify.PlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistObject",
          "shortDisplayName": "PlaylistObject"
        },
        "name": "get_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idService@@get_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idService@@get_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idService@@get_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idService / get_playlist",
          "shortDisplayName": "get_playlist"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idService@@change_playlist_details",
          "parameters": [],
          "name": "PlaylistsPlaylist_idService@@change_playlist_details",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idService@@change_playlist_details",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idService / change_playlist_details",
          "shortDisplayName": "change_playlist_details"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
            "parameters": [],
            "name": "AnonymousTypeChange_playlist_detailsBody",
            "parameterizedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
            "shortDisplayName": "AnonymousTypeChange_playlist_detailsBody"
          },
          "name": "anonymousTypeChange_playlist_detailsBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
            "parameters": [],
            "name": "AnonymousTypeChange_playlist_detailsBody",
            "parameterizedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
            "shortDisplayName": "AnonymousTypeChange_playlist_detailsBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/playlists/{playlist_id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Change a playlist's name and public/private state. (The user must, of\n     course, own the playlist.)",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "change_playlist_details",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idService@@change_playlist_details",
          "parameters": [],
          "name": "PlaylistsPlaylist_idService@@change_playlist_details",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idService@@change_playlist_details",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idService / change_playlist_details",
          "shortDisplayName": "change_playlist_details"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service PlaylistsPlaylist_idService {\n         [[ Get a playlist owned by a Spotify user.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/playlists/{playlist_id}\")\n         operation get_playlist( @PathVariable(value = \"playlist_id\") playlist_id : String,  market : String,  fields : String,  additional_types : String ) : PlaylistObject\n         [[ Change a playlist's name and public/private state. (The user must, of\n         course, own the playlist.)\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/playlists/{playlist_id}\")\n         operation change_playlist_details( @PathVariable(value = \"playlist_id\") playlist_id : String, @RequestBody anonymousTypeChange_playlist_detailsBody : AnonymousTypeChange_playlist_detailsBody )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "14448c",
        "fullHash": "18922548d4f9643781892e525e1fc5c64727c0cff41e91cf3848c83b6c9d7cd4"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idService@@get_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idService@@get_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idService@@get_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idService / get_playlist",
          "shortDisplayName": "get_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "fields",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "additional_types",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PlaylistObject",
          "parameters": [],
          "name": "PlaylistObject",
          "parameterizedName": "com.spotify.PlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistObject",
          "shortDisplayName": "PlaylistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/playlists/{playlist_id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PlaylistObject",
            "parameters": [],
            "name": "PlaylistObject",
            "parameterizedName": "com.spotify.PlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PlaylistObject",
            "shortDisplayName": "PlaylistObject"
          }, "constraints": []
        },
        "typeDoc": "Get a playlist owned by a Spotify user.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PlaylistObject",
          "parameters": [],
          "name": "PlaylistObject",
          "parameterizedName": "com.spotify.PlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistObject",
          "shortDisplayName": "PlaylistObject"
        },
        "name": "get_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idService@@get_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idService@@get_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idService@@get_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idService / get_playlist",
          "shortDisplayName": "get_playlist"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idService@@change_playlist_details",
          "parameters": [],
          "name": "PlaylistsPlaylist_idService@@change_playlist_details",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idService@@change_playlist_details",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idService / change_playlist_details",
          "shortDisplayName": "change_playlist_details"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
            "parameters": [],
            "name": "AnonymousTypeChange_playlist_detailsBody",
            "parameterizedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
            "shortDisplayName": "AnonymousTypeChange_playlist_detailsBody"
          },
          "name": "anonymousTypeChange_playlist_detailsBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
            "parameters": [],
            "name": "AnonymousTypeChange_playlist_detailsBody",
            "parameterizedName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeChange_playlist_detailsBody",
            "shortDisplayName": "AnonymousTypeChange_playlist_detailsBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/playlists/{playlist_id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Change a playlist's name and public/private state. (The user must, of\n     course, own the playlist.)",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "change_playlist_details",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idService@@change_playlist_details",
          "parameters": [],
          "name": "PlaylistsPlaylist_idService@@change_playlist_details",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idService@@change_playlist_details",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idService / change_playlist_details",
          "shortDisplayName": "change_playlist_details"
        }
      }],
      "qualifiedName": "com.spotify.PlaylistsPlaylist_idService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idService",
        "parameters": [],
        "name": "PlaylistsPlaylist_idService",
        "parameterizedName": "com.spotify.PlaylistsPlaylist_idService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistsPlaylist_idService",
        "shortDisplayName": "PlaylistsPlaylist_idService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService",
        "parameters": [],
        "name": "PlaylistsPlaylist_idTracksService",
        "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService",
        "shortDisplayName": "PlaylistsPlaylist_idTracksService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@get_playlists_tracks",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@get_playlists_tracks",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@get_playlists_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / get_playlists_tracks",
          "shortDisplayName": "get_playlists_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "fields",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "additional_types",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingPlaylistTrackObject",
          "parameters": [],
          "name": "PagingPlaylistTrackObject",
          "parameterizedName": "com.spotify.PagingPlaylistTrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingPlaylistTrackObject",
          "shortDisplayName": "PagingPlaylistTrackObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingPlaylistTrackObject",
            "parameters": [],
            "name": "PagingPlaylistTrackObject",
            "parameterizedName": "com.spotify.PagingPlaylistTrackObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingPlaylistTrackObject",
            "shortDisplayName": "PagingPlaylistTrackObject"
          }, "constraints": []
        },
        "typeDoc": "Get full details of the items of a playlist owned by a Spotify user.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingPlaylistTrackObject",
          "parameters": [],
          "name": "PagingPlaylistTrackObject",
          "parameterizedName": "com.spotify.PagingPlaylistTrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingPlaylistTrackObject",
          "shortDisplayName": "PagingPlaylistTrackObject"
        },
        "name": "get_playlists_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@get_playlists_tracks",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@get_playlists_tracks",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@get_playlists_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / get_playlists_tracks",
          "shortDisplayName": "get_playlists_tracks"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@reorder_or_replace_playlists_tracks",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@reorder_or_replace_playlists_tracks",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@reorder_or_replace_playlists_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / reorder_or_replace_playlists_tracks",
          "shortDisplayName": "reorder_or_replace_playlists_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "uris",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "parameters": [],
            "name": "AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracksBody"
          },
          "name": "anonymousTypeReorder_or_replace_playlists_tracksBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "parameters": [],
            "name": "AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracksBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
          "parameters": [],
          "name": "AnonymousTypeReorder_or_replace_playlists_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
          "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracks"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
            "parameters": [],
            "name": "AnonymousTypeReorder_or_replace_playlists_tracks",
            "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
            "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracks"
          }, "constraints": []
        },
        "typeDoc": "Either reorder or replace items in a playlist depending on the request's parameters.\n     To reorder items, include `range_start`, `insert_before`, `range_length` and `snapshot_id` in the request's body.\n     To replace items, include `uris` as either a query parameter or in the request's body.\n     Replacing items in a playlist will overwrite its existing items. This operation can be used for replacing or clearing items in a playlist.\n     <br/>\n     **Note**: Replace and reorder are mutually exclusive operations which share the same endpoint, but have different parameters.\n     These operations can't be applied together in a single request.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
          "parameters": [],
          "name": "AnonymousTypeReorder_or_replace_playlists_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
          "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracks"
        },
        "name": "reorder_or_replace_playlists_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@reorder_or_replace_playlists_tracks",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@reorder_or_replace_playlists_tracks",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@reorder_or_replace_playlists_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / reorder_or_replace_playlists_tracks",
          "shortDisplayName": "reorder_or_replace_playlists_tracks"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@add_tracks_to_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@add_tracks_to_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@add_tracks_to_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / add_tracks_to_playlist",
          "shortDisplayName": "add_tracks_to_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "position",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "uris",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeAdd_tracks_to_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
            "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlistBody"
          },
          "name": "anonymousTypeAdd_tracks_to_playlistBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeAdd_tracks_to_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
            "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlistBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
          "parameters": [],
          "name": "AnonymousTypeAdd_tracks_to_playlist",
          "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
          "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlist"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "POST", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
            "parameters": [],
            "name": "AnonymousTypeAdd_tracks_to_playlist",
            "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
            "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlist"
          }, "constraints": []
        },
        "typeDoc": "Add one or more items to a user's playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
          "parameters": [],
          "name": "AnonymousTypeAdd_tracks_to_playlist",
          "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
          "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlist"
        },
        "name": "add_tracks_to_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@add_tracks_to_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@add_tracks_to_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@add_tracks_to_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / add_tracks_to_playlist",
          "shortDisplayName": "add_tracks_to_playlist"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@remove_tracks_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@remove_tracks_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@remove_tracks_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / remove_tracks_playlist",
          "shortDisplayName": "remove_tracks_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_tracks_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
            "shortDisplayName": "AnonymousTypeRemove_tracks_playlistBody"
          },
          "name": "anonymousTypeRemove_tracks_playlistBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_tracks_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
            "shortDisplayName": "AnonymousTypeRemove_tracks_playlistBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
          "parameters": [],
          "name": "AnonymousTypeRemove_tracks_playlist",
          "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
          "shortDisplayName": "AnonymousTypeRemove_tracks_playlist"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
            "parameters": [],
            "name": "AnonymousTypeRemove_tracks_playlist",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
            "shortDisplayName": "AnonymousTypeRemove_tracks_playlist"
          }, "constraints": []
        },
        "typeDoc": "Remove one or more items from a user's playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
          "parameters": [],
          "name": "AnonymousTypeRemove_tracks_playlist",
          "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
          "shortDisplayName": "AnonymousTypeRemove_tracks_playlist"
        },
        "name": "remove_tracks_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@remove_tracks_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@remove_tracks_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@remove_tracks_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / remove_tracks_playlist",
          "shortDisplayName": "remove_tracks_playlist"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service PlaylistsPlaylist_idTracksService {\n         [[ Get full details of the items of a playlist owned by a Spotify user.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/playlists/{playlist_id}/tracks\")\n         operation get_playlists_tracks( @PathVariable(value = \"playlist_id\") playlist_id : String,  market : String,  fields : String,  limit : Int,  offset : Int,  additional_types : String ) : PagingPlaylistTrackObject\n         [[ Either reorder or replace items in a playlist depending on the request's parameters.\n         To reorder items, include `range_start`, `insert_before`, `range_length` and `snapshot_id` in the request's body.\n         To replace items, include `uris` as either a query parameter or in the request's body.\n         Replacing items in a playlist will overwrite its existing items. This operation can be used for replacing or clearing items in a playlist.\n         <br/>\n         **Note**: Replace and reorder are mutually exclusive operations which share the same endpoint, but have different parameters.\n         These operations can't be applied together in a single request.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/playlists/{playlist_id}/tracks\")\n         operation reorder_or_replace_playlists_tracks( @PathVariable(value = \"playlist_id\") playlist_id : String,  uris : String, @RequestBody anonymousTypeReorder_or_replace_playlists_tracksBody : AnonymousTypeReorder_or_replace_playlists_tracksBody ) : AnonymousTypeReorder_or_replace_playlists_tracks\n         [[ Add one or more items to a user's playlist.\n         ]]\n         @HttpOperation(method = \"POST\" , url = \"https://api.spotify.com/v1/playlists/{playlist_id}/tracks\")\n         operation add_tracks_to_playlist( @PathVariable(value = \"playlist_id\") playlist_id : String,  position : Int,  uris : String, @RequestBody anonymousTypeAdd_tracks_to_playlistBody : AnonymousTypeAdd_tracks_to_playlistBody ) : AnonymousTypeAdd_tracks_to_playlist\n         [[ Remove one or more items from a user's playlist.\n         ]]\n         @HttpOperation(method = \"DELETE\" , url = \"https://api.spotify.com/v1/playlists/{playlist_id}/tracks\")\n         operation remove_tracks_playlist( @PathVariable(value = \"playlist_id\") playlist_id : String, @RequestBody anonymousTypeRemove_tracks_playlistBody : AnonymousTypeRemove_tracks_playlistBody ) : AnonymousTypeRemove_tracks_playlist\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "cf49e6",
        "fullHash": "e0c0e952489c3e18619100a2e7834e2cdb007660544992d55016afa0dd80f8d6"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@get_playlists_tracks",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@get_playlists_tracks",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@get_playlists_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / get_playlists_tracks",
          "shortDisplayName": "get_playlists_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "fields",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "additional_types",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingPlaylistTrackObject",
          "parameters": [],
          "name": "PagingPlaylistTrackObject",
          "parameterizedName": "com.spotify.PagingPlaylistTrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingPlaylistTrackObject",
          "shortDisplayName": "PagingPlaylistTrackObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingPlaylistTrackObject",
            "parameters": [],
            "name": "PagingPlaylistTrackObject",
            "parameterizedName": "com.spotify.PagingPlaylistTrackObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingPlaylistTrackObject",
            "shortDisplayName": "PagingPlaylistTrackObject"
          }, "constraints": []
        },
        "typeDoc": "Get full details of the items of a playlist owned by a Spotify user.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingPlaylistTrackObject",
          "parameters": [],
          "name": "PagingPlaylistTrackObject",
          "parameterizedName": "com.spotify.PagingPlaylistTrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingPlaylistTrackObject",
          "shortDisplayName": "PagingPlaylistTrackObject"
        },
        "name": "get_playlists_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@get_playlists_tracks",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@get_playlists_tracks",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@get_playlists_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / get_playlists_tracks",
          "shortDisplayName": "get_playlists_tracks"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@reorder_or_replace_playlists_tracks",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@reorder_or_replace_playlists_tracks",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@reorder_or_replace_playlists_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / reorder_or_replace_playlists_tracks",
          "shortDisplayName": "reorder_or_replace_playlists_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "uris",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "parameters": [],
            "name": "AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracksBody"
          },
          "name": "anonymousTypeReorder_or_replace_playlists_tracksBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "parameters": [],
            "name": "AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracksBody",
            "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracksBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
          "parameters": [],
          "name": "AnonymousTypeReorder_or_replace_playlists_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
          "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracks"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
            "parameters": [],
            "name": "AnonymousTypeReorder_or_replace_playlists_tracks",
            "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
            "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracks"
          }, "constraints": []
        },
        "typeDoc": "Either reorder or replace items in a playlist depending on the request's parameters.\n     To reorder items, include `range_start`, `insert_before`, `range_length` and `snapshot_id` in the request's body.\n     To replace items, include `uris` as either a query parameter or in the request's body.\n     Replacing items in a playlist will overwrite its existing items. This operation can be used for replacing or clearing items in a playlist.\n     <br/>\n     **Note**: Replace and reorder are mutually exclusive operations which share the same endpoint, but have different parameters.\n     These operations can't be applied together in a single request.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
          "parameters": [],
          "name": "AnonymousTypeReorder_or_replace_playlists_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeReorder_or_replace_playlists_tracks",
          "shortDisplayName": "AnonymousTypeReorder_or_replace_playlists_tracks"
        },
        "name": "reorder_or_replace_playlists_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@reorder_or_replace_playlists_tracks",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@reorder_or_replace_playlists_tracks",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@reorder_or_replace_playlists_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / reorder_or_replace_playlists_tracks",
          "shortDisplayName": "reorder_or_replace_playlists_tracks"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@add_tracks_to_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@add_tracks_to_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@add_tracks_to_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / add_tracks_to_playlist",
          "shortDisplayName": "add_tracks_to_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "position",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "uris",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeAdd_tracks_to_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
            "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlistBody"
          },
          "name": "anonymousTypeAdd_tracks_to_playlistBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeAdd_tracks_to_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlistBody",
            "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlistBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
          "parameters": [],
          "name": "AnonymousTypeAdd_tracks_to_playlist",
          "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
          "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlist"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "POST", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
            "parameters": [],
            "name": "AnonymousTypeAdd_tracks_to_playlist",
            "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
            "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlist"
          }, "constraints": []
        },
        "typeDoc": "Add one or more items to a user's playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
          "parameters": [],
          "name": "AnonymousTypeAdd_tracks_to_playlist",
          "parameterizedName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeAdd_tracks_to_playlist",
          "shortDisplayName": "AnonymousTypeAdd_tracks_to_playlist"
        },
        "name": "add_tracks_to_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@add_tracks_to_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@add_tracks_to_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@add_tracks_to_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / add_tracks_to_playlist",
          "shortDisplayName": "add_tracks_to_playlist"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@remove_tracks_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@remove_tracks_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@remove_tracks_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / remove_tracks_playlist",
          "shortDisplayName": "remove_tracks_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_tracks_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
            "shortDisplayName": "AnonymousTypeRemove_tracks_playlistBody"
          },
          "name": "anonymousTypeRemove_tracks_playlistBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_tracks_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlistBody",
            "shortDisplayName": "AnonymousTypeRemove_tracks_playlistBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
          "parameters": [],
          "name": "AnonymousTypeRemove_tracks_playlist",
          "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
          "shortDisplayName": "AnonymousTypeRemove_tracks_playlist"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
            "parameters": [],
            "name": "AnonymousTypeRemove_tracks_playlist",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
            "shortDisplayName": "AnonymousTypeRemove_tracks_playlist"
          }, "constraints": []
        },
        "typeDoc": "Remove one or more items from a user's playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
          "parameters": [],
          "name": "AnonymousTypeRemove_tracks_playlist",
          "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_playlist",
          "shortDisplayName": "AnonymousTypeRemove_tracks_playlist"
        },
        "name": "remove_tracks_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService@@remove_tracks_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idTracksService@@remove_tracks_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService@@remove_tracks_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService / remove_tracks_playlist",
          "shortDisplayName": "remove_tracks_playlist"
        }
      }],
      "qualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idTracksService",
        "parameters": [],
        "name": "PlaylistsPlaylist_idTracksService",
        "parameterizedName": "com.spotify.PlaylistsPlaylist_idTracksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistsPlaylist_idTracksService",
        "shortDisplayName": "PlaylistsPlaylist_idTracksService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlaylistsService",
        "parameters": [],
        "name": "MePlaylistsService",
        "parameterizedName": "com.spotify.MePlaylistsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlaylistsService",
        "shortDisplayName": "MePlaylistsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlaylistsService@@get_a_list_of_current_users_playlists",
          "parameters": [],
          "name": "MePlaylistsService@@get_a_list_of_current_users_playlists",
          "parameterizedName": "com.spotify.MePlaylistsService@@get_a_list_of_current_users_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlaylistsService / get_a_list_of_current_users_playlists",
          "shortDisplayName": "get_a_list_of_current_users_playlists"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
          "parameters": [],
          "name": "PagingPlaylistObject",
          "parameterizedName": "com.spotify.PagingPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingPlaylistObject",
          "shortDisplayName": "PagingPlaylistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/playlists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
            "parameters": [],
            "name": "PagingPlaylistObject",
            "parameterizedName": "com.spotify.PagingPlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingPlaylistObject",
            "shortDisplayName": "PagingPlaylistObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of the playlists owned or followed by the current Spotify\n     user.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
          "parameters": [],
          "name": "PagingPlaylistObject",
          "parameterizedName": "com.spotify.PagingPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingPlaylistObject",
          "shortDisplayName": "PagingPlaylistObject"
        },
        "name": "get_a_list_of_current_users_playlists",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlaylistsService@@get_a_list_of_current_users_playlists",
          "parameters": [],
          "name": "MePlaylistsService@@get_a_list_of_current_users_playlists",
          "parameterizedName": "com.spotify.MePlaylistsService@@get_a_list_of_current_users_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlaylistsService / get_a_list_of_current_users_playlists",
          "shortDisplayName": "get_a_list_of_current_users_playlists"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlaylistsService {\n         [[ Get a list of the playlists owned or followed by the current Spotify\n         user.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/playlists\")\n         operation get_a_list_of_current_users_playlists(  limit : Int,  offset : Int ) : PagingPlaylistObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "0ab15f",
        "fullHash": "26381382ccce10b69e0779caa89c81690a3eeb8c1c73c0f9490718b0b955fa38"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlaylistsService@@get_a_list_of_current_users_playlists",
          "parameters": [],
          "name": "MePlaylistsService@@get_a_list_of_current_users_playlists",
          "parameterizedName": "com.spotify.MePlaylistsService@@get_a_list_of_current_users_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlaylistsService / get_a_list_of_current_users_playlists",
          "shortDisplayName": "get_a_list_of_current_users_playlists"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
          "parameters": [],
          "name": "PagingPlaylistObject",
          "parameterizedName": "com.spotify.PagingPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingPlaylistObject",
          "shortDisplayName": "PagingPlaylistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/playlists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
            "parameters": [],
            "name": "PagingPlaylistObject",
            "parameterizedName": "com.spotify.PagingPlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingPlaylistObject",
            "shortDisplayName": "PagingPlaylistObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of the playlists owned or followed by the current Spotify\n     user.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
          "parameters": [],
          "name": "PagingPlaylistObject",
          "parameterizedName": "com.spotify.PagingPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingPlaylistObject",
          "shortDisplayName": "PagingPlaylistObject"
        },
        "name": "get_a_list_of_current_users_playlists",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlaylistsService@@get_a_list_of_current_users_playlists",
          "parameters": [],
          "name": "MePlaylistsService@@get_a_list_of_current_users_playlists",
          "parameterizedName": "com.spotify.MePlaylistsService@@get_a_list_of_current_users_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlaylistsService / get_a_list_of_current_users_playlists",
          "shortDisplayName": "get_a_list_of_current_users_playlists"
        }
      }],
      "qualifiedName": "com.spotify.MePlaylistsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlaylistsService",
        "parameters": [],
        "name": "MePlaylistsService",
        "parameterizedName": "com.spotify.MePlaylistsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlaylistsService",
        "shortDisplayName": "MePlaylistsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeAlbumsService",
        "parameters": [],
        "name": "MeAlbumsService",
        "parameterizedName": "com.spotify.MeAlbumsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeAlbumsService",
        "shortDisplayName": "MeAlbumsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsService@@get_users_saved_albums",
          "parameters": [],
          "name": "MeAlbumsService@@get_users_saved_albums",
          "parameterizedName": "com.spotify.MeAlbumsService@@get_users_saved_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsService / get_users_saved_albums",
          "shortDisplayName": "get_users_saved_albums"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSavedAlbumObject",
          "parameters": [],
          "name": "PagingSavedAlbumObject",
          "parameterizedName": "com.spotify.PagingSavedAlbumObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedAlbumObject",
          "shortDisplayName": "PagingSavedAlbumObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/albums"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSavedAlbumObject",
            "parameters": [],
            "name": "PagingSavedAlbumObject",
            "parameterizedName": "com.spotify.PagingSavedAlbumObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSavedAlbumObject",
            "shortDisplayName": "PagingSavedAlbumObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of the albums saved in the current Spotify user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSavedAlbumObject",
          "parameters": [],
          "name": "PagingSavedAlbumObject",
          "parameterizedName": "com.spotify.PagingSavedAlbumObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedAlbumObject",
          "shortDisplayName": "PagingSavedAlbumObject"
        },
        "name": "get_users_saved_albums",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsService@@get_users_saved_albums",
          "parameters": [],
          "name": "MeAlbumsService@@get_users_saved_albums",
          "parameterizedName": "com.spotify.MeAlbumsService@@get_users_saved_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsService / get_users_saved_albums",
          "shortDisplayName": "get_users_saved_albums"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsService@@save_albums_user",
          "parameters": [],
          "name": "MeAlbumsService@@save_albums_user",
          "parameterizedName": "com.spotify.MeAlbumsService@@save_albums_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsService / save_albums_user",
          "shortDisplayName": "save_albums_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSave_albums_userBody",
            "parameters": [],
            "name": "AnonymousTypeSave_albums_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeSave_albums_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSave_albums_userBody",
            "shortDisplayName": "AnonymousTypeSave_albums_userBody"
          },
          "name": "anonymousTypeSave_albums_userBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSave_albums_userBody",
            "parameters": [],
            "name": "AnonymousTypeSave_albums_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeSave_albums_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSave_albums_userBody",
            "shortDisplayName": "AnonymousTypeSave_albums_userBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/albums"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Save one or more albums to the current user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "save_albums_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsService@@save_albums_user",
          "parameters": [],
          "name": "MeAlbumsService@@save_albums_user",
          "parameterizedName": "com.spotify.MeAlbumsService@@save_albums_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsService / save_albums_user",
          "shortDisplayName": "save_albums_user"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsService@@remove_albums_user",
          "parameters": [],
          "name": "MeAlbumsService@@remove_albums_user",
          "parameterizedName": "com.spotify.MeAlbumsService@@remove_albums_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsService / remove_albums_user",
          "shortDisplayName": "remove_albums_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_albums_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_albums_userBody",
            "shortDisplayName": "AnonymousTypeRemove_albums_userBody"
          },
          "name": "anonymousTypeRemove_albums_userBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_albums_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_albums_userBody",
            "shortDisplayName": "AnonymousTypeRemove_albums_userBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/me/albums"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Remove one or more albums from the current user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "remove_albums_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsService@@remove_albums_user",
          "parameters": [],
          "name": "MeAlbumsService@@remove_albums_user",
          "parameterizedName": "com.spotify.MeAlbumsService@@remove_albums_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsService / remove_albums_user",
          "shortDisplayName": "remove_albums_user"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeAlbumsService {\n         [[ Get a list of the albums saved in the current Spotify user's 'Your Music' library.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/albums\")\n         operation get_users_saved_albums(  limit : Int,  offset : Int,  market : String ) : PagingSavedAlbumObject\n         [[ Save one or more albums to the current user's 'Your Music' library.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/albums\")\n         operation save_albums_user(  ids : String, @RequestBody anonymousTypeSave_albums_userBody : AnonymousTypeSave_albums_userBody )\n         [[ Remove one or more albums from the current user's 'Your Music' library.\n         ]]\n         @HttpOperation(method = \"DELETE\" , url = \"https://api.spotify.com/v1/me/albums\")\n         operation remove_albums_user(  ids : String, @RequestBody anonymousTypeRemove_albums_userBody : AnonymousTypeRemove_albums_userBody )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "513b4e",
        "fullHash": "cf376068707543538ee7b1e91d15724be5eb32b3de2015398dadcde5ce7fa82c"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsService@@get_users_saved_albums",
          "parameters": [],
          "name": "MeAlbumsService@@get_users_saved_albums",
          "parameterizedName": "com.spotify.MeAlbumsService@@get_users_saved_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsService / get_users_saved_albums",
          "shortDisplayName": "get_users_saved_albums"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSavedAlbumObject",
          "parameters": [],
          "name": "PagingSavedAlbumObject",
          "parameterizedName": "com.spotify.PagingSavedAlbumObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedAlbumObject",
          "shortDisplayName": "PagingSavedAlbumObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/albums"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSavedAlbumObject",
            "parameters": [],
            "name": "PagingSavedAlbumObject",
            "parameterizedName": "com.spotify.PagingSavedAlbumObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSavedAlbumObject",
            "shortDisplayName": "PagingSavedAlbumObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of the albums saved in the current Spotify user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSavedAlbumObject",
          "parameters": [],
          "name": "PagingSavedAlbumObject",
          "parameterizedName": "com.spotify.PagingSavedAlbumObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedAlbumObject",
          "shortDisplayName": "PagingSavedAlbumObject"
        },
        "name": "get_users_saved_albums",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsService@@get_users_saved_albums",
          "parameters": [],
          "name": "MeAlbumsService@@get_users_saved_albums",
          "parameterizedName": "com.spotify.MeAlbumsService@@get_users_saved_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsService / get_users_saved_albums",
          "shortDisplayName": "get_users_saved_albums"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsService@@save_albums_user",
          "parameters": [],
          "name": "MeAlbumsService@@save_albums_user",
          "parameterizedName": "com.spotify.MeAlbumsService@@save_albums_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsService / save_albums_user",
          "shortDisplayName": "save_albums_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSave_albums_userBody",
            "parameters": [],
            "name": "AnonymousTypeSave_albums_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeSave_albums_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSave_albums_userBody",
            "shortDisplayName": "AnonymousTypeSave_albums_userBody"
          },
          "name": "anonymousTypeSave_albums_userBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSave_albums_userBody",
            "parameters": [],
            "name": "AnonymousTypeSave_albums_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeSave_albums_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSave_albums_userBody",
            "shortDisplayName": "AnonymousTypeSave_albums_userBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/albums"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Save one or more albums to the current user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "save_albums_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsService@@save_albums_user",
          "parameters": [],
          "name": "MeAlbumsService@@save_albums_user",
          "parameterizedName": "com.spotify.MeAlbumsService@@save_albums_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsService / save_albums_user",
          "shortDisplayName": "save_albums_user"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsService@@remove_albums_user",
          "parameters": [],
          "name": "MeAlbumsService@@remove_albums_user",
          "parameterizedName": "com.spotify.MeAlbumsService@@remove_albums_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsService / remove_albums_user",
          "shortDisplayName": "remove_albums_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_albums_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_albums_userBody",
            "shortDisplayName": "AnonymousTypeRemove_albums_userBody"
          },
          "name": "anonymousTypeRemove_albums_userBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_albums_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_albums_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_albums_userBody",
            "shortDisplayName": "AnonymousTypeRemove_albums_userBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/me/albums"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Remove one or more albums from the current user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "remove_albums_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsService@@remove_albums_user",
          "parameters": [],
          "name": "MeAlbumsService@@remove_albums_user",
          "parameterizedName": "com.spotify.MeAlbumsService@@remove_albums_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsService / remove_albums_user",
          "shortDisplayName": "remove_albums_user"
        }
      }],
      "qualifiedName": "com.spotify.MeAlbumsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeAlbumsService",
        "parameters": [],
        "name": "MeAlbumsService",
        "parameterizedName": "com.spotify.MeAlbumsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeAlbumsService",
        "shortDisplayName": "MeAlbumsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeAlbumsContainsService",
        "parameters": [],
        "name": "MeAlbumsContainsService",
        "parameterizedName": "com.spotify.MeAlbumsContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeAlbumsContainsService",
        "shortDisplayName": "MeAlbumsContainsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsContainsService@@check_users_saved_albums",
          "parameters": [],
          "name": "MeAlbumsContainsService@@check_users_saved_albums",
          "parameterizedName": "com.spotify.MeAlbumsContainsService@@check_users_saved_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsContainsService / check_users_saved_albums",
          "shortDisplayName": "check_users_saved_albums"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/albums/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check if one or more albums is already saved in the current Spotify user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_users_saved_albums",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsContainsService@@check_users_saved_albums",
          "parameters": [],
          "name": "MeAlbumsContainsService@@check_users_saved_albums",
          "parameterizedName": "com.spotify.MeAlbumsContainsService@@check_users_saved_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsContainsService / check_users_saved_albums",
          "shortDisplayName": "check_users_saved_albums"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeAlbumsContainsService {\n         [[ Check if one or more albums is already saved in the current Spotify user's 'Your Music' library.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/albums/contains\")\n         operation check_users_saved_albums(  ids : String ) : Boolean[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "b1237b",
        "fullHash": "0ad4e59df3d5548f041c543befdec9dc266b2d0117a6e548c322273e926482ca"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsContainsService@@check_users_saved_albums",
          "parameters": [],
          "name": "MeAlbumsContainsService@@check_users_saved_albums",
          "parameterizedName": "com.spotify.MeAlbumsContainsService@@check_users_saved_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsContainsService / check_users_saved_albums",
          "shortDisplayName": "check_users_saved_albums"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/albums/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check if one or more albums is already saved in the current Spotify user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_users_saved_albums",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeAlbumsContainsService@@check_users_saved_albums",
          "parameters": [],
          "name": "MeAlbumsContainsService@@check_users_saved_albums",
          "parameterizedName": "com.spotify.MeAlbumsContainsService@@check_users_saved_albums",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeAlbumsContainsService / check_users_saved_albums",
          "shortDisplayName": "check_users_saved_albums"
        }
      }],
      "qualifiedName": "com.spotify.MeAlbumsContainsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeAlbumsContainsService",
        "parameters": [],
        "name": "MeAlbumsContainsService",
        "parameterizedName": "com.spotify.MeAlbumsContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeAlbumsContainsService",
        "shortDisplayName": "MeAlbumsContainsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeTracksService",
        "parameters": [],
        "name": "MeTracksService",
        "parameterizedName": "com.spotify.MeTracksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeTracksService",
        "shortDisplayName": "MeTracksService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksService@@get_users_saved_tracks",
          "parameters": [],
          "name": "MeTracksService@@get_users_saved_tracks",
          "parameterizedName": "com.spotify.MeTracksService@@get_users_saved_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksService / get_users_saved_tracks",
          "shortDisplayName": "get_users_saved_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSavedTrackObject",
          "parameters": [],
          "name": "PagingSavedTrackObject",
          "parameterizedName": "com.spotify.PagingSavedTrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedTrackObject",
          "shortDisplayName": "PagingSavedTrackObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSavedTrackObject",
            "parameters": [],
            "name": "PagingSavedTrackObject",
            "parameterizedName": "com.spotify.PagingSavedTrackObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSavedTrackObject",
            "shortDisplayName": "PagingSavedTrackObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of the songs saved in the current Spotify user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSavedTrackObject",
          "parameters": [],
          "name": "PagingSavedTrackObject",
          "parameterizedName": "com.spotify.PagingSavedTrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedTrackObject",
          "shortDisplayName": "PagingSavedTrackObject"
        },
        "name": "get_users_saved_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksService@@get_users_saved_tracks",
          "parameters": [],
          "name": "MeTracksService@@get_users_saved_tracks",
          "parameterizedName": "com.spotify.MeTracksService@@get_users_saved_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksService / get_users_saved_tracks",
          "shortDisplayName": "get_users_saved_tracks"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksService@@save_tracks_user",
          "parameters": [],
          "name": "MeTracksService@@save_tracks_user",
          "parameterizedName": "com.spotify.MeTracksService@@save_tracks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksService / save_tracks_user",
          "shortDisplayName": "save_tracks_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
            "parameters": [],
            "name": "AnonymousTypeSave_tracks_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSave_tracks_userBody",
            "shortDisplayName": "AnonymousTypeSave_tracks_userBody"
          },
          "name": "anonymousTypeSave_tracks_userBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
            "parameters": [],
            "name": "AnonymousTypeSave_tracks_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSave_tracks_userBody",
            "shortDisplayName": "AnonymousTypeSave_tracks_userBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Save one or more tracks to the current user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "save_tracks_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksService@@save_tracks_user",
          "parameters": [],
          "name": "MeTracksService@@save_tracks_user",
          "parameterizedName": "com.spotify.MeTracksService@@save_tracks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksService / save_tracks_user",
          "shortDisplayName": "save_tracks_user"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksService@@remove_tracks_user",
          "parameters": [],
          "name": "MeTracksService@@remove_tracks_user",
          "parameterizedName": "com.spotify.MeTracksService@@remove_tracks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksService / remove_tracks_user",
          "shortDisplayName": "remove_tracks_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_tracks_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
            "shortDisplayName": "AnonymousTypeRemove_tracks_userBody"
          },
          "name": "anonymousTypeRemove_tracks_userBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_tracks_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
            "shortDisplayName": "AnonymousTypeRemove_tracks_userBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/me/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Remove one or more tracks from the current user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "remove_tracks_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksService@@remove_tracks_user",
          "parameters": [],
          "name": "MeTracksService@@remove_tracks_user",
          "parameterizedName": "com.spotify.MeTracksService@@remove_tracks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksService / remove_tracks_user",
          "shortDisplayName": "remove_tracks_user"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeTracksService {\n         [[ Get a list of the songs saved in the current Spotify user's 'Your Music' library.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/tracks\")\n         operation get_users_saved_tracks(  market : String,  limit : Int,  offset : Int ) : PagingSavedTrackObject\n         [[ Save one or more tracks to the current user's 'Your Music' library.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/tracks\")\n         operation save_tracks_user(  ids : String, @RequestBody anonymousTypeSave_tracks_userBody : AnonymousTypeSave_tracks_userBody )\n         [[ Remove one or more tracks from the current user's 'Your Music' library.\n         ]]\n         @HttpOperation(method = \"DELETE\" , url = \"https://api.spotify.com/v1/me/tracks\")\n         operation remove_tracks_user(  ids : String, @RequestBody anonymousTypeRemove_tracks_userBody : AnonymousTypeRemove_tracks_userBody )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d3b418",
        "fullHash": "85fc823981eaec127239b91bf48d2111fcc8b1087112aff010adc0672e7306c9"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksService@@get_users_saved_tracks",
          "parameters": [],
          "name": "MeTracksService@@get_users_saved_tracks",
          "parameterizedName": "com.spotify.MeTracksService@@get_users_saved_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksService / get_users_saved_tracks",
          "shortDisplayName": "get_users_saved_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSavedTrackObject",
          "parameters": [],
          "name": "PagingSavedTrackObject",
          "parameterizedName": "com.spotify.PagingSavedTrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedTrackObject",
          "shortDisplayName": "PagingSavedTrackObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSavedTrackObject",
            "parameters": [],
            "name": "PagingSavedTrackObject",
            "parameterizedName": "com.spotify.PagingSavedTrackObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSavedTrackObject",
            "shortDisplayName": "PagingSavedTrackObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of the songs saved in the current Spotify user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSavedTrackObject",
          "parameters": [],
          "name": "PagingSavedTrackObject",
          "parameterizedName": "com.spotify.PagingSavedTrackObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedTrackObject",
          "shortDisplayName": "PagingSavedTrackObject"
        },
        "name": "get_users_saved_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksService@@get_users_saved_tracks",
          "parameters": [],
          "name": "MeTracksService@@get_users_saved_tracks",
          "parameterizedName": "com.spotify.MeTracksService@@get_users_saved_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksService / get_users_saved_tracks",
          "shortDisplayName": "get_users_saved_tracks"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksService@@save_tracks_user",
          "parameters": [],
          "name": "MeTracksService@@save_tracks_user",
          "parameterizedName": "com.spotify.MeTracksService@@save_tracks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksService / save_tracks_user",
          "shortDisplayName": "save_tracks_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
            "parameters": [],
            "name": "AnonymousTypeSave_tracks_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSave_tracks_userBody",
            "shortDisplayName": "AnonymousTypeSave_tracks_userBody"
          },
          "name": "anonymousTypeSave_tracks_userBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
            "parameters": [],
            "name": "AnonymousTypeSave_tracks_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeSave_tracks_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSave_tracks_userBody",
            "shortDisplayName": "AnonymousTypeSave_tracks_userBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Save one or more tracks to the current user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "save_tracks_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksService@@save_tracks_user",
          "parameters": [],
          "name": "MeTracksService@@save_tracks_user",
          "parameterizedName": "com.spotify.MeTracksService@@save_tracks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksService / save_tracks_user",
          "shortDisplayName": "save_tracks_user"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksService@@remove_tracks_user",
          "parameters": [],
          "name": "MeTracksService@@remove_tracks_user",
          "parameterizedName": "com.spotify.MeTracksService@@remove_tracks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksService / remove_tracks_user",
          "shortDisplayName": "remove_tracks_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_tracks_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
            "shortDisplayName": "AnonymousTypeRemove_tracks_userBody"
          },
          "name": "anonymousTypeRemove_tracks_userBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_tracks_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_tracks_userBody",
            "shortDisplayName": "AnonymousTypeRemove_tracks_userBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/me/tracks"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Remove one or more tracks from the current user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "remove_tracks_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksService@@remove_tracks_user",
          "parameters": [],
          "name": "MeTracksService@@remove_tracks_user",
          "parameterizedName": "com.spotify.MeTracksService@@remove_tracks_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksService / remove_tracks_user",
          "shortDisplayName": "remove_tracks_user"
        }
      }],
      "qualifiedName": "com.spotify.MeTracksService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeTracksService",
        "parameters": [],
        "name": "MeTracksService",
        "parameterizedName": "com.spotify.MeTracksService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeTracksService",
        "shortDisplayName": "MeTracksService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeTracksContainsService",
        "parameters": [],
        "name": "MeTracksContainsService",
        "parameterizedName": "com.spotify.MeTracksContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeTracksContainsService",
        "shortDisplayName": "MeTracksContainsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksContainsService@@check_users_saved_tracks",
          "parameters": [],
          "name": "MeTracksContainsService@@check_users_saved_tracks",
          "parameterizedName": "com.spotify.MeTracksContainsService@@check_users_saved_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksContainsService / check_users_saved_tracks",
          "shortDisplayName": "check_users_saved_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/tracks/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check if one or more tracks is already saved in the current Spotify user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_users_saved_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksContainsService@@check_users_saved_tracks",
          "parameters": [],
          "name": "MeTracksContainsService@@check_users_saved_tracks",
          "parameterizedName": "com.spotify.MeTracksContainsService@@check_users_saved_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksContainsService / check_users_saved_tracks",
          "shortDisplayName": "check_users_saved_tracks"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeTracksContainsService {\n         [[ Check if one or more tracks is already saved in the current Spotify user's 'Your Music' library.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/tracks/contains\")\n         operation check_users_saved_tracks(  ids : String ) : Boolean[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "db0c30",
        "fullHash": "d94390704b9db6600bc7705e3c07b495afdda8a849508c33b731f9fda27f7425"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksContainsService@@check_users_saved_tracks",
          "parameters": [],
          "name": "MeTracksContainsService@@check_users_saved_tracks",
          "parameterizedName": "com.spotify.MeTracksContainsService@@check_users_saved_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksContainsService / check_users_saved_tracks",
          "shortDisplayName": "check_users_saved_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/tracks/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check if one or more tracks is already saved in the current Spotify user's 'Your Music' library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_users_saved_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTracksContainsService@@check_users_saved_tracks",
          "parameters": [],
          "name": "MeTracksContainsService@@check_users_saved_tracks",
          "parameterizedName": "com.spotify.MeTracksContainsService@@check_users_saved_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTracksContainsService / check_users_saved_tracks",
          "shortDisplayName": "check_users_saved_tracks"
        }
      }],
      "qualifiedName": "com.spotify.MeTracksContainsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeTracksContainsService",
        "parameters": [],
        "name": "MeTracksContainsService",
        "parameterizedName": "com.spotify.MeTracksContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeTracksContainsService",
        "shortDisplayName": "MeTracksContainsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeEpisodesService",
        "parameters": [],
        "name": "MeEpisodesService",
        "parameterizedName": "com.spotify.MeEpisodesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeEpisodesService",
        "shortDisplayName": "MeEpisodesService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesService@@get_users_saved_episodes",
          "parameters": [],
          "name": "MeEpisodesService@@get_users_saved_episodes",
          "parameterizedName": "com.spotify.MeEpisodesService@@get_users_saved_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesService / get_users_saved_episodes",
          "shortDisplayName": "get_users_saved_episodes"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSavedEpisodeObject",
          "parameters": [],
          "name": "PagingSavedEpisodeObject",
          "parameterizedName": "com.spotify.PagingSavedEpisodeObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedEpisodeObject",
          "shortDisplayName": "PagingSavedEpisodeObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/episodes"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSavedEpisodeObject",
            "parameters": [],
            "name": "PagingSavedEpisodeObject",
            "parameterizedName": "com.spotify.PagingSavedEpisodeObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSavedEpisodeObject",
            "shortDisplayName": "PagingSavedEpisodeObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of the episodes saved in the current Spotify user's library.<br/>\n     This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSavedEpisodeObject",
          "parameters": [],
          "name": "PagingSavedEpisodeObject",
          "parameterizedName": "com.spotify.PagingSavedEpisodeObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedEpisodeObject",
          "shortDisplayName": "PagingSavedEpisodeObject"
        },
        "name": "get_users_saved_episodes",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesService@@get_users_saved_episodes",
          "parameters": [],
          "name": "MeEpisodesService@@get_users_saved_episodes",
          "parameterizedName": "com.spotify.MeEpisodesService@@get_users_saved_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesService / get_users_saved_episodes",
          "shortDisplayName": "get_users_saved_episodes"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesService@@save_episodes_user",
          "parameters": [],
          "name": "MeEpisodesService@@save_episodes_user",
          "parameterizedName": "com.spotify.MeEpisodesService@@save_episodes_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesService / save_episodes_user",
          "shortDisplayName": "save_episodes_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
            "parameters": [],
            "name": "AnonymousTypeSave_episodes_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSave_episodes_userBody",
            "shortDisplayName": "AnonymousTypeSave_episodes_userBody"
          },
          "name": "anonymousTypeSave_episodes_userBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
            "parameters": [],
            "name": "AnonymousTypeSave_episodes_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSave_episodes_userBody",
            "shortDisplayName": "AnonymousTypeSave_episodes_userBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/episodes"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Save one or more episodes to the current user's library.<br/>\n     This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "save_episodes_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesService@@save_episodes_user",
          "parameters": [],
          "name": "MeEpisodesService@@save_episodes_user",
          "parameterizedName": "com.spotify.MeEpisodesService@@save_episodes_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesService / save_episodes_user",
          "shortDisplayName": "save_episodes_user"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesService@@remove_episodes_user",
          "parameters": [],
          "name": "MeEpisodesService@@remove_episodes_user",
          "parameterizedName": "com.spotify.MeEpisodesService@@remove_episodes_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesService / remove_episodes_user",
          "shortDisplayName": "remove_episodes_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_episodes_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
            "shortDisplayName": "AnonymousTypeRemove_episodes_userBody"
          },
          "name": "anonymousTypeRemove_episodes_userBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_episodes_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
            "shortDisplayName": "AnonymousTypeRemove_episodes_userBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/me/episodes"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Remove one or more episodes from the current user's library.<br/>\n     This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "remove_episodes_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesService@@remove_episodes_user",
          "parameters": [],
          "name": "MeEpisodesService@@remove_episodes_user",
          "parameterizedName": "com.spotify.MeEpisodesService@@remove_episodes_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesService / remove_episodes_user",
          "shortDisplayName": "remove_episodes_user"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeEpisodesService {\n         [[ Get a list of the episodes saved in the current Spotify user's library.<br/>\n         This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/episodes\")\n         operation get_users_saved_episodes(  market : String,  limit : Int,  offset : Int ) : PagingSavedEpisodeObject\n         [[ Save one or more episodes to the current user's library.<br/>\n         This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/episodes\")\n         operation save_episodes_user(  ids : String, @RequestBody anonymousTypeSave_episodes_userBody : AnonymousTypeSave_episodes_userBody )\n         [[ Remove one or more episodes from the current user's library.<br/>\n         This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).\n         ]]\n         @HttpOperation(method = \"DELETE\" , url = \"https://api.spotify.com/v1/me/episodes\")\n         operation remove_episodes_user(  ids : String, @RequestBody anonymousTypeRemove_episodes_userBody : AnonymousTypeRemove_episodes_userBody )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "faaafe",
        "fullHash": "f62dcf048e0efb6e39195959ebf45dfefb217d1bd21d66afb9606390c7b87e00"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesService@@get_users_saved_episodes",
          "parameters": [],
          "name": "MeEpisodesService@@get_users_saved_episodes",
          "parameterizedName": "com.spotify.MeEpisodesService@@get_users_saved_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesService / get_users_saved_episodes",
          "shortDisplayName": "get_users_saved_episodes"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSavedEpisodeObject",
          "parameters": [],
          "name": "PagingSavedEpisodeObject",
          "parameterizedName": "com.spotify.PagingSavedEpisodeObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedEpisodeObject",
          "shortDisplayName": "PagingSavedEpisodeObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/episodes"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSavedEpisodeObject",
            "parameters": [],
            "name": "PagingSavedEpisodeObject",
            "parameterizedName": "com.spotify.PagingSavedEpisodeObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSavedEpisodeObject",
            "shortDisplayName": "PagingSavedEpisodeObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of the episodes saved in the current Spotify user's library.<br/>\n     This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSavedEpisodeObject",
          "parameters": [],
          "name": "PagingSavedEpisodeObject",
          "parameterizedName": "com.spotify.PagingSavedEpisodeObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedEpisodeObject",
          "shortDisplayName": "PagingSavedEpisodeObject"
        },
        "name": "get_users_saved_episodes",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesService@@get_users_saved_episodes",
          "parameters": [],
          "name": "MeEpisodesService@@get_users_saved_episodes",
          "parameterizedName": "com.spotify.MeEpisodesService@@get_users_saved_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesService / get_users_saved_episodes",
          "shortDisplayName": "get_users_saved_episodes"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesService@@save_episodes_user",
          "parameters": [],
          "name": "MeEpisodesService@@save_episodes_user",
          "parameterizedName": "com.spotify.MeEpisodesService@@save_episodes_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesService / save_episodes_user",
          "shortDisplayName": "save_episodes_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
            "parameters": [],
            "name": "AnonymousTypeSave_episodes_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSave_episodes_userBody",
            "shortDisplayName": "AnonymousTypeSave_episodes_userBody"
          },
          "name": "anonymousTypeSave_episodes_userBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
            "parameters": [],
            "name": "AnonymousTypeSave_episodes_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeSave_episodes_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeSave_episodes_userBody",
            "shortDisplayName": "AnonymousTypeSave_episodes_userBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/episodes"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Save one or more episodes to the current user's library.<br/>\n     This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "save_episodes_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesService@@save_episodes_user",
          "parameters": [],
          "name": "MeEpisodesService@@save_episodes_user",
          "parameterizedName": "com.spotify.MeEpisodesService@@save_episodes_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesService / save_episodes_user",
          "shortDisplayName": "save_episodes_user"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesService@@remove_episodes_user",
          "parameters": [],
          "name": "MeEpisodesService@@remove_episodes_user",
          "parameterizedName": "com.spotify.MeEpisodesService@@remove_episodes_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesService / remove_episodes_user",
          "shortDisplayName": "remove_episodes_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_episodes_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
            "shortDisplayName": "AnonymousTypeRemove_episodes_userBody"
          },
          "name": "anonymousTypeRemove_episodes_userBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
            "parameters": [],
            "name": "AnonymousTypeRemove_episodes_userBody",
            "parameterizedName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeRemove_episodes_userBody",
            "shortDisplayName": "AnonymousTypeRemove_episodes_userBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/me/episodes"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Remove one or more episodes from the current user's library.<br/>\n     This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "remove_episodes_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesService@@remove_episodes_user",
          "parameters": [],
          "name": "MeEpisodesService@@remove_episodes_user",
          "parameterizedName": "com.spotify.MeEpisodesService@@remove_episodes_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesService / remove_episodes_user",
          "shortDisplayName": "remove_episodes_user"
        }
      }],
      "qualifiedName": "com.spotify.MeEpisodesService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeEpisodesService",
        "parameters": [],
        "name": "MeEpisodesService",
        "parameterizedName": "com.spotify.MeEpisodesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeEpisodesService",
        "shortDisplayName": "MeEpisodesService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeEpisodesContainsService",
        "parameters": [],
        "name": "MeEpisodesContainsService",
        "parameterizedName": "com.spotify.MeEpisodesContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeEpisodesContainsService",
        "shortDisplayName": "MeEpisodesContainsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesContainsService@@check_users_saved_episodes",
          "parameters": [],
          "name": "MeEpisodesContainsService@@check_users_saved_episodes",
          "parameterizedName": "com.spotify.MeEpisodesContainsService@@check_users_saved_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesContainsService / check_users_saved_episodes",
          "shortDisplayName": "check_users_saved_episodes"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/episodes/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check if one or more episodes is already saved in the current Spotify user's 'Your Episodes' library.<br/>\n     This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer)..",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_users_saved_episodes",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesContainsService@@check_users_saved_episodes",
          "parameters": [],
          "name": "MeEpisodesContainsService@@check_users_saved_episodes",
          "parameterizedName": "com.spotify.MeEpisodesContainsService@@check_users_saved_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesContainsService / check_users_saved_episodes",
          "shortDisplayName": "check_users_saved_episodes"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeEpisodesContainsService {\n         [[ Check if one or more episodes is already saved in the current Spotify user's 'Your Episodes' library.<br/>\n         This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer)..\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/episodes/contains\")\n         operation check_users_saved_episodes(  ids : String ) : Boolean[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "b3c7a9",
        "fullHash": "ba84a037254e0c787dfdd46eb8a4a9fc22e986018132a555541e49d3c302cfe2"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesContainsService@@check_users_saved_episodes",
          "parameters": [],
          "name": "MeEpisodesContainsService@@check_users_saved_episodes",
          "parameterizedName": "com.spotify.MeEpisodesContainsService@@check_users_saved_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesContainsService / check_users_saved_episodes",
          "shortDisplayName": "check_users_saved_episodes"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/episodes/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check if one or more episodes is already saved in the current Spotify user's 'Your Episodes' library.<br/>\n     This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer)..",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_users_saved_episodes",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeEpisodesContainsService@@check_users_saved_episodes",
          "parameters": [],
          "name": "MeEpisodesContainsService@@check_users_saved_episodes",
          "parameterizedName": "com.spotify.MeEpisodesContainsService@@check_users_saved_episodes",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeEpisodesContainsService / check_users_saved_episodes",
          "shortDisplayName": "check_users_saved_episodes"
        }
      }],
      "qualifiedName": "com.spotify.MeEpisodesContainsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeEpisodesContainsService",
        "parameters": [],
        "name": "MeEpisodesContainsService",
        "parameterizedName": "com.spotify.MeEpisodesContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeEpisodesContainsService",
        "shortDisplayName": "MeEpisodesContainsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeShowsService",
        "parameters": [],
        "name": "MeShowsService",
        "parameterizedName": "com.spotify.MeShowsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeShowsService",
        "shortDisplayName": "MeShowsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsService@@get_users_saved_shows",
          "parameters": [],
          "name": "MeShowsService@@get_users_saved_shows",
          "parameterizedName": "com.spotify.MeShowsService@@get_users_saved_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsService / get_users_saved_shows",
          "shortDisplayName": "get_users_saved_shows"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSavedShowObject",
          "parameters": [],
          "name": "PagingSavedShowObject",
          "parameterizedName": "com.spotify.PagingSavedShowObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedShowObject",
          "shortDisplayName": "PagingSavedShowObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/shows"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSavedShowObject",
            "parameters": [],
            "name": "PagingSavedShowObject",
            "parameterizedName": "com.spotify.PagingSavedShowObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSavedShowObject",
            "shortDisplayName": "PagingSavedShowObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of shows saved in the current Spotify user's library. Optional parameters can be used to limit the number of shows returned.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSavedShowObject",
          "parameters": [],
          "name": "PagingSavedShowObject",
          "parameterizedName": "com.spotify.PagingSavedShowObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedShowObject",
          "shortDisplayName": "PagingSavedShowObject"
        },
        "name": "get_users_saved_shows",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsService@@get_users_saved_shows",
          "parameters": [],
          "name": "MeShowsService@@get_users_saved_shows",
          "parameterizedName": "com.spotify.MeShowsService@@get_users_saved_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsService / get_users_saved_shows",
          "shortDisplayName": "get_users_saved_shows"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsService@@save_shows_user",
          "parameters": [],
          "name": "MeShowsService@@save_shows_user",
          "parameterizedName": "com.spotify.MeShowsService@@save_shows_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsService / save_shows_user",
          "shortDisplayName": "save_shows_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/shows"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Save one or more shows to current Spotify user's library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "save_shows_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsService@@save_shows_user",
          "parameters": [],
          "name": "MeShowsService@@save_shows_user",
          "parameterizedName": "com.spotify.MeShowsService@@save_shows_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsService / save_shows_user",
          "shortDisplayName": "save_shows_user"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsService@@remove_shows_user",
          "parameters": [],
          "name": "MeShowsService@@remove_shows_user",
          "parameterizedName": "com.spotify.MeShowsService@@remove_shows_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsService / remove_shows_user",
          "shortDisplayName": "remove_shows_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/me/shows"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Delete one or more shows from current Spotify user's library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "remove_shows_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsService@@remove_shows_user",
          "parameters": [],
          "name": "MeShowsService@@remove_shows_user",
          "parameterizedName": "com.spotify.MeShowsService@@remove_shows_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsService / remove_shows_user",
          "shortDisplayName": "remove_shows_user"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeShowsService {\n         [[ Get a list of shows saved in the current Spotify user's library. Optional parameters can be used to limit the number of shows returned.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/shows\")\n         operation get_users_saved_shows(  limit : Int,  offset : Int ) : PagingSavedShowObject\n         [[ Save one or more shows to current Spotify user's library.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/shows\")\n         operation save_shows_user(  ids : String )\n         [[ Delete one or more shows from current Spotify user's library.\n         ]]\n         @HttpOperation(method = \"DELETE\" , url = \"https://api.spotify.com/v1/me/shows\")\n         operation remove_shows_user(  ids : String,  market : String )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "8483aa",
        "fullHash": "8370b22550714ceae5e93d4cb3124cd0c387c63d378bd836563400c53ce01ff8"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsService@@get_users_saved_shows",
          "parameters": [],
          "name": "MeShowsService@@get_users_saved_shows",
          "parameterizedName": "com.spotify.MeShowsService@@get_users_saved_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsService / get_users_saved_shows",
          "shortDisplayName": "get_users_saved_shows"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingSavedShowObject",
          "parameters": [],
          "name": "PagingSavedShowObject",
          "parameterizedName": "com.spotify.PagingSavedShowObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedShowObject",
          "shortDisplayName": "PagingSavedShowObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/shows"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingSavedShowObject",
            "parameters": [],
            "name": "PagingSavedShowObject",
            "parameterizedName": "com.spotify.PagingSavedShowObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingSavedShowObject",
            "shortDisplayName": "PagingSavedShowObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of shows saved in the current Spotify user's library. Optional parameters can be used to limit the number of shows returned.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingSavedShowObject",
          "parameters": [],
          "name": "PagingSavedShowObject",
          "parameterizedName": "com.spotify.PagingSavedShowObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingSavedShowObject",
          "shortDisplayName": "PagingSavedShowObject"
        },
        "name": "get_users_saved_shows",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsService@@get_users_saved_shows",
          "parameters": [],
          "name": "MeShowsService@@get_users_saved_shows",
          "parameterizedName": "com.spotify.MeShowsService@@get_users_saved_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsService / get_users_saved_shows",
          "shortDisplayName": "get_users_saved_shows"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsService@@save_shows_user",
          "parameters": [],
          "name": "MeShowsService@@save_shows_user",
          "parameterizedName": "com.spotify.MeShowsService@@save_shows_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsService / save_shows_user",
          "shortDisplayName": "save_shows_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/shows"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Save one or more shows to current Spotify user's library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "save_shows_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsService@@save_shows_user",
          "parameters": [],
          "name": "MeShowsService@@save_shows_user",
          "parameterizedName": "com.spotify.MeShowsService@@save_shows_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsService / save_shows_user",
          "shortDisplayName": "save_shows_user"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsService@@remove_shows_user",
          "parameters": [],
          "name": "MeShowsService@@remove_shows_user",
          "parameterizedName": "com.spotify.MeShowsService@@remove_shows_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsService / remove_shows_user",
          "shortDisplayName": "remove_shows_user"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/me/shows"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Delete one or more shows from current Spotify user's library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "remove_shows_user",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsService@@remove_shows_user",
          "parameters": [],
          "name": "MeShowsService@@remove_shows_user",
          "parameterizedName": "com.spotify.MeShowsService@@remove_shows_user",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsService / remove_shows_user",
          "shortDisplayName": "remove_shows_user"
        }
      }],
      "qualifiedName": "com.spotify.MeShowsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeShowsService",
        "parameters": [],
        "name": "MeShowsService",
        "parameterizedName": "com.spotify.MeShowsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeShowsService",
        "shortDisplayName": "MeShowsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeShowsContainsService",
        "parameters": [],
        "name": "MeShowsContainsService",
        "parameterizedName": "com.spotify.MeShowsContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeShowsContainsService",
        "shortDisplayName": "MeShowsContainsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsContainsService@@check_users_saved_shows",
          "parameters": [],
          "name": "MeShowsContainsService@@check_users_saved_shows",
          "parameterizedName": "com.spotify.MeShowsContainsService@@check_users_saved_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsContainsService / check_users_saved_shows",
          "shortDisplayName": "check_users_saved_shows"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/shows/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check if one or more shows is already saved in the current Spotify user's library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_users_saved_shows",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsContainsService@@check_users_saved_shows",
          "parameters": [],
          "name": "MeShowsContainsService@@check_users_saved_shows",
          "parameterizedName": "com.spotify.MeShowsContainsService@@check_users_saved_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsContainsService / check_users_saved_shows",
          "shortDisplayName": "check_users_saved_shows"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeShowsContainsService {\n         [[ Check if one or more shows is already saved in the current Spotify user's library.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/shows/contains\")\n         operation check_users_saved_shows(  ids : String ) : Boolean[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "eba69e",
        "fullHash": "7f1db027f3e3b95135d68034dbe7901a9d441640feaa113b94ce348d0166d694"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsContainsService@@check_users_saved_shows",
          "parameters": [],
          "name": "MeShowsContainsService@@check_users_saved_shows",
          "parameterizedName": "com.spotify.MeShowsContainsService@@check_users_saved_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsContainsService / check_users_saved_shows",
          "shortDisplayName": "check_users_saved_shows"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/shows/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check if one or more shows is already saved in the current Spotify user's library.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_users_saved_shows",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeShowsContainsService@@check_users_saved_shows",
          "parameters": [],
          "name": "MeShowsContainsService@@check_users_saved_shows",
          "parameterizedName": "com.spotify.MeShowsContainsService@@check_users_saved_shows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeShowsContainsService / check_users_saved_shows",
          "shortDisplayName": "check_users_saved_shows"
        }
      }],
      "qualifiedName": "com.spotify.MeShowsContainsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeShowsContainsService",
        "parameters": [],
        "name": "MeShowsContainsService",
        "parameterizedName": "com.spotify.MeShowsContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeShowsContainsService",
        "shortDisplayName": "MeShowsContainsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeTopTypeService",
        "parameters": [],
        "name": "MeTopTypeService",
        "parameterizedName": "com.spotify.MeTopTypeService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeTopTypeService",
        "shortDisplayName": "MeTopTypeService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTopTypeService@@get_users_top_artists_and_tracks",
          "parameters": [],
          "name": "MeTopTypeService@@get_users_top_artists_and_tracks",
          "parameterizedName": "com.spotify.MeTopTypeService@@get_users_top_artists_and_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTopTypeService / get_users_top_artists_and_tracks",
          "shortDisplayName": "get_users_top_artists_and_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "`type`",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "type"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "time_range",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
          "parameters": [],
          "name": "AnonymousTypeGet_users_top_artists_and_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
          "shortDisplayName": "AnonymousTypeGet_users_top_artists_and_tracks"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/top/{type}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
            "parameters": [],
            "name": "AnonymousTypeGet_users_top_artists_and_tracks",
            "parameterizedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
            "shortDisplayName": "AnonymousTypeGet_users_top_artists_and_tracks"
          }, "constraints": []
        },
        "typeDoc": "Get the current user's top artists or tracks based on calculated affinity.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
          "parameters": [],
          "name": "AnonymousTypeGet_users_top_artists_and_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
          "shortDisplayName": "AnonymousTypeGet_users_top_artists_and_tracks"
        },
        "name": "get_users_top_artists_and_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTopTypeService@@get_users_top_artists_and_tracks",
          "parameters": [],
          "name": "MeTopTypeService@@get_users_top_artists_and_tracks",
          "parameterizedName": "com.spotify.MeTopTypeService@@get_users_top_artists_and_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTopTypeService / get_users_top_artists_and_tracks",
          "shortDisplayName": "get_users_top_artists_and_tracks"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeTopTypeService {\n         [[ Get the current user's top artists or tracks based on calculated affinity.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/top/{type}\")\n         operation get_users_top_artists_and_tracks( @PathVariable(value = \"type\") `type` : String,  time_range : String,  limit : Int,  offset : Int ) : AnonymousTypeGet_users_top_artists_and_tracks\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "007c80",
        "fullHash": "f13e266d73af72d1542630d8df25798a030ef65099bba132d358715b30f0641f"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTopTypeService@@get_users_top_artists_and_tracks",
          "parameters": [],
          "name": "MeTopTypeService@@get_users_top_artists_and_tracks",
          "parameterizedName": "com.spotify.MeTopTypeService@@get_users_top_artists_and_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTopTypeService / get_users_top_artists_and_tracks",
          "shortDisplayName": "get_users_top_artists_and_tracks"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "`type`",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "type"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "time_range",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
          "parameters": [],
          "name": "AnonymousTypeGet_users_top_artists_and_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
          "shortDisplayName": "AnonymousTypeGet_users_top_artists_and_tracks"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/top/{type}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
            "parameters": [],
            "name": "AnonymousTypeGet_users_top_artists_and_tracks",
            "parameterizedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
            "shortDisplayName": "AnonymousTypeGet_users_top_artists_and_tracks"
          }, "constraints": []
        },
        "typeDoc": "Get the current user's top artists or tracks based on calculated affinity.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
          "parameters": [],
          "name": "AnonymousTypeGet_users_top_artists_and_tracks",
          "parameterizedName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_users_top_artists_and_tracks",
          "shortDisplayName": "AnonymousTypeGet_users_top_artists_and_tracks"
        },
        "name": "get_users_top_artists_and_tracks",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeTopTypeService@@get_users_top_artists_and_tracks",
          "parameters": [],
          "name": "MeTopTypeService@@get_users_top_artists_and_tracks",
          "parameterizedName": "com.spotify.MeTopTypeService@@get_users_top_artists_and_tracks",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeTopTypeService / get_users_top_artists_and_tracks",
          "shortDisplayName": "get_users_top_artists_and_tracks"
        }
      }],
      "qualifiedName": "com.spotify.MeTopTypeService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeTopTypeService",
        "parameters": [],
        "name": "MeTopTypeService",
        "parameterizedName": "com.spotify.MeTopTypeService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeTopTypeService",
        "shortDisplayName": "MeTopTypeService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.UsersUser_idService",
        "parameters": [],
        "name": "UsersUser_idService",
        "parameterizedName": "com.spotify.UsersUser_idService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.UsersUser_idService",
        "shortDisplayName": "UsersUser_idService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.UsersUser_idService@@get_users_profile",
          "parameters": [],
          "name": "UsersUser_idService@@get_users_profile",
          "parameterizedName": "com.spotify.UsersUser_idService@@get_users_profile",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.UsersUser_idService / get_users_profile",
          "shortDisplayName": "get_users_profile"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "user_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "user_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PublicUserObject",
          "parameters": [],
          "name": "PublicUserObject",
          "parameterizedName": "com.spotify.PublicUserObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PublicUserObject",
          "shortDisplayName": "PublicUserObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/users/{user_id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PublicUserObject",
            "parameters": [],
            "name": "PublicUserObject",
            "parameterizedName": "com.spotify.PublicUserObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PublicUserObject",
            "shortDisplayName": "PublicUserObject"
          }, "constraints": []
        },
        "typeDoc": "Get public profile information about a Spotify user.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PublicUserObject",
          "parameters": [],
          "name": "PublicUserObject",
          "parameterizedName": "com.spotify.PublicUserObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PublicUserObject",
          "shortDisplayName": "PublicUserObject"
        },
        "name": "get_users_profile",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.UsersUser_idService@@get_users_profile",
          "parameters": [],
          "name": "UsersUser_idService@@get_users_profile",
          "parameterizedName": "com.spotify.UsersUser_idService@@get_users_profile",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.UsersUser_idService / get_users_profile",
          "shortDisplayName": "get_users_profile"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service UsersUser_idService {\n         [[ Get public profile information about a Spotify user.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/users/{user_id}\")\n         operation get_users_profile( @PathVariable(value = \"user_id\") user_id : String ) : PublicUserObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "0ec38d",
        "fullHash": "ada5f9fdcc8ce3b3830e625da63a426a998a20ca3e0c54b96585a60ef7f3cc3f"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.UsersUser_idService@@get_users_profile",
          "parameters": [],
          "name": "UsersUser_idService@@get_users_profile",
          "parameterizedName": "com.spotify.UsersUser_idService@@get_users_profile",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.UsersUser_idService / get_users_profile",
          "shortDisplayName": "get_users_profile"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "user_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "user_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PublicUserObject",
          "parameters": [],
          "name": "PublicUserObject",
          "parameterizedName": "com.spotify.PublicUserObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PublicUserObject",
          "shortDisplayName": "PublicUserObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/users/{user_id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PublicUserObject",
            "parameters": [],
            "name": "PublicUserObject",
            "parameterizedName": "com.spotify.PublicUserObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PublicUserObject",
            "shortDisplayName": "PublicUserObject"
          }, "constraints": []
        },
        "typeDoc": "Get public profile information about a Spotify user.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PublicUserObject",
          "parameters": [],
          "name": "PublicUserObject",
          "parameterizedName": "com.spotify.PublicUserObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PublicUserObject",
          "shortDisplayName": "PublicUserObject"
        },
        "name": "get_users_profile",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.UsersUser_idService@@get_users_profile",
          "parameters": [],
          "name": "UsersUser_idService@@get_users_profile",
          "parameterizedName": "com.spotify.UsersUser_idService@@get_users_profile",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.UsersUser_idService / get_users_profile",
          "shortDisplayName": "get_users_profile"
        }
      }],
      "qualifiedName": "com.spotify.UsersUser_idService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.UsersUser_idService",
        "parameters": [],
        "name": "UsersUser_idService",
        "parameterizedName": "com.spotify.UsersUser_idService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.UsersUser_idService",
        "shortDisplayName": "UsersUser_idService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.UsersUser_idPlaylistsService",
        "parameters": [],
        "name": "UsersUser_idPlaylistsService",
        "parameterizedName": "com.spotify.UsersUser_idPlaylistsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.UsersUser_idPlaylistsService",
        "shortDisplayName": "UsersUser_idPlaylistsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.UsersUser_idPlaylistsService@@get_list_users_playlists",
          "parameters": [],
          "name": "UsersUser_idPlaylistsService@@get_list_users_playlists",
          "parameterizedName": "com.spotify.UsersUser_idPlaylistsService@@get_list_users_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.UsersUser_idPlaylistsService / get_list_users_playlists",
          "shortDisplayName": "get_list_users_playlists"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "user_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "user_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
          "parameters": [],
          "name": "PagingPlaylistObject",
          "parameterizedName": "com.spotify.PagingPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingPlaylistObject",
          "shortDisplayName": "PagingPlaylistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/users/{user_id}/playlists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
            "parameters": [],
            "name": "PagingPlaylistObject",
            "parameterizedName": "com.spotify.PagingPlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingPlaylistObject",
            "shortDisplayName": "PagingPlaylistObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of the playlists owned or followed by a Spotify user.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
          "parameters": [],
          "name": "PagingPlaylistObject",
          "parameterizedName": "com.spotify.PagingPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingPlaylistObject",
          "shortDisplayName": "PagingPlaylistObject"
        },
        "name": "get_list_users_playlists",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.UsersUser_idPlaylistsService@@get_list_users_playlists",
          "parameters": [],
          "name": "UsersUser_idPlaylistsService@@get_list_users_playlists",
          "parameterizedName": "com.spotify.UsersUser_idPlaylistsService@@get_list_users_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.UsersUser_idPlaylistsService / get_list_users_playlists",
          "shortDisplayName": "get_list_users_playlists"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.UsersUser_idPlaylistsService@@create_playlist",
          "parameters": [],
          "name": "UsersUser_idPlaylistsService@@create_playlist",
          "parameterizedName": "com.spotify.UsersUser_idPlaylistsService@@create_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.UsersUser_idPlaylistsService / create_playlist",
          "shortDisplayName": "create_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "user_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "user_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeCreate_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeCreate_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeCreate_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeCreate_playlistBody",
            "shortDisplayName": "AnonymousTypeCreate_playlistBody"
          },
          "name": "anonymousTypeCreate_playlistBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeCreate_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeCreate_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeCreate_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeCreate_playlistBody",
            "shortDisplayName": "AnonymousTypeCreate_playlistBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PlaylistObject",
          "parameters": [],
          "name": "PlaylistObject",
          "parameterizedName": "com.spotify.PlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistObject",
          "shortDisplayName": "PlaylistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "POST", "url": "https://api.spotify.com/v1/users/{user_id}/playlists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PlaylistObject",
            "parameters": [],
            "name": "PlaylistObject",
            "parameterizedName": "com.spotify.PlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PlaylistObject",
            "shortDisplayName": "PlaylistObject"
          }, "constraints": []
        },
        "typeDoc": "Create a playlist for a Spotify user. (The playlist will be empty until\n     you [add tracks](/documentation/web-api/reference/add-tracks-to-playlist).)",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PlaylistObject",
          "parameters": [],
          "name": "PlaylistObject",
          "parameterizedName": "com.spotify.PlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistObject",
          "shortDisplayName": "PlaylistObject"
        },
        "name": "create_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.UsersUser_idPlaylistsService@@create_playlist",
          "parameters": [],
          "name": "UsersUser_idPlaylistsService@@create_playlist",
          "parameterizedName": "com.spotify.UsersUser_idPlaylistsService@@create_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.UsersUser_idPlaylistsService / create_playlist",
          "shortDisplayName": "create_playlist"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service UsersUser_idPlaylistsService {\n         [[ Get a list of the playlists owned or followed by a Spotify user.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/users/{user_id}/playlists\")\n         operation get_list_users_playlists( @PathVariable(value = \"user_id\") user_id : String,  limit : Int,  offset : Int ) : PagingPlaylistObject\n         [[ Create a playlist for a Spotify user. (The playlist will be empty until\n         you [add tracks](/documentation/web-api/reference/add-tracks-to-playlist).)\n         ]]\n         @HttpOperation(method = \"POST\" , url = \"https://api.spotify.com/v1/users/{user_id}/playlists\")\n         operation create_playlist( @PathVariable(value = \"user_id\") user_id : String, @RequestBody anonymousTypeCreate_playlistBody : AnonymousTypeCreate_playlistBody ) : PlaylistObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "f670d4",
        "fullHash": "9d2399c767434c7dbf3396eadab0752244eb4d8d434745aefd9e75271667c129"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.UsersUser_idPlaylistsService@@get_list_users_playlists",
          "parameters": [],
          "name": "UsersUser_idPlaylistsService@@get_list_users_playlists",
          "parameterizedName": "com.spotify.UsersUser_idPlaylistsService@@get_list_users_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.UsersUser_idPlaylistsService / get_list_users_playlists",
          "shortDisplayName": "get_list_users_playlists"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "user_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "user_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
          "parameters": [],
          "name": "PagingPlaylistObject",
          "parameterizedName": "com.spotify.PagingPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingPlaylistObject",
          "shortDisplayName": "PagingPlaylistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/users/{user_id}/playlists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
            "parameters": [],
            "name": "PagingPlaylistObject",
            "parameterizedName": "com.spotify.PagingPlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingPlaylistObject",
            "shortDisplayName": "PagingPlaylistObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of the playlists owned or followed by a Spotify user.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingPlaylistObject",
          "parameters": [],
          "name": "PagingPlaylistObject",
          "parameterizedName": "com.spotify.PagingPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingPlaylistObject",
          "shortDisplayName": "PagingPlaylistObject"
        },
        "name": "get_list_users_playlists",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.UsersUser_idPlaylistsService@@get_list_users_playlists",
          "parameters": [],
          "name": "UsersUser_idPlaylistsService@@get_list_users_playlists",
          "parameterizedName": "com.spotify.UsersUser_idPlaylistsService@@get_list_users_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.UsersUser_idPlaylistsService / get_list_users_playlists",
          "shortDisplayName": "get_list_users_playlists"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.UsersUser_idPlaylistsService@@create_playlist",
          "parameters": [],
          "name": "UsersUser_idPlaylistsService@@create_playlist",
          "parameterizedName": "com.spotify.UsersUser_idPlaylistsService@@create_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.UsersUser_idPlaylistsService / create_playlist",
          "shortDisplayName": "create_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "user_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "user_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeCreate_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeCreate_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeCreate_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeCreate_playlistBody",
            "shortDisplayName": "AnonymousTypeCreate_playlistBody"
          },
          "name": "anonymousTypeCreate_playlistBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeCreate_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeCreate_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeCreate_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeCreate_playlistBody",
            "shortDisplayName": "AnonymousTypeCreate_playlistBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PlaylistObject",
          "parameters": [],
          "name": "PlaylistObject",
          "parameterizedName": "com.spotify.PlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistObject",
          "shortDisplayName": "PlaylistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "POST", "url": "https://api.spotify.com/v1/users/{user_id}/playlists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PlaylistObject",
            "parameters": [],
            "name": "PlaylistObject",
            "parameterizedName": "com.spotify.PlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PlaylistObject",
            "shortDisplayName": "PlaylistObject"
          }, "constraints": []
        },
        "typeDoc": "Create a playlist for a Spotify user. (The playlist will be empty until\n     you [add tracks](/documentation/web-api/reference/add-tracks-to-playlist).)",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PlaylistObject",
          "parameters": [],
          "name": "PlaylistObject",
          "parameterizedName": "com.spotify.PlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistObject",
          "shortDisplayName": "PlaylistObject"
        },
        "name": "create_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.UsersUser_idPlaylistsService@@create_playlist",
          "parameters": [],
          "name": "UsersUser_idPlaylistsService@@create_playlist",
          "parameterizedName": "com.spotify.UsersUser_idPlaylistsService@@create_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.UsersUser_idPlaylistsService / create_playlist",
          "shortDisplayName": "create_playlist"
        }
      }],
      "qualifiedName": "com.spotify.UsersUser_idPlaylistsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.UsersUser_idPlaylistsService",
        "parameters": [],
        "name": "UsersUser_idPlaylistsService",
        "parameterizedName": "com.spotify.UsersUser_idPlaylistsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.UsersUser_idPlaylistsService",
        "shortDisplayName": "UsersUser_idPlaylistsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersService",
        "parameters": [],
        "name": "PlaylistsPlaylist_idFollowersService",
        "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersService",
        "shortDisplayName": "PlaylistsPlaylist_idFollowersService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@follow_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idFollowersService@@follow_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@follow_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersService / follow_playlist",
          "shortDisplayName": "follow_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeFollow_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeFollow_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeFollow_playlistBody",
            "shortDisplayName": "AnonymousTypeFollow_playlistBody"
          },
          "name": "anonymousTypeFollow_playlistBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeFollow_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeFollow_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeFollow_playlistBody",
            "shortDisplayName": "AnonymousTypeFollow_playlistBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/followers"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Add the current user as a follower of a playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "follow_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@follow_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idFollowersService@@follow_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@follow_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersService / follow_playlist",
          "shortDisplayName": "follow_playlist"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@unfollow_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idFollowersService@@unfollow_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@unfollow_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersService / unfollow_playlist",
          "shortDisplayName": "unfollow_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/followers"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Remove the current user as a follower of a playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "unfollow_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@unfollow_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idFollowersService@@unfollow_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@unfollow_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersService / unfollow_playlist",
          "shortDisplayName": "unfollow_playlist"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service PlaylistsPlaylist_idFollowersService {\n         [[ Add the current user as a follower of a playlist.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/playlists/{playlist_id}/followers\")\n         operation follow_playlist( @PathVariable(value = \"playlist_id\") playlist_id : String, @RequestBody anonymousTypeFollow_playlistBody : AnonymousTypeFollow_playlistBody )\n         [[ Remove the current user as a follower of a playlist.\n         ]]\n         @HttpOperation(method = \"DELETE\" , url = \"https://api.spotify.com/v1/playlists/{playlist_id}/followers\")\n         operation unfollow_playlist( @PathVariable(value = \"playlist_id\") playlist_id : String )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "6d6edd",
        "fullHash": "6eab171c545ba82b243f717d8e986ad164ca975a684a5deacbdfe1de2dde092d"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@follow_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idFollowersService@@follow_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@follow_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersService / follow_playlist",
          "shortDisplayName": "follow_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeFollow_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeFollow_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeFollow_playlistBody",
            "shortDisplayName": "AnonymousTypeFollow_playlistBody"
          },
          "name": "anonymousTypeFollow_playlistBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_playlistBody",
            "parameters": [],
            "name": "AnonymousTypeFollow_playlistBody",
            "parameterizedName": "com.spotify.AnonymousTypeFollow_playlistBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeFollow_playlistBody",
            "shortDisplayName": "AnonymousTypeFollow_playlistBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/followers"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Add the current user as a follower of a playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "follow_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@follow_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idFollowersService@@follow_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@follow_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersService / follow_playlist",
          "shortDisplayName": "follow_playlist"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@unfollow_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idFollowersService@@unfollow_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@unfollow_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersService / unfollow_playlist",
          "shortDisplayName": "unfollow_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/followers"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Remove the current user as a follower of a playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "unfollow_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@unfollow_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idFollowersService@@unfollow_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersService@@unfollow_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersService / unfollow_playlist",
          "shortDisplayName": "unfollow_playlist"
        }
      }],
      "qualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersService",
        "parameters": [],
        "name": "PlaylistsPlaylist_idFollowersService",
        "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersService",
        "shortDisplayName": "PlaylistsPlaylist_idFollowersService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.BrowseFeatured_playlistsService",
        "parameters": [],
        "name": "BrowseFeatured_playlistsService",
        "parameterizedName": "com.spotify.BrowseFeatured_playlistsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.BrowseFeatured_playlistsService",
        "shortDisplayName": "BrowseFeatured_playlistsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseFeatured_playlistsService@@get_featured_playlists",
          "parameters": [],
          "name": "BrowseFeatured_playlistsService@@get_featured_playlists",
          "parameterizedName": "com.spotify.BrowseFeatured_playlistsService@@get_featured_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseFeatured_playlistsService / get_featured_playlists",
          "shortDisplayName": "get_featured_playlists"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "country",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "locale",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "timestamp",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
          "parameters": [],
          "name": "PagingFeaturedPlaylistObject",
          "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
          "shortDisplayName": "PagingFeaturedPlaylistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/browse/featured-playlists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
            "parameters": [],
            "name": "PagingFeaturedPlaylistObject",
            "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
            "shortDisplayName": "PagingFeaturedPlaylistObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of Spotify featured playlists (shown, for example, on a Spotify player's 'Browse' tab).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
          "parameters": [],
          "name": "PagingFeaturedPlaylistObject",
          "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
          "shortDisplayName": "PagingFeaturedPlaylistObject"
        },
        "name": "get_featured_playlists",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseFeatured_playlistsService@@get_featured_playlists",
          "parameters": [],
          "name": "BrowseFeatured_playlistsService@@get_featured_playlists",
          "parameterizedName": "com.spotify.BrowseFeatured_playlistsService@@get_featured_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseFeatured_playlistsService / get_featured_playlists",
          "shortDisplayName": "get_featured_playlists"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service BrowseFeatured_playlistsService {\n         [[ Get a list of Spotify featured playlists (shown, for example, on a Spotify player's 'Browse' tab).\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/browse/featured-playlists\")\n         operation get_featured_playlists(  country : String,  locale : String,  timestamp : String,  limit : Int,  offset : Int ) : PagingFeaturedPlaylistObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "5e5923",
        "fullHash": "844bb51b109f72709b9c409b45348902a5f51541f6aa055fb998b1feee23fbfd"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseFeatured_playlistsService@@get_featured_playlists",
          "parameters": [],
          "name": "BrowseFeatured_playlistsService@@get_featured_playlists",
          "parameterizedName": "com.spotify.BrowseFeatured_playlistsService@@get_featured_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseFeatured_playlistsService / get_featured_playlists",
          "shortDisplayName": "get_featured_playlists"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "country",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "locale",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "timestamp",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
          "parameters": [],
          "name": "PagingFeaturedPlaylistObject",
          "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
          "shortDisplayName": "PagingFeaturedPlaylistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/browse/featured-playlists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
            "parameters": [],
            "name": "PagingFeaturedPlaylistObject",
            "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
            "shortDisplayName": "PagingFeaturedPlaylistObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of Spotify featured playlists (shown, for example, on a Spotify player's 'Browse' tab).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
          "parameters": [],
          "name": "PagingFeaturedPlaylistObject",
          "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
          "shortDisplayName": "PagingFeaturedPlaylistObject"
        },
        "name": "get_featured_playlists",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseFeatured_playlistsService@@get_featured_playlists",
          "parameters": [],
          "name": "BrowseFeatured_playlistsService@@get_featured_playlists",
          "parameterizedName": "com.spotify.BrowseFeatured_playlistsService@@get_featured_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseFeatured_playlistsService / get_featured_playlists",
          "shortDisplayName": "get_featured_playlists"
        }
      }],
      "qualifiedName": "com.spotify.BrowseFeatured_playlistsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.BrowseFeatured_playlistsService",
        "parameters": [],
        "name": "BrowseFeatured_playlistsService",
        "parameterizedName": "com.spotify.BrowseFeatured_playlistsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.BrowseFeatured_playlistsService",
        "shortDisplayName": "BrowseFeatured_playlistsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.BrowseCategoriesService",
        "parameters": [],
        "name": "BrowseCategoriesService",
        "parameterizedName": "com.spotify.BrowseCategoriesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.BrowseCategoriesService",
        "shortDisplayName": "BrowseCategoriesService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseCategoriesService@@get_categories",
          "parameters": [],
          "name": "BrowseCategoriesService@@get_categories",
          "parameterizedName": "com.spotify.BrowseCategoriesService@@get_categories",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseCategoriesService / get_categories",
          "shortDisplayName": "get_categories"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "country",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "locale",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_categories",
          "parameters": [],
          "name": "AnonymousTypeGet_categories",
          "parameterizedName": "com.spotify.AnonymousTypeGet_categories",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_categories",
          "shortDisplayName": "AnonymousTypeGet_categories"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/browse/categories"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_categories",
            "parameters": [],
            "name": "AnonymousTypeGet_categories",
            "parameterizedName": "com.spotify.AnonymousTypeGet_categories",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_categories",
            "shortDisplayName": "AnonymousTypeGet_categories"
          }, "constraints": []
        },
        "typeDoc": "Get a list of categories used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_categories",
          "parameters": [],
          "name": "AnonymousTypeGet_categories",
          "parameterizedName": "com.spotify.AnonymousTypeGet_categories",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_categories",
          "shortDisplayName": "AnonymousTypeGet_categories"
        },
        "name": "get_categories",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseCategoriesService@@get_categories",
          "parameters": [],
          "name": "BrowseCategoriesService@@get_categories",
          "parameterizedName": "com.spotify.BrowseCategoriesService@@get_categories",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseCategoriesService / get_categories",
          "shortDisplayName": "get_categories"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service BrowseCategoriesService {\n         [[ Get a list of categories used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/browse/categories\")\n         operation get_categories(  country : String,  locale : String,  limit : Int,  offset : Int ) : AnonymousTypeGet_categories\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "c0eee7",
        "fullHash": "91377661b0af1b60defc2fdff666e50db3be9059f0b8cbd26057beeea96f99c4"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseCategoriesService@@get_categories",
          "parameters": [],
          "name": "BrowseCategoriesService@@get_categories",
          "parameterizedName": "com.spotify.BrowseCategoriesService@@get_categories",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseCategoriesService / get_categories",
          "shortDisplayName": "get_categories"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "country",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "locale",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_categories",
          "parameters": [],
          "name": "AnonymousTypeGet_categories",
          "parameterizedName": "com.spotify.AnonymousTypeGet_categories",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_categories",
          "shortDisplayName": "AnonymousTypeGet_categories"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/browse/categories"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_categories",
            "parameters": [],
            "name": "AnonymousTypeGet_categories",
            "parameterizedName": "com.spotify.AnonymousTypeGet_categories",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_categories",
            "shortDisplayName": "AnonymousTypeGet_categories"
          }, "constraints": []
        },
        "typeDoc": "Get a list of categories used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_categories",
          "parameters": [],
          "name": "AnonymousTypeGet_categories",
          "parameterizedName": "com.spotify.AnonymousTypeGet_categories",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_categories",
          "shortDisplayName": "AnonymousTypeGet_categories"
        },
        "name": "get_categories",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseCategoriesService@@get_categories",
          "parameters": [],
          "name": "BrowseCategoriesService@@get_categories",
          "parameterizedName": "com.spotify.BrowseCategoriesService@@get_categories",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseCategoriesService / get_categories",
          "shortDisplayName": "get_categories"
        }
      }],
      "qualifiedName": "com.spotify.BrowseCategoriesService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.BrowseCategoriesService",
        "parameters": [],
        "name": "BrowseCategoriesService",
        "parameterizedName": "com.spotify.BrowseCategoriesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.BrowseCategoriesService",
        "shortDisplayName": "BrowseCategoriesService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.BrowseCategoriesCategory_idService",
        "parameters": [],
        "name": "BrowseCategoriesCategory_idService",
        "parameterizedName": "com.spotify.BrowseCategoriesCategory_idService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.BrowseCategoriesCategory_idService",
        "shortDisplayName": "BrowseCategoriesCategory_idService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseCategoriesCategory_idService@@get_a_category",
          "parameters": [],
          "name": "BrowseCategoriesCategory_idService@@get_a_category",
          "parameterizedName": "com.spotify.BrowseCategoriesCategory_idService@@get_a_category",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseCategoriesCategory_idService / get_a_category",
          "shortDisplayName": "get_a_category"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "category_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "category_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "country",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "locale",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.CategoryObject",
          "parameters": [],
          "name": "CategoryObject",
          "parameterizedName": "com.spotify.CategoryObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CategoryObject",
          "shortDisplayName": "CategoryObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/browse/categories/{category_id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.CategoryObject",
            "parameters": [],
            "name": "CategoryObject",
            "parameterizedName": "com.spotify.CategoryObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.CategoryObject",
            "shortDisplayName": "CategoryObject"
          }, "constraints": []
        },
        "typeDoc": "Get a single category used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.CategoryObject",
          "parameters": [],
          "name": "CategoryObject",
          "parameterizedName": "com.spotify.CategoryObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CategoryObject",
          "shortDisplayName": "CategoryObject"
        },
        "name": "get_a_category",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseCategoriesCategory_idService@@get_a_category",
          "parameters": [],
          "name": "BrowseCategoriesCategory_idService@@get_a_category",
          "parameterizedName": "com.spotify.BrowseCategoriesCategory_idService@@get_a_category",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseCategoriesCategory_idService / get_a_category",
          "shortDisplayName": "get_a_category"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service BrowseCategoriesCategory_idService {\n         [[ Get a single category used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/browse/categories/{category_id}\")\n         operation get_a_category( @PathVariable(value = \"category_id\") category_id : String,  country : String,  locale : String ) : CategoryObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "fc387a",
        "fullHash": "4620cdde1b0dcdf1e4e3484ebe7bc0f11acac02da063b06679c0819aac56906d"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseCategoriesCategory_idService@@get_a_category",
          "parameters": [],
          "name": "BrowseCategoriesCategory_idService@@get_a_category",
          "parameterizedName": "com.spotify.BrowseCategoriesCategory_idService@@get_a_category",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseCategoriesCategory_idService / get_a_category",
          "shortDisplayName": "get_a_category"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "category_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "category_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "country",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "locale",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.CategoryObject",
          "parameters": [],
          "name": "CategoryObject",
          "parameterizedName": "com.spotify.CategoryObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CategoryObject",
          "shortDisplayName": "CategoryObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/browse/categories/{category_id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.CategoryObject",
            "parameters": [],
            "name": "CategoryObject",
            "parameterizedName": "com.spotify.CategoryObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.CategoryObject",
            "shortDisplayName": "CategoryObject"
          }, "constraints": []
        },
        "typeDoc": "Get a single category used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.CategoryObject",
          "parameters": [],
          "name": "CategoryObject",
          "parameterizedName": "com.spotify.CategoryObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CategoryObject",
          "shortDisplayName": "CategoryObject"
        },
        "name": "get_a_category",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseCategoriesCategory_idService@@get_a_category",
          "parameters": [],
          "name": "BrowseCategoriesCategory_idService@@get_a_category",
          "parameterizedName": "com.spotify.BrowseCategoriesCategory_idService@@get_a_category",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseCategoriesCategory_idService / get_a_category",
          "shortDisplayName": "get_a_category"
        }
      }],
      "qualifiedName": "com.spotify.BrowseCategoriesCategory_idService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.BrowseCategoriesCategory_idService",
        "parameters": [],
        "name": "BrowseCategoriesCategory_idService",
        "parameterizedName": "com.spotify.BrowseCategoriesCategory_idService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.BrowseCategoriesCategory_idService",
        "shortDisplayName": "BrowseCategoriesCategory_idService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService",
        "parameters": [],
        "name": "BrowseCategoriesCategory_idPlaylistsService",
        "parameterizedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService",
        "shortDisplayName": "BrowseCategoriesCategory_idPlaylistsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService@@get_a_categories_playlists",
          "parameters": [],
          "name": "BrowseCategoriesCategory_idPlaylistsService@@get_a_categories_playlists",
          "parameterizedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService@@get_a_categories_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService / get_a_categories_playlists",
          "shortDisplayName": "get_a_categories_playlists"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "category_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "category_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "country",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
          "parameters": [],
          "name": "PagingFeaturedPlaylistObject",
          "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
          "shortDisplayName": "PagingFeaturedPlaylistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/browse/categories/{category_id}/playlists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
            "parameters": [],
            "name": "PagingFeaturedPlaylistObject",
            "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
            "shortDisplayName": "PagingFeaturedPlaylistObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of Spotify playlists tagged with a particular category.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
          "parameters": [],
          "name": "PagingFeaturedPlaylistObject",
          "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
          "shortDisplayName": "PagingFeaturedPlaylistObject"
        },
        "name": "get_a_categories_playlists",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService@@get_a_categories_playlists",
          "parameters": [],
          "name": "BrowseCategoriesCategory_idPlaylistsService@@get_a_categories_playlists",
          "parameterizedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService@@get_a_categories_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService / get_a_categories_playlists",
          "shortDisplayName": "get_a_categories_playlists"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service BrowseCategoriesCategory_idPlaylistsService {\n         [[ Get a list of Spotify playlists tagged with a particular category.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/browse/categories/{category_id}/playlists\")\n         operation get_a_categories_playlists( @PathVariable(value = \"category_id\") category_id : String,  country : String,  limit : Int,  offset : Int ) : PagingFeaturedPlaylistObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "011b9c",
        "fullHash": "0aab3c00d0e507ae9d5b2cae2200b0def8c2f73b26e9444547a91c88b2ce2988"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService@@get_a_categories_playlists",
          "parameters": [],
          "name": "BrowseCategoriesCategory_idPlaylistsService@@get_a_categories_playlists",
          "parameterizedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService@@get_a_categories_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService / get_a_categories_playlists",
          "shortDisplayName": "get_a_categories_playlists"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "category_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "category_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "country",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
          "parameters": [],
          "name": "PagingFeaturedPlaylistObject",
          "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
          "shortDisplayName": "PagingFeaturedPlaylistObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/browse/categories/{category_id}/playlists"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
            "parameters": [],
            "name": "PagingFeaturedPlaylistObject",
            "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
            "shortDisplayName": "PagingFeaturedPlaylistObject"
          }, "constraints": []
        },
        "typeDoc": "Get a list of Spotify playlists tagged with a particular category.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.PagingFeaturedPlaylistObject",
          "parameters": [],
          "name": "PagingFeaturedPlaylistObject",
          "parameterizedName": "com.spotify.PagingFeaturedPlaylistObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PagingFeaturedPlaylistObject",
          "shortDisplayName": "PagingFeaturedPlaylistObject"
        },
        "name": "get_a_categories_playlists",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService@@get_a_categories_playlists",
          "parameters": [],
          "name": "BrowseCategoriesCategory_idPlaylistsService@@get_a_categories_playlists",
          "parameterizedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService@@get_a_categories_playlists",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService / get_a_categories_playlists",
          "shortDisplayName": "get_a_categories_playlists"
        }
      }],
      "qualifiedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService",
        "parameters": [],
        "name": "BrowseCategoriesCategory_idPlaylistsService",
        "parameterizedName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.BrowseCategoriesCategory_idPlaylistsService",
        "shortDisplayName": "BrowseCategoriesCategory_idPlaylistsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idImagesService",
        "parameters": [],
        "name": "PlaylistsPlaylist_idImagesService",
        "parameterizedName": "com.spotify.PlaylistsPlaylist_idImagesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistsPlaylist_idImagesService",
        "shortDisplayName": "PlaylistsPlaylist_idImagesService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idImagesService@@get_playlist_cover",
          "parameters": [],
          "name": "PlaylistsPlaylist_idImagesService@@get_playlist_cover",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idImagesService@@get_playlist_cover",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idImagesService / get_playlist_cover",
          "shortDisplayName": "get_playlist_cover"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "com.spotify.ImageObject",
            "parameters": [],
            "name": "ImageObject",
            "parameterizedName": "com.spotify.ImageObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.ImageObject",
            "shortDisplayName": "ImageObject"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
          "namespace": "lang.taxi",
          "longDisplayName": "com.spotify.ImageObject[]",
          "shortDisplayName": "ImageObject[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/images"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          }, "constraints": []
        },
        "typeDoc": "Get the current image associated with a specific playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "com.spotify.ImageObject",
            "parameters": [],
            "name": "ImageObject",
            "parameterizedName": "com.spotify.ImageObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.ImageObject",
            "shortDisplayName": "ImageObject"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
          "namespace": "lang.taxi",
          "longDisplayName": "com.spotify.ImageObject[]",
          "shortDisplayName": "ImageObject[]"
        },
        "name": "get_playlist_cover",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idImagesService@@get_playlist_cover",
          "parameters": [],
          "name": "PlaylistsPlaylist_idImagesService@@get_playlist_cover",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idImagesService@@get_playlist_cover",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idImagesService / get_playlist_cover",
          "shortDisplayName": "get_playlist_cover"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idImagesService@@upload_custom_playlist_cover",
          "parameters": [],
          "name": "PlaylistsPlaylist_idImagesService@@upload_custom_playlist_cover",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idImagesService@@upload_custom_playlist_cover",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idImagesService / upload_custom_playlist_cover",
          "shortDisplayName": "upload_custom_playlist_cover"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.byte",
            "parameters": [],
            "name": "byte",
            "parameterizedName": "com.spotify.byte",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.byte",
            "shortDisplayName": "byte"
          },
          "name": "byte",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.byte",
            "parameters": [],
            "name": "byte",
            "parameterizedName": "com.spotify.byte",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.byte",
            "shortDisplayName": "byte"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/images"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Replace the image used to represent a specific playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "upload_custom_playlist_cover",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idImagesService@@upload_custom_playlist_cover",
          "parameters": [],
          "name": "PlaylistsPlaylist_idImagesService@@upload_custom_playlist_cover",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idImagesService@@upload_custom_playlist_cover",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idImagesService / upload_custom_playlist_cover",
          "shortDisplayName": "upload_custom_playlist_cover"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service PlaylistsPlaylist_idImagesService {\n         [[ Get the current image associated with a specific playlist.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/playlists/{playlist_id}/images\")\n         operation get_playlist_cover( @PathVariable(value = \"playlist_id\") playlist_id : String ) : ImageObject[]\n         [[ Replace the image used to represent a specific playlist.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/playlists/{playlist_id}/images\")\n         operation upload_custom_playlist_cover( @PathVariable(value = \"playlist_id\") playlist_id : String, @RequestBody byte : byte )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "18bb91",
        "fullHash": "2ec8b962f70a6228dcca4d3bedada01acd9f6cf991ba6518232832c890025f06"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idImagesService@@get_playlist_cover",
          "parameters": [],
          "name": "PlaylistsPlaylist_idImagesService@@get_playlist_cover",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idImagesService@@get_playlist_cover",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idImagesService / get_playlist_cover",
          "shortDisplayName": "get_playlist_cover"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "com.spotify.ImageObject",
            "parameters": [],
            "name": "ImageObject",
            "parameterizedName": "com.spotify.ImageObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.ImageObject",
            "shortDisplayName": "ImageObject"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
          "namespace": "lang.taxi",
          "longDisplayName": "com.spotify.ImageObject[]",
          "shortDisplayName": "ImageObject[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/images"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "com.spotify.ImageObject",
              "parameters": [],
              "name": "ImageObject",
              "parameterizedName": "com.spotify.ImageObject",
              "namespace": "com.spotify",
              "longDisplayName": "com.spotify.ImageObject",
              "shortDisplayName": "ImageObject"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
            "namespace": "lang.taxi",
            "longDisplayName": "com.spotify.ImageObject[]",
            "shortDisplayName": "ImageObject[]"
          }, "constraints": []
        },
        "typeDoc": "Get the current image associated with a specific playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "com.spotify.ImageObject",
            "parameters": [],
            "name": "ImageObject",
            "parameterizedName": "com.spotify.ImageObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.ImageObject",
            "shortDisplayName": "ImageObject"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<com.spotify.ImageObject>",
          "namespace": "lang.taxi",
          "longDisplayName": "com.spotify.ImageObject[]",
          "shortDisplayName": "ImageObject[]"
        },
        "name": "get_playlist_cover",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idImagesService@@get_playlist_cover",
          "parameters": [],
          "name": "PlaylistsPlaylist_idImagesService@@get_playlist_cover",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idImagesService@@get_playlist_cover",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idImagesService / get_playlist_cover",
          "shortDisplayName": "get_playlist_cover"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idImagesService@@upload_custom_playlist_cover",
          "parameters": [],
          "name": "PlaylistsPlaylist_idImagesService@@upload_custom_playlist_cover",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idImagesService@@upload_custom_playlist_cover",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idImagesService / upload_custom_playlist_cover",
          "shortDisplayName": "upload_custom_playlist_cover"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.byte",
            "parameters": [],
            "name": "byte",
            "parameterizedName": "com.spotify.byte",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.byte",
            "shortDisplayName": "byte"
          },
          "name": "byte",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.byte",
            "parameters": [],
            "name": "byte",
            "parameterizedName": "com.spotify.byte",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.byte",
            "shortDisplayName": "byte"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/images"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Replace the image used to represent a specific playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "upload_custom_playlist_cover",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idImagesService@@upload_custom_playlist_cover",
          "parameters": [],
          "name": "PlaylistsPlaylist_idImagesService@@upload_custom_playlist_cover",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idImagesService@@upload_custom_playlist_cover",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idImagesService / upload_custom_playlist_cover",
          "shortDisplayName": "upload_custom_playlist_cover"
        }
      }],
      "qualifiedName": "com.spotify.PlaylistsPlaylist_idImagesService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idImagesService",
        "parameters": [],
        "name": "PlaylistsPlaylist_idImagesService",
        "parameterizedName": "com.spotify.PlaylistsPlaylist_idImagesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistsPlaylist_idImagesService",
        "shortDisplayName": "PlaylistsPlaylist_idImagesService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.BrowseNew_releasesService",
        "parameters": [],
        "name": "BrowseNew_releasesService",
        "parameterizedName": "com.spotify.BrowseNew_releasesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.BrowseNew_releasesService",
        "shortDisplayName": "BrowseNew_releasesService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseNew_releasesService@@get_new_releases",
          "parameters": [],
          "name": "BrowseNew_releasesService@@get_new_releases",
          "parameterizedName": "com.spotify.BrowseNew_releasesService@@get_new_releases",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseNew_releasesService / get_new_releases",
          "shortDisplayName": "get_new_releases"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "country",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_new_releases",
          "parameters": [],
          "name": "AnonymousTypeGet_new_releases",
          "parameterizedName": "com.spotify.AnonymousTypeGet_new_releases",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_new_releases",
          "shortDisplayName": "AnonymousTypeGet_new_releases"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/browse/new-releases"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_new_releases",
            "parameters": [],
            "name": "AnonymousTypeGet_new_releases",
            "parameterizedName": "com.spotify.AnonymousTypeGet_new_releases",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_new_releases",
            "shortDisplayName": "AnonymousTypeGet_new_releases"
          }, "constraints": []
        },
        "typeDoc": "Get a list of new album releases featured in Spotify (shown, for example, on a Spotify player’s “Browse” tab).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_new_releases",
          "parameters": [],
          "name": "AnonymousTypeGet_new_releases",
          "parameterizedName": "com.spotify.AnonymousTypeGet_new_releases",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_new_releases",
          "shortDisplayName": "AnonymousTypeGet_new_releases"
        },
        "name": "get_new_releases",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseNew_releasesService@@get_new_releases",
          "parameters": [],
          "name": "BrowseNew_releasesService@@get_new_releases",
          "parameterizedName": "com.spotify.BrowseNew_releasesService@@get_new_releases",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseNew_releasesService / get_new_releases",
          "shortDisplayName": "get_new_releases"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service BrowseNew_releasesService {\n         [[ Get a list of new album releases featured in Spotify (shown, for example, on a Spotify player’s “Browse” tab).\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/browse/new-releases\")\n         operation get_new_releases(  country : String,  limit : Int,  offset : Int ) : AnonymousTypeGet_new_releases\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "29f3f7",
        "fullHash": "ec2f23499ceb7c0e6b19ad469a590f3e0fc65f705f53c35c03bd7a91f3a55c61"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseNew_releasesService@@get_new_releases",
          "parameters": [],
          "name": "BrowseNew_releasesService@@get_new_releases",
          "parameterizedName": "com.spotify.BrowseNew_releasesService@@get_new_releases",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseNew_releasesService / get_new_releases",
          "shortDisplayName": "get_new_releases"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "country",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "offset",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_new_releases",
          "parameters": [],
          "name": "AnonymousTypeGet_new_releases",
          "parameterizedName": "com.spotify.AnonymousTypeGet_new_releases",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_new_releases",
          "shortDisplayName": "AnonymousTypeGet_new_releases"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/browse/new-releases"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_new_releases",
            "parameters": [],
            "name": "AnonymousTypeGet_new_releases",
            "parameterizedName": "com.spotify.AnonymousTypeGet_new_releases",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_new_releases",
            "shortDisplayName": "AnonymousTypeGet_new_releases"
          }, "constraints": []
        },
        "typeDoc": "Get a list of new album releases featured in Spotify (shown, for example, on a Spotify player’s “Browse” tab).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_new_releases",
          "parameters": [],
          "name": "AnonymousTypeGet_new_releases",
          "parameterizedName": "com.spotify.AnonymousTypeGet_new_releases",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_new_releases",
          "shortDisplayName": "AnonymousTypeGet_new_releases"
        },
        "name": "get_new_releases",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.BrowseNew_releasesService@@get_new_releases",
          "parameters": [],
          "name": "BrowseNew_releasesService@@get_new_releases",
          "parameterizedName": "com.spotify.BrowseNew_releasesService@@get_new_releases",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.BrowseNew_releasesService / get_new_releases",
          "shortDisplayName": "get_new_releases"
        }
      }],
      "qualifiedName": "com.spotify.BrowseNew_releasesService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.BrowseNew_releasesService",
        "parameters": [],
        "name": "BrowseNew_releasesService",
        "parameterizedName": "com.spotify.BrowseNew_releasesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.BrowseNew_releasesService",
        "shortDisplayName": "BrowseNew_releasesService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeFollowingService",
        "parameters": [],
        "name": "MeFollowingService",
        "parameterizedName": "com.spotify.MeFollowingService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeFollowingService",
        "shortDisplayName": "MeFollowingService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingService@@get_followed",
          "parameters": [],
          "name": "MeFollowingService@@get_followed",
          "parameterizedName": "com.spotify.MeFollowingService@@get_followed",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingService / get_followed",
          "shortDisplayName": "get_followed"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "`type`",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "after",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_followed",
          "parameters": [],
          "name": "AnonymousTypeGet_followed",
          "parameterizedName": "com.spotify.AnonymousTypeGet_followed",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_followed",
          "shortDisplayName": "AnonymousTypeGet_followed"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/following"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_followed",
            "parameters": [],
            "name": "AnonymousTypeGet_followed",
            "parameterizedName": "com.spotify.AnonymousTypeGet_followed",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_followed",
            "shortDisplayName": "AnonymousTypeGet_followed"
          }, "constraints": []
        },
        "typeDoc": "Get the current user's followed artists.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_followed",
          "parameters": [],
          "name": "AnonymousTypeGet_followed",
          "parameterizedName": "com.spotify.AnonymousTypeGet_followed",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_followed",
          "shortDisplayName": "AnonymousTypeGet_followed"
        },
        "name": "get_followed",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingService@@get_followed",
          "parameters": [],
          "name": "MeFollowingService@@get_followed",
          "parameterizedName": "com.spotify.MeFollowingService@@get_followed",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingService / get_followed",
          "shortDisplayName": "get_followed"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingService@@follow_artists_users",
          "parameters": [],
          "name": "MeFollowingService@@follow_artists_users",
          "parameterizedName": "com.spotify.MeFollowingService@@follow_artists_users",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingService / follow_artists_users",
          "shortDisplayName": "follow_artists_users"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "`type`",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
            "parameters": [],
            "name": "AnonymousTypeFollow_artists_usersBody",
            "parameterizedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
            "shortDisplayName": "AnonymousTypeFollow_artists_usersBody"
          },
          "name": "anonymousTypeFollow_artists_usersBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
            "parameters": [],
            "name": "AnonymousTypeFollow_artists_usersBody",
            "parameterizedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
            "shortDisplayName": "AnonymousTypeFollow_artists_usersBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/following"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Add the current user as a follower of one or more artists or other Spotify users.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "follow_artists_users",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingService@@follow_artists_users",
          "parameters": [],
          "name": "MeFollowingService@@follow_artists_users",
          "parameterizedName": "com.spotify.MeFollowingService@@follow_artists_users",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingService / follow_artists_users",
          "shortDisplayName": "follow_artists_users"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingService@@unfollow_artists_users",
          "parameters": [],
          "name": "MeFollowingService@@unfollow_artists_users",
          "parameterizedName": "com.spotify.MeFollowingService@@unfollow_artists_users",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingService / unfollow_artists_users",
          "shortDisplayName": "unfollow_artists_users"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "`type`",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
            "parameters": [],
            "name": "AnonymousTypeUnfollow_artists_usersBody",
            "parameterizedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
            "shortDisplayName": "AnonymousTypeUnfollow_artists_usersBody"
          },
          "name": "anonymousTypeUnfollow_artists_usersBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
            "parameters": [],
            "name": "AnonymousTypeUnfollow_artists_usersBody",
            "parameterizedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
            "shortDisplayName": "AnonymousTypeUnfollow_artists_usersBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/me/following"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Remove the current user as a follower of one or more artists or other Spotify users.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "unfollow_artists_users",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingService@@unfollow_artists_users",
          "parameters": [],
          "name": "MeFollowingService@@unfollow_artists_users",
          "parameterizedName": "com.spotify.MeFollowingService@@unfollow_artists_users",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingService / unfollow_artists_users",
          "shortDisplayName": "unfollow_artists_users"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeFollowingService {\n         [[ Get the current user's followed artists.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/following\")\n         operation get_followed(  `type` : String,  after : String,  limit : Int ) : AnonymousTypeGet_followed\n         [[ Add the current user as a follower of one or more artists or other Spotify users.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/following\")\n         operation follow_artists_users(  `type` : String,  ids : String, @RequestBody anonymousTypeFollow_artists_usersBody : AnonymousTypeFollow_artists_usersBody )\n         [[ Remove the current user as a follower of one or more artists or other Spotify users.\n         ]]\n         @HttpOperation(method = \"DELETE\" , url = \"https://api.spotify.com/v1/me/following\")\n         operation unfollow_artists_users(  `type` : String,  ids : String, @RequestBody anonymousTypeUnfollow_artists_usersBody : AnonymousTypeUnfollow_artists_usersBody )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "df910d",
        "fullHash": "bd06aa745746ef887fb7c5bd6412634efd19af7aa2e01af98b01ca708a6012cb"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingService@@get_followed",
          "parameters": [],
          "name": "MeFollowingService@@get_followed",
          "parameterizedName": "com.spotify.MeFollowingService@@get_followed",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingService / get_followed",
          "shortDisplayName": "get_followed"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "`type`",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "after",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_followed",
          "parameters": [],
          "name": "AnonymousTypeGet_followed",
          "parameterizedName": "com.spotify.AnonymousTypeGet_followed",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_followed",
          "shortDisplayName": "AnonymousTypeGet_followed"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/following"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_followed",
            "parameters": [],
            "name": "AnonymousTypeGet_followed",
            "parameterizedName": "com.spotify.AnonymousTypeGet_followed",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_followed",
            "shortDisplayName": "AnonymousTypeGet_followed"
          }, "constraints": []
        },
        "typeDoc": "Get the current user's followed artists.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_followed",
          "parameters": [],
          "name": "AnonymousTypeGet_followed",
          "parameterizedName": "com.spotify.AnonymousTypeGet_followed",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_followed",
          "shortDisplayName": "AnonymousTypeGet_followed"
        },
        "name": "get_followed",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingService@@get_followed",
          "parameters": [],
          "name": "MeFollowingService@@get_followed",
          "parameterizedName": "com.spotify.MeFollowingService@@get_followed",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingService / get_followed",
          "shortDisplayName": "get_followed"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingService@@follow_artists_users",
          "parameters": [],
          "name": "MeFollowingService@@follow_artists_users",
          "parameterizedName": "com.spotify.MeFollowingService@@follow_artists_users",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingService / follow_artists_users",
          "shortDisplayName": "follow_artists_users"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "`type`",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
            "parameters": [],
            "name": "AnonymousTypeFollow_artists_usersBody",
            "parameterizedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
            "shortDisplayName": "AnonymousTypeFollow_artists_usersBody"
          },
          "name": "anonymousTypeFollow_artists_usersBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
            "parameters": [],
            "name": "AnonymousTypeFollow_artists_usersBody",
            "parameterizedName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeFollow_artists_usersBody",
            "shortDisplayName": "AnonymousTypeFollow_artists_usersBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/following"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Add the current user as a follower of one or more artists or other Spotify users.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "follow_artists_users",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingService@@follow_artists_users",
          "parameters": [],
          "name": "MeFollowingService@@follow_artists_users",
          "parameterizedName": "com.spotify.MeFollowingService@@follow_artists_users",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingService / follow_artists_users",
          "shortDisplayName": "follow_artists_users"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingService@@unfollow_artists_users",
          "parameters": [],
          "name": "MeFollowingService@@unfollow_artists_users",
          "parameterizedName": "com.spotify.MeFollowingService@@unfollow_artists_users",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingService / unfollow_artists_users",
          "shortDisplayName": "unfollow_artists_users"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "`type`",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
            "parameters": [],
            "name": "AnonymousTypeUnfollow_artists_usersBody",
            "parameterizedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
            "shortDisplayName": "AnonymousTypeUnfollow_artists_usersBody"
          },
          "name": "anonymousTypeUnfollow_artists_usersBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
            "parameters": [],
            "name": "AnonymousTypeUnfollow_artists_usersBody",
            "parameterizedName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeUnfollow_artists_usersBody",
            "shortDisplayName": "AnonymousTypeUnfollow_artists_usersBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "DELETE", "url": "https://api.spotify.com/v1/me/following"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Remove the current user as a follower of one or more artists or other Spotify users.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "unfollow_artists_users",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingService@@unfollow_artists_users",
          "parameters": [],
          "name": "MeFollowingService@@unfollow_artists_users",
          "parameterizedName": "com.spotify.MeFollowingService@@unfollow_artists_users",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingService / unfollow_artists_users",
          "shortDisplayName": "unfollow_artists_users"
        }
      }],
      "qualifiedName": "com.spotify.MeFollowingService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeFollowingService",
        "parameters": [],
        "name": "MeFollowingService",
        "parameterizedName": "com.spotify.MeFollowingService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeFollowingService",
        "shortDisplayName": "MeFollowingService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MeFollowingContainsService",
        "parameters": [],
        "name": "MeFollowingContainsService",
        "parameterizedName": "com.spotify.MeFollowingContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeFollowingContainsService",
        "shortDisplayName": "MeFollowingContainsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingContainsService@@check_current_user_follows",
          "parameters": [],
          "name": "MeFollowingContainsService@@check_current_user_follows",
          "parameterizedName": "com.spotify.MeFollowingContainsService@@check_current_user_follows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingContainsService / check_current_user_follows",
          "shortDisplayName": "check_current_user_follows"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "`type`",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/following/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check to see if the current user is following one or more artists or other Spotify users.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_current_user_follows",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingContainsService@@check_current_user_follows",
          "parameters": [],
          "name": "MeFollowingContainsService@@check_current_user_follows",
          "parameterizedName": "com.spotify.MeFollowingContainsService@@check_current_user_follows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingContainsService / check_current_user_follows",
          "shortDisplayName": "check_current_user_follows"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MeFollowingContainsService {\n         [[ Check to see if the current user is following one or more artists or other Spotify users.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/following/contains\")\n         operation check_current_user_follows(  `type` : String,  ids : String ) : Boolean[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "7abb8b",
        "fullHash": "85650df5eb58a52951a1f940f29aa20c79d318eef1777f0961141e92b3282c5b"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingContainsService@@check_current_user_follows",
          "parameters": [],
          "name": "MeFollowingContainsService@@check_current_user_follows",
          "parameterizedName": "com.spotify.MeFollowingContainsService@@check_current_user_follows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingContainsService / check_current_user_follows",
          "shortDisplayName": "check_current_user_follows"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "`type`",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/following/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check to see if the current user is following one or more artists or other Spotify users.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_current_user_follows",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MeFollowingContainsService@@check_current_user_follows",
          "parameters": [],
          "name": "MeFollowingContainsService@@check_current_user_follows",
          "parameterizedName": "com.spotify.MeFollowingContainsService@@check_current_user_follows",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MeFollowingContainsService / check_current_user_follows",
          "shortDisplayName": "check_current_user_follows"
        }
      }],
      "qualifiedName": "com.spotify.MeFollowingContainsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MeFollowingContainsService",
        "parameters": [],
        "name": "MeFollowingContainsService",
        "parameterizedName": "com.spotify.MeFollowingContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MeFollowingContainsService",
        "shortDisplayName": "MeFollowingContainsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService",
        "parameters": [],
        "name": "PlaylistsPlaylist_idFollowersContainsService",
        "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService",
        "shortDisplayName": "PlaylistsPlaylist_idFollowersContainsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService@@check_if_user_follows_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idFollowersContainsService@@check_if_user_follows_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService@@check_if_user_follows_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService / check_if_user_follows_playlist",
          "shortDisplayName": "check_if_user_follows_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/followers/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check to see if one or more Spotify users are following a specified playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_if_user_follows_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService@@check_if_user_follows_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idFollowersContainsService@@check_if_user_follows_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService@@check_if_user_follows_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService / check_if_user_follows_playlist",
          "shortDisplayName": "check_if_user_follows_playlist"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service PlaylistsPlaylist_idFollowersContainsService {\n         [[ Check to see if one or more Spotify users are following a specified playlist.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/playlists/{playlist_id}/followers/contains\")\n         operation check_if_user_follows_playlist( @PathVariable(value = \"playlist_id\") playlist_id : String,  ids : String ) : Boolean[]\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "60fe6f",
        "fullHash": "260a00c09ff9d198aa65e36c7a8ebce504b5298e5a509f84ff45b53c422ec2f7"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService@@check_if_user_follows_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idFollowersContainsService@@check_if_user_follows_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService@@check_if_user_follows_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService / check_if_user_follows_playlist",
          "shortDisplayName": "check_if_user_follows_playlist"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "playlist_id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "playlist_id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/playlists/{playlist_id}/followers/contains"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Array",
            "parameters": [{
              "fullyQualifiedName": "lang.taxi.Boolean",
              "parameters": [],
              "name": "Boolean",
              "parameterizedName": "lang.taxi.Boolean",
              "namespace": "lang.taxi",
              "longDisplayName": "lang.taxi.Boolean",
              "shortDisplayName": "Boolean"
            }],
            "name": "Array",
            "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean[]",
            "shortDisplayName": "Boolean[]"
          }, "constraints": []
        },
        "typeDoc": "Check to see if one or more Spotify users are following a specified playlist.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Array",
          "parameters": [{
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }],
          "name": "Array",
          "parameterizedName": "lang.taxi.Array<lang.taxi.Boolean>",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Boolean[]",
          "shortDisplayName": "Boolean[]"
        },
        "name": "check_if_user_follows_playlist",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService@@check_if_user_follows_playlist",
          "parameters": [],
          "name": "PlaylistsPlaylist_idFollowersContainsService@@check_if_user_follows_playlist",
          "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService@@check_if_user_follows_playlist",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService / check_if_user_follows_playlist",
          "shortDisplayName": "check_if_user_follows_playlist"
        }
      }],
      "qualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService",
        "parameters": [],
        "name": "PlaylistsPlaylist_idFollowersContainsService",
        "parameterizedName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.PlaylistsPlaylist_idFollowersContainsService",
        "shortDisplayName": "PlaylistsPlaylist_idFollowersContainsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.Audio_featuresService",
        "parameters": [],
        "name": "Audio_featuresService",
        "parameterizedName": "com.spotify.Audio_featuresService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Audio_featuresService",
        "shortDisplayName": "Audio_featuresService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.Audio_featuresService@@get_several_audio_features",
          "parameters": [],
          "name": "Audio_featuresService@@get_several_audio_features",
          "parameterizedName": "com.spotify.Audio_featuresService@@get_several_audio_features",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.Audio_featuresService / get_several_audio_features",
          "shortDisplayName": "get_several_audio_features"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_audio_features",
          "parameters": [],
          "name": "AnonymousTypeGet_several_audio_features",
          "parameterizedName": "com.spotify.AnonymousTypeGet_several_audio_features",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_several_audio_features",
          "shortDisplayName": "AnonymousTypeGet_several_audio_features"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/audio-features"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_audio_features",
            "parameters": [],
            "name": "AnonymousTypeGet_several_audio_features",
            "parameterizedName": "com.spotify.AnonymousTypeGet_several_audio_features",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_several_audio_features",
            "shortDisplayName": "AnonymousTypeGet_several_audio_features"
          }, "constraints": []
        },
        "typeDoc": "Get audio features for multiple tracks based on their Spotify IDs.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_audio_features",
          "parameters": [],
          "name": "AnonymousTypeGet_several_audio_features",
          "parameterizedName": "com.spotify.AnonymousTypeGet_several_audio_features",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_several_audio_features",
          "shortDisplayName": "AnonymousTypeGet_several_audio_features"
        },
        "name": "get_several_audio_features",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.Audio_featuresService@@get_several_audio_features",
          "parameters": [],
          "name": "Audio_featuresService@@get_several_audio_features",
          "parameterizedName": "com.spotify.Audio_featuresService@@get_several_audio_features",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.Audio_featuresService / get_several_audio_features",
          "shortDisplayName": "get_several_audio_features"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service Audio_featuresService {\n         [[ Get audio features for multiple tracks based on their Spotify IDs.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/audio-features\")\n         operation get_several_audio_features(  ids : String ) : AnonymousTypeGet_several_audio_features\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d7f833",
        "fullHash": "20b6c81f886dd3a38fd1b0d06902e30d5c54ac5bf1d66553f964dfdab990f663"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.Audio_featuresService@@get_several_audio_features",
          "parameters": [],
          "name": "Audio_featuresService@@get_several_audio_features",
          "parameterizedName": "com.spotify.Audio_featuresService@@get_several_audio_features",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.Audio_featuresService / get_several_audio_features",
          "shortDisplayName": "get_several_audio_features"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "ids",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_audio_features",
          "parameters": [],
          "name": "AnonymousTypeGet_several_audio_features",
          "parameterizedName": "com.spotify.AnonymousTypeGet_several_audio_features",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_several_audio_features",
          "shortDisplayName": "AnonymousTypeGet_several_audio_features"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/audio-features"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_audio_features",
            "parameters": [],
            "name": "AnonymousTypeGet_several_audio_features",
            "parameterizedName": "com.spotify.AnonymousTypeGet_several_audio_features",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_several_audio_features",
            "shortDisplayName": "AnonymousTypeGet_several_audio_features"
          }, "constraints": []
        },
        "typeDoc": "Get audio features for multiple tracks based on their Spotify IDs.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_several_audio_features",
          "parameters": [],
          "name": "AnonymousTypeGet_several_audio_features",
          "parameterizedName": "com.spotify.AnonymousTypeGet_several_audio_features",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_several_audio_features",
          "shortDisplayName": "AnonymousTypeGet_several_audio_features"
        },
        "name": "get_several_audio_features",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.Audio_featuresService@@get_several_audio_features",
          "parameters": [],
          "name": "Audio_featuresService@@get_several_audio_features",
          "parameterizedName": "com.spotify.Audio_featuresService@@get_several_audio_features",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.Audio_featuresService / get_several_audio_features",
          "shortDisplayName": "get_several_audio_features"
        }
      }],
      "qualifiedName": "com.spotify.Audio_featuresService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.Audio_featuresService",
        "parameters": [],
        "name": "Audio_featuresService",
        "parameterizedName": "com.spotify.Audio_featuresService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Audio_featuresService",
        "shortDisplayName": "Audio_featuresService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.Audio_featuresIdService",
        "parameters": [],
        "name": "Audio_featuresIdService",
        "parameterizedName": "com.spotify.Audio_featuresIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Audio_featuresIdService",
        "shortDisplayName": "Audio_featuresIdService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.Audio_featuresIdService@@get_audio_features",
          "parameters": [],
          "name": "Audio_featuresIdService@@get_audio_features",
          "parameterizedName": "com.spotify.Audio_featuresIdService@@get_audio_features",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.Audio_featuresIdService / get_audio_features",
          "shortDisplayName": "get_audio_features"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AudioFeaturesObject",
          "parameters": [],
          "name": "AudioFeaturesObject",
          "parameterizedName": "com.spotify.AudioFeaturesObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudioFeaturesObject",
          "shortDisplayName": "AudioFeaturesObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/audio-features/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AudioFeaturesObject",
            "parameters": [],
            "name": "AudioFeaturesObject",
            "parameterizedName": "com.spotify.AudioFeaturesObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AudioFeaturesObject",
            "shortDisplayName": "AudioFeaturesObject"
          }, "constraints": []
        },
        "typeDoc": "Get audio feature information for a single track identified by its unique\n     Spotify ID.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AudioFeaturesObject",
          "parameters": [],
          "name": "AudioFeaturesObject",
          "parameterizedName": "com.spotify.AudioFeaturesObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudioFeaturesObject",
          "shortDisplayName": "AudioFeaturesObject"
        },
        "name": "get_audio_features",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.Audio_featuresIdService@@get_audio_features",
          "parameters": [],
          "name": "Audio_featuresIdService@@get_audio_features",
          "parameterizedName": "com.spotify.Audio_featuresIdService@@get_audio_features",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.Audio_featuresIdService / get_audio_features",
          "shortDisplayName": "get_audio_features"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service Audio_featuresIdService {\n         [[ Get audio feature information for a single track identified by its unique\n         Spotify ID.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/audio-features/{id}\")\n         operation get_audio_features( @PathVariable(value = \"id\") id : String ) : AudioFeaturesObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "55fa2c",
        "fullHash": "558282093e4d883464c085502a3d7bbd836b9fd568ffa2ec32fcc3d8ac34562d"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.Audio_featuresIdService@@get_audio_features",
          "parameters": [],
          "name": "Audio_featuresIdService@@get_audio_features",
          "parameterizedName": "com.spotify.Audio_featuresIdService@@get_audio_features",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.Audio_featuresIdService / get_audio_features",
          "shortDisplayName": "get_audio_features"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AudioFeaturesObject",
          "parameters": [],
          "name": "AudioFeaturesObject",
          "parameterizedName": "com.spotify.AudioFeaturesObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudioFeaturesObject",
          "shortDisplayName": "AudioFeaturesObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/audio-features/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AudioFeaturesObject",
            "parameters": [],
            "name": "AudioFeaturesObject",
            "parameterizedName": "com.spotify.AudioFeaturesObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AudioFeaturesObject",
            "shortDisplayName": "AudioFeaturesObject"
          }, "constraints": []
        },
        "typeDoc": "Get audio feature information for a single track identified by its unique\n     Spotify ID.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AudioFeaturesObject",
          "parameters": [],
          "name": "AudioFeaturesObject",
          "parameterizedName": "com.spotify.AudioFeaturesObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudioFeaturesObject",
          "shortDisplayName": "AudioFeaturesObject"
        },
        "name": "get_audio_features",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.Audio_featuresIdService@@get_audio_features",
          "parameters": [],
          "name": "Audio_featuresIdService@@get_audio_features",
          "parameterizedName": "com.spotify.Audio_featuresIdService@@get_audio_features",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.Audio_featuresIdService / get_audio_features",
          "shortDisplayName": "get_audio_features"
        }
      }],
      "qualifiedName": "com.spotify.Audio_featuresIdService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.Audio_featuresIdService",
        "parameters": [],
        "name": "Audio_featuresIdService",
        "parameterizedName": "com.spotify.Audio_featuresIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Audio_featuresIdService",
        "shortDisplayName": "Audio_featuresIdService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.Audio_analysisIdService",
        "parameters": [],
        "name": "Audio_analysisIdService",
        "parameterizedName": "com.spotify.Audio_analysisIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Audio_analysisIdService",
        "shortDisplayName": "Audio_analysisIdService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.Audio_analysisIdService@@get_audio_analysis",
          "parameters": [],
          "name": "Audio_analysisIdService@@get_audio_analysis",
          "parameterizedName": "com.spotify.Audio_analysisIdService@@get_audio_analysis",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.Audio_analysisIdService / get_audio_analysis",
          "shortDisplayName": "get_audio_analysis"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AudioAnalysisObject",
          "parameters": [],
          "name": "AudioAnalysisObject",
          "parameterizedName": "com.spotify.AudioAnalysisObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudioAnalysisObject",
          "shortDisplayName": "AudioAnalysisObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/audio-analysis/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AudioAnalysisObject",
            "parameters": [],
            "name": "AudioAnalysisObject",
            "parameterizedName": "com.spotify.AudioAnalysisObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AudioAnalysisObject",
            "shortDisplayName": "AudioAnalysisObject"
          }, "constraints": []
        },
        "typeDoc": "Get a low-level audio analysis for a track in the Spotify catalog. The audio analysis describes the track’s structure and musical content, including rhythm, pitch, and timbre.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AudioAnalysisObject",
          "parameters": [],
          "name": "AudioAnalysisObject",
          "parameterizedName": "com.spotify.AudioAnalysisObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudioAnalysisObject",
          "shortDisplayName": "AudioAnalysisObject"
        },
        "name": "get_audio_analysis",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.Audio_analysisIdService@@get_audio_analysis",
          "parameters": [],
          "name": "Audio_analysisIdService@@get_audio_analysis",
          "parameterizedName": "com.spotify.Audio_analysisIdService@@get_audio_analysis",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.Audio_analysisIdService / get_audio_analysis",
          "shortDisplayName": "get_audio_analysis"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service Audio_analysisIdService {\n         [[ Get a low-level audio analysis for a track in the Spotify catalog. The audio analysis describes the track’s structure and musical content, including rhythm, pitch, and timbre.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/audio-analysis/{id}\")\n         operation get_audio_analysis( @PathVariable(value = \"id\") id : String ) : AudioAnalysisObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "e1c925",
        "fullHash": "e716793599375329c383135e3fcc4d83845625d3ced208672521c16471c130da"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.Audio_analysisIdService@@get_audio_analysis",
          "parameters": [],
          "name": "Audio_analysisIdService@@get_audio_analysis",
          "parameterizedName": "com.spotify.Audio_analysisIdService@@get_audio_analysis",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.Audio_analysisIdService / get_audio_analysis",
          "shortDisplayName": "get_audio_analysis"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "id",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "PathVariable",
              "parameters": [],
              "name": "PathVariable",
              "parameterizedName": "PathVariable",
              "namespace": "",
              "longDisplayName": "PathVariable",
              "shortDisplayName": "PathVariable"
            }, "params": {"value": "id"}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AudioAnalysisObject",
          "parameters": [],
          "name": "AudioAnalysisObject",
          "parameterizedName": "com.spotify.AudioAnalysisObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudioAnalysisObject",
          "shortDisplayName": "AudioAnalysisObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/audio-analysis/{id}"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AudioAnalysisObject",
            "parameters": [],
            "name": "AudioAnalysisObject",
            "parameterizedName": "com.spotify.AudioAnalysisObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AudioAnalysisObject",
            "shortDisplayName": "AudioAnalysisObject"
          }, "constraints": []
        },
        "typeDoc": "Get a low-level audio analysis for a track in the Spotify catalog. The audio analysis describes the track’s structure and musical content, including rhythm, pitch, and timbre.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AudioAnalysisObject",
          "parameters": [],
          "name": "AudioAnalysisObject",
          "parameterizedName": "com.spotify.AudioAnalysisObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AudioAnalysisObject",
          "shortDisplayName": "AudioAnalysisObject"
        },
        "name": "get_audio_analysis",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.Audio_analysisIdService@@get_audio_analysis",
          "parameters": [],
          "name": "Audio_analysisIdService@@get_audio_analysis",
          "parameterizedName": "com.spotify.Audio_analysisIdService@@get_audio_analysis",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.Audio_analysisIdService / get_audio_analysis",
          "shortDisplayName": "get_audio_analysis"
        }
      }],
      "qualifiedName": "com.spotify.Audio_analysisIdService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.Audio_analysisIdService",
        "parameters": [],
        "name": "Audio_analysisIdService",
        "parameterizedName": "com.spotify.Audio_analysisIdService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.Audio_analysisIdService",
        "shortDisplayName": "Audio_analysisIdService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.RecommendationsService",
        "parameters": [],
        "name": "RecommendationsService",
        "parameterizedName": "com.spotify.RecommendationsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.RecommendationsService",
        "shortDisplayName": "RecommendationsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.RecommendationsService@@get_recommendations",
          "parameters": [],
          "name": "RecommendationsService@@get_recommendations",
          "parameterizedName": "com.spotify.RecommendationsService@@get_recommendations",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.RecommendationsService / get_recommendations",
          "shortDisplayName": "get_recommendations"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "seed_artists",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "seed_genres",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "seed_tracks",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_acousticness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_acousticness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_acousticness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_danceability",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_danceability",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_danceability",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "min_duration_ms",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "max_duration_ms",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "target_duration_ms",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_energy",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_energy",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_energy",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_instrumentalness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_instrumentalness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_instrumentalness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "min_key",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "max_key",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "target_key",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_liveness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_liveness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_liveness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_loudness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_loudness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_loudness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "min_mode",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "max_mode",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "target_mode",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "min_popularity",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "max_popularity",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "target_popularity",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_speechiness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_speechiness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_speechiness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_tempo",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_tempo",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_tempo",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "min_time_signature",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "max_time_signature",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "target_time_signature",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_valence",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_valence",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_valence",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.RecommendationsObject",
          "parameters": [],
          "name": "RecommendationsObject",
          "parameterizedName": "com.spotify.RecommendationsObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.RecommendationsObject",
          "shortDisplayName": "RecommendationsObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/recommendations"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.RecommendationsObject",
            "parameters": [],
            "name": "RecommendationsObject",
            "parameterizedName": "com.spotify.RecommendationsObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.RecommendationsObject",
            "shortDisplayName": "RecommendationsObject"
          }, "constraints": []
        },
        "typeDoc": "Recommendations are generated based on the available information for a given seed entity and matched against similar artists and tracks. If there is sufficient information about the provided seeds, a list of tracks will be returned together with pool size details.\n     For artists and tracks that are very new or obscure there might not be enough data to generate a list of tracks.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.RecommendationsObject",
          "parameters": [],
          "name": "RecommendationsObject",
          "parameterizedName": "com.spotify.RecommendationsObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.RecommendationsObject",
          "shortDisplayName": "RecommendationsObject"
        },
        "name": "get_recommendations",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.RecommendationsService@@get_recommendations",
          "parameters": [],
          "name": "RecommendationsService@@get_recommendations",
          "parameterizedName": "com.spotify.RecommendationsService@@get_recommendations",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.RecommendationsService / get_recommendations",
          "shortDisplayName": "get_recommendations"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service RecommendationsService {\n         [[ Recommendations are generated based on the available information for a given seed entity and matched against similar artists and tracks. If there is sufficient information about the provided seeds, a list of tracks will be returned together with pool size details.\n         For artists and tracks that are very new or obscure there might not be enough data to generate a list of tracks.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/recommendations\")\n         operation get_recommendations(  limit : Int,  market : String,  seed_artists : String,  seed_genres : String,  seed_tracks : String,  min_acousticness : Decimal,  max_acousticness : Decimal,  target_acousticness : Decimal,  min_danceability : Decimal,  max_danceability : Decimal,  target_danceability : Decimal,  min_duration_ms : Int,  max_duration_ms : Int,  target_duration_ms : Int,  min_energy : Decimal,  max_energy : Decimal,  target_energy : Decimal,  min_instrumentalness : Decimal,  max_instrumentalness : Decimal,  target_instrumentalness : Decimal,  min_key : Int,  max_key : Int,  target_key : Int,  min_liveness : Decimal,  max_liveness : Decimal,  target_liveness : Decimal,  min_loudness : Decimal,  max_loudness : Decimal,  target_loudness : Decimal,  min_mode : Int,  max_mode : Int,  target_mode : Int,  min_popularity : Int,  max_popularity : Int,  target_popularity : Int,  min_speechiness : Decimal,  max_speechiness : Decimal,  target_speechiness : Decimal,  min_tempo : Decimal,  max_tempo : Decimal,  target_tempo : Decimal,  min_time_signature : Int,  max_time_signature : Int,  target_time_signature : Int,  min_valence : Decimal,  max_valence : Decimal,  target_valence : Decimal ) : RecommendationsObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "1a4ed2",
        "fullHash": "494f2a15dbb2c343e4ad8f8d843b1ddf228d6730d5090b4d15b2035fa100fb66"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.RecommendationsService@@get_recommendations",
          "parameters": [],
          "name": "RecommendationsService@@get_recommendations",
          "parameterizedName": "com.spotify.RecommendationsService@@get_recommendations",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.RecommendationsService / get_recommendations",
          "shortDisplayName": "get_recommendations"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "seed_artists",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "seed_genres",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "seed_tracks",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_acousticness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_acousticness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_acousticness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_danceability",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_danceability",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_danceability",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "min_duration_ms",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "max_duration_ms",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "target_duration_ms",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_energy",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_energy",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_energy",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_instrumentalness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_instrumentalness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_instrumentalness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "min_key",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "max_key",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "target_key",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_liveness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_liveness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_liveness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_loudness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_loudness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_loudness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "min_mode",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "max_mode",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "target_mode",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "min_popularity",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "max_popularity",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "target_popularity",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_speechiness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_speechiness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_speechiness",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_tempo",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_tempo",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_tempo",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "min_time_signature",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "max_time_signature",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "target_time_signature",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "min_valence",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "max_valence",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          },
          "name": "target_valence",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Decimal",
            "parameters": [],
            "name": "Decimal",
            "parameterizedName": "lang.taxi.Decimal",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Decimal",
            "shortDisplayName": "Decimal"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.RecommendationsObject",
          "parameters": [],
          "name": "RecommendationsObject",
          "parameterizedName": "com.spotify.RecommendationsObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.RecommendationsObject",
          "shortDisplayName": "RecommendationsObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/recommendations"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.RecommendationsObject",
            "parameters": [],
            "name": "RecommendationsObject",
            "parameterizedName": "com.spotify.RecommendationsObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.RecommendationsObject",
            "shortDisplayName": "RecommendationsObject"
          }, "constraints": []
        },
        "typeDoc": "Recommendations are generated based on the available information for a given seed entity and matched against similar artists and tracks. If there is sufficient information about the provided seeds, a list of tracks will be returned together with pool size details.\n     For artists and tracks that are very new or obscure there might not be enough data to generate a list of tracks.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.RecommendationsObject",
          "parameters": [],
          "name": "RecommendationsObject",
          "parameterizedName": "com.spotify.RecommendationsObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.RecommendationsObject",
          "shortDisplayName": "RecommendationsObject"
        },
        "name": "get_recommendations",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.RecommendationsService@@get_recommendations",
          "parameters": [],
          "name": "RecommendationsService@@get_recommendations",
          "parameterizedName": "com.spotify.RecommendationsService@@get_recommendations",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.RecommendationsService / get_recommendations",
          "shortDisplayName": "get_recommendations"
        }
      }],
      "qualifiedName": "com.spotify.RecommendationsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.RecommendationsService",
        "parameters": [],
        "name": "RecommendationsService",
        "parameterizedName": "com.spotify.RecommendationsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.RecommendationsService",
        "shortDisplayName": "RecommendationsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.RecommendationsAvailable_genre_seedsService",
        "parameters": [],
        "name": "RecommendationsAvailable_genre_seedsService",
        "parameterizedName": "com.spotify.RecommendationsAvailable_genre_seedsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.RecommendationsAvailable_genre_seedsService",
        "shortDisplayName": "RecommendationsAvailable_genre_seedsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.RecommendationsAvailable_genre_seedsService@@get_recommendation_genres",
          "parameters": [],
          "name": "RecommendationsAvailable_genre_seedsService@@get_recommendation_genres",
          "parameterizedName": "com.spotify.RecommendationsAvailable_genre_seedsService@@get_recommendation_genres",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.RecommendationsAvailable_genre_seedsService / get_recommendation_genres",
          "shortDisplayName": "get_recommendation_genres"
        },
        "parameters": [],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
          "parameters": [],
          "name": "AnonymousTypeGet_recommendation_genres",
          "parameterizedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_recommendation_genres",
          "shortDisplayName": "AnonymousTypeGet_recommendation_genres"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/recommendations/available-genre-seeds"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
            "parameters": [],
            "name": "AnonymousTypeGet_recommendation_genres",
            "parameterizedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_recommendation_genres",
            "shortDisplayName": "AnonymousTypeGet_recommendation_genres"
          }, "constraints": []
        },
        "typeDoc": "Retrieve a list of available genres seed parameter values for [recommendations](/documentation/web-api/reference/get-recommendations).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
          "parameters": [],
          "name": "AnonymousTypeGet_recommendation_genres",
          "parameterizedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_recommendation_genres",
          "shortDisplayName": "AnonymousTypeGet_recommendation_genres"
        },
        "name": "get_recommendation_genres",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.RecommendationsAvailable_genre_seedsService@@get_recommendation_genres",
          "parameters": [],
          "name": "RecommendationsAvailable_genre_seedsService@@get_recommendation_genres",
          "parameterizedName": "com.spotify.RecommendationsAvailable_genre_seedsService@@get_recommendation_genres",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.RecommendationsAvailable_genre_seedsService / get_recommendation_genres",
          "shortDisplayName": "get_recommendation_genres"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service RecommendationsAvailable_genre_seedsService {\n         [[ Retrieve a list of available genres seed parameter values for [recommendations](/documentation/web-api/reference/get-recommendations).\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/recommendations/available-genre-seeds\")\n         operation get_recommendation_genres(  ) : AnonymousTypeGet_recommendation_genres\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "c9f0c3",
        "fullHash": "e81649c60ede73ffef696f067a97a16d133d016f05e14f5b29784323087cdc78"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.RecommendationsAvailable_genre_seedsService@@get_recommendation_genres",
          "parameters": [],
          "name": "RecommendationsAvailable_genre_seedsService@@get_recommendation_genres",
          "parameterizedName": "com.spotify.RecommendationsAvailable_genre_seedsService@@get_recommendation_genres",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.RecommendationsAvailable_genre_seedsService / get_recommendation_genres",
          "shortDisplayName": "get_recommendation_genres"
        },
        "parameters": [],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
          "parameters": [],
          "name": "AnonymousTypeGet_recommendation_genres",
          "parameterizedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_recommendation_genres",
          "shortDisplayName": "AnonymousTypeGet_recommendation_genres"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/recommendations/available-genre-seeds"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
            "parameters": [],
            "name": "AnonymousTypeGet_recommendation_genres",
            "parameterizedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_recommendation_genres",
            "shortDisplayName": "AnonymousTypeGet_recommendation_genres"
          }, "constraints": []
        },
        "typeDoc": "Retrieve a list of available genres seed parameter values for [recommendations](/documentation/web-api/reference/get-recommendations).",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
          "parameters": [],
          "name": "AnonymousTypeGet_recommendation_genres",
          "parameterizedName": "com.spotify.AnonymousTypeGet_recommendation_genres",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_recommendation_genres",
          "shortDisplayName": "AnonymousTypeGet_recommendation_genres"
        },
        "name": "get_recommendation_genres",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.RecommendationsAvailable_genre_seedsService@@get_recommendation_genres",
          "parameters": [],
          "name": "RecommendationsAvailable_genre_seedsService@@get_recommendation_genres",
          "parameterizedName": "com.spotify.RecommendationsAvailable_genre_seedsService@@get_recommendation_genres",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.RecommendationsAvailable_genre_seedsService / get_recommendation_genres",
          "shortDisplayName": "get_recommendation_genres"
        }
      }],
      "qualifiedName": "com.spotify.RecommendationsAvailable_genre_seedsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.RecommendationsAvailable_genre_seedsService",
        "parameters": [],
        "name": "RecommendationsAvailable_genre_seedsService",
        "parameterizedName": "com.spotify.RecommendationsAvailable_genre_seedsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.RecommendationsAvailable_genre_seedsService",
        "shortDisplayName": "RecommendationsAvailable_genre_seedsService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerService",
        "parameters": [],
        "name": "MePlayerService",
        "parameterizedName": "com.spotify.MePlayerService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerService",
        "shortDisplayName": "MePlayerService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerService@@get_information_about_the_users_current_playback",
          "parameters": [],
          "name": "MePlayerService@@get_information_about_the_users_current_playback",
          "parameterizedName": "com.spotify.MePlayerService@@get_information_about_the_users_current_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerService / get_information_about_the_users_current_playback",
          "shortDisplayName": "get_information_about_the_users_current_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "additional_types",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
          "parameters": [],
          "name": "CurrentlyPlayingContextObject",
          "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
          "shortDisplayName": "CurrentlyPlayingContextObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/player"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
            "parameters": [],
            "name": "CurrentlyPlayingContextObject",
            "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
            "shortDisplayName": "CurrentlyPlayingContextObject"
          }, "constraints": []
        },
        "typeDoc": "Get information about the user’s current playback state, including track or episode, progress, and active device.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
          "parameters": [],
          "name": "CurrentlyPlayingContextObject",
          "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
          "shortDisplayName": "CurrentlyPlayingContextObject"
        },
        "name": "get_information_about_the_users_current_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerService@@get_information_about_the_users_current_playback",
          "parameters": [],
          "name": "MePlayerService@@get_information_about_the_users_current_playback",
          "parameterizedName": "com.spotify.MePlayerService@@get_information_about_the_users_current_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerService / get_information_about_the_users_current_playback",
          "shortDisplayName": "get_information_about_the_users_current_playback"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerService@@transfer_a_users_playback",
          "parameters": [],
          "name": "MePlayerService@@transfer_a_users_playback",
          "parameterizedName": "com.spotify.MePlayerService@@transfer_a_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerService / transfer_a_users_playback",
          "shortDisplayName": "transfer_a_users_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
            "parameters": [],
            "name": "AnonymousTypeTransfer_a_users_playbackBody",
            "parameterizedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
            "shortDisplayName": "AnonymousTypeTransfer_a_users_playbackBody"
          },
          "name": "anonymousTypeTransfer_a_users_playbackBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
            "parameters": [],
            "name": "AnonymousTypeTransfer_a_users_playbackBody",
            "parameterizedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
            "shortDisplayName": "AnonymousTypeTransfer_a_users_playbackBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Transfer playback to a new device and determine if it should start playing.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "transfer_a_users_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerService@@transfer_a_users_playback",
          "parameters": [],
          "name": "MePlayerService@@transfer_a_users_playback",
          "parameterizedName": "com.spotify.MePlayerService@@transfer_a_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerService / transfer_a_users_playback",
          "shortDisplayName": "transfer_a_users_playback"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerService {\n         [[ Get information about the user’s current playback state, including track or episode, progress, and active device.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/player\")\n         operation get_information_about_the_users_current_playback(  market : String,  additional_types : String ) : CurrentlyPlayingContextObject\n         [[ Transfer playback to a new device and determine if it should start playing.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/player\")\n         operation transfer_a_users_playback( @RequestBody anonymousTypeTransfer_a_users_playbackBody : AnonymousTypeTransfer_a_users_playbackBody )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "fa63d0",
        "fullHash": "75ab9201944794835d7e8381c7ae432cb02f8f2a8cff7a3cc9c52e3dd084dcaf"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerService@@get_information_about_the_users_current_playback",
          "parameters": [],
          "name": "MePlayerService@@get_information_about_the_users_current_playback",
          "parameterizedName": "com.spotify.MePlayerService@@get_information_about_the_users_current_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerService / get_information_about_the_users_current_playback",
          "shortDisplayName": "get_information_about_the_users_current_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "additional_types",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
          "parameters": [],
          "name": "CurrentlyPlayingContextObject",
          "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
          "shortDisplayName": "CurrentlyPlayingContextObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/player"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
            "parameters": [],
            "name": "CurrentlyPlayingContextObject",
            "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
            "shortDisplayName": "CurrentlyPlayingContextObject"
          }, "constraints": []
        },
        "typeDoc": "Get information about the user’s current playback state, including track or episode, progress, and active device.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
          "parameters": [],
          "name": "CurrentlyPlayingContextObject",
          "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
          "shortDisplayName": "CurrentlyPlayingContextObject"
        },
        "name": "get_information_about_the_users_current_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerService@@get_information_about_the_users_current_playback",
          "parameters": [],
          "name": "MePlayerService@@get_information_about_the_users_current_playback",
          "parameterizedName": "com.spotify.MePlayerService@@get_information_about_the_users_current_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerService / get_information_about_the_users_current_playback",
          "shortDisplayName": "get_information_about_the_users_current_playback"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerService@@transfer_a_users_playback",
          "parameters": [],
          "name": "MePlayerService@@transfer_a_users_playback",
          "parameterizedName": "com.spotify.MePlayerService@@transfer_a_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerService / transfer_a_users_playback",
          "shortDisplayName": "transfer_a_users_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
            "parameters": [],
            "name": "AnonymousTypeTransfer_a_users_playbackBody",
            "parameterizedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
            "shortDisplayName": "AnonymousTypeTransfer_a_users_playbackBody"
          },
          "name": "anonymousTypeTransfer_a_users_playbackBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
            "parameters": [],
            "name": "AnonymousTypeTransfer_a_users_playbackBody",
            "parameterizedName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeTransfer_a_users_playbackBody",
            "shortDisplayName": "AnonymousTypeTransfer_a_users_playbackBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Transfer playback to a new device and determine if it should start playing.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "transfer_a_users_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerService@@transfer_a_users_playback",
          "parameters": [],
          "name": "MePlayerService@@transfer_a_users_playback",
          "parameterizedName": "com.spotify.MePlayerService@@transfer_a_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerService / transfer_a_users_playback",
          "shortDisplayName": "transfer_a_users_playback"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerService",
        "parameters": [],
        "name": "MePlayerService",
        "parameterizedName": "com.spotify.MePlayerService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerService",
        "shortDisplayName": "MePlayerService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerDevicesService",
        "parameters": [],
        "name": "MePlayerDevicesService",
        "parameterizedName": "com.spotify.MePlayerDevicesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerDevicesService",
        "shortDisplayName": "MePlayerDevicesService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerDevicesService@@get_a_users_available_devices",
          "parameters": [],
          "name": "MePlayerDevicesService@@get_a_users_available_devices",
          "parameterizedName": "com.spotify.MePlayerDevicesService@@get_a_users_available_devices",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerDevicesService / get_a_users_available_devices",
          "shortDisplayName": "get_a_users_available_devices"
        },
        "parameters": [],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
          "parameters": [],
          "name": "AnonymousTypeGet_a_users_available_devices",
          "parameterizedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
          "shortDisplayName": "AnonymousTypeGet_a_users_available_devices"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/player/devices"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
            "parameters": [],
            "name": "AnonymousTypeGet_a_users_available_devices",
            "parameterizedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
            "shortDisplayName": "AnonymousTypeGet_a_users_available_devices"
          }, "constraints": []
        },
        "typeDoc": "Get information about a user’s available devices.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
          "parameters": [],
          "name": "AnonymousTypeGet_a_users_available_devices",
          "parameterizedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
          "shortDisplayName": "AnonymousTypeGet_a_users_available_devices"
        },
        "name": "get_a_users_available_devices",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerDevicesService@@get_a_users_available_devices",
          "parameters": [],
          "name": "MePlayerDevicesService@@get_a_users_available_devices",
          "parameterizedName": "com.spotify.MePlayerDevicesService@@get_a_users_available_devices",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerDevicesService / get_a_users_available_devices",
          "shortDisplayName": "get_a_users_available_devices"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerDevicesService {\n         [[ Get information about a user’s available devices.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/player/devices\")\n         operation get_a_users_available_devices(  ) : AnonymousTypeGet_a_users_available_devices\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "feb5f0",
        "fullHash": "5ad98b379e0c0c638402b82ca844feadbc180bc11efe21e39d349d819d293118"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerDevicesService@@get_a_users_available_devices",
          "parameters": [],
          "name": "MePlayerDevicesService@@get_a_users_available_devices",
          "parameterizedName": "com.spotify.MePlayerDevicesService@@get_a_users_available_devices",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerDevicesService / get_a_users_available_devices",
          "shortDisplayName": "get_a_users_available_devices"
        },
        "parameters": [],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
          "parameters": [],
          "name": "AnonymousTypeGet_a_users_available_devices",
          "parameterizedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
          "shortDisplayName": "AnonymousTypeGet_a_users_available_devices"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/player/devices"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
            "parameters": [],
            "name": "AnonymousTypeGet_a_users_available_devices",
            "parameterizedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
            "shortDisplayName": "AnonymousTypeGet_a_users_available_devices"
          }, "constraints": []
        },
        "typeDoc": "Get information about a user’s available devices.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
          "parameters": [],
          "name": "AnonymousTypeGet_a_users_available_devices",
          "parameterizedName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_a_users_available_devices",
          "shortDisplayName": "AnonymousTypeGet_a_users_available_devices"
        },
        "name": "get_a_users_available_devices",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerDevicesService@@get_a_users_available_devices",
          "parameters": [],
          "name": "MePlayerDevicesService@@get_a_users_available_devices",
          "parameterizedName": "com.spotify.MePlayerDevicesService@@get_a_users_available_devices",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerDevicesService / get_a_users_available_devices",
          "shortDisplayName": "get_a_users_available_devices"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerDevicesService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerDevicesService",
        "parameters": [],
        "name": "MePlayerDevicesService",
        "parameterizedName": "com.spotify.MePlayerDevicesService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerDevicesService",
        "shortDisplayName": "MePlayerDevicesService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerCurrently_playingService",
        "parameters": [],
        "name": "MePlayerCurrently_playingService",
        "parameterizedName": "com.spotify.MePlayerCurrently_playingService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerCurrently_playingService",
        "shortDisplayName": "MePlayerCurrently_playingService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerCurrently_playingService@@get_the_users_currently_playing_track",
          "parameters": [],
          "name": "MePlayerCurrently_playingService@@get_the_users_currently_playing_track",
          "parameterizedName": "com.spotify.MePlayerCurrently_playingService@@get_the_users_currently_playing_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerCurrently_playingService / get_the_users_currently_playing_track",
          "shortDisplayName": "get_the_users_currently_playing_track"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "additional_types",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
          "parameters": [],
          "name": "CurrentlyPlayingContextObject",
          "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
          "shortDisplayName": "CurrentlyPlayingContextObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/player/currently-playing"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
            "parameters": [],
            "name": "CurrentlyPlayingContextObject",
            "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
            "shortDisplayName": "CurrentlyPlayingContextObject"
          }, "constraints": []
        },
        "typeDoc": "Get the object currently being played on the user's Spotify account.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
          "parameters": [],
          "name": "CurrentlyPlayingContextObject",
          "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
          "shortDisplayName": "CurrentlyPlayingContextObject"
        },
        "name": "get_the_users_currently_playing_track",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerCurrently_playingService@@get_the_users_currently_playing_track",
          "parameters": [],
          "name": "MePlayerCurrently_playingService@@get_the_users_currently_playing_track",
          "parameterizedName": "com.spotify.MePlayerCurrently_playingService@@get_the_users_currently_playing_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerCurrently_playingService / get_the_users_currently_playing_track",
          "shortDisplayName": "get_the_users_currently_playing_track"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerCurrently_playingService {\n         [[ Get the object currently being played on the user's Spotify account.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/player/currently-playing\")\n         operation get_the_users_currently_playing_track(  market : String,  additional_types : String ) : CurrentlyPlayingContextObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "8748f8",
        "fullHash": "85e25ad5d8dbca9bc7070f00e5758552095450ae755602e14b40424f0621ab5b"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerCurrently_playingService@@get_the_users_currently_playing_track",
          "parameters": [],
          "name": "MePlayerCurrently_playingService@@get_the_users_currently_playing_track",
          "parameterizedName": "com.spotify.MePlayerCurrently_playingService@@get_the_users_currently_playing_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerCurrently_playingService / get_the_users_currently_playing_track",
          "shortDisplayName": "get_the_users_currently_playing_track"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "market",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "additional_types",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
          "parameters": [],
          "name": "CurrentlyPlayingContextObject",
          "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
          "shortDisplayName": "CurrentlyPlayingContextObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/player/currently-playing"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
            "parameters": [],
            "name": "CurrentlyPlayingContextObject",
            "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
            "shortDisplayName": "CurrentlyPlayingContextObject"
          }, "constraints": []
        },
        "typeDoc": "Get the object currently being played on the user's Spotify account.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.CurrentlyPlayingContextObject",
          "parameters": [],
          "name": "CurrentlyPlayingContextObject",
          "parameterizedName": "com.spotify.CurrentlyPlayingContextObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CurrentlyPlayingContextObject",
          "shortDisplayName": "CurrentlyPlayingContextObject"
        },
        "name": "get_the_users_currently_playing_track",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerCurrently_playingService@@get_the_users_currently_playing_track",
          "parameters": [],
          "name": "MePlayerCurrently_playingService@@get_the_users_currently_playing_track",
          "parameterizedName": "com.spotify.MePlayerCurrently_playingService@@get_the_users_currently_playing_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerCurrently_playingService / get_the_users_currently_playing_track",
          "shortDisplayName": "get_the_users_currently_playing_track"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerCurrently_playingService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerCurrently_playingService",
        "parameters": [],
        "name": "MePlayerCurrently_playingService",
        "parameterizedName": "com.spotify.MePlayerCurrently_playingService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerCurrently_playingService",
        "shortDisplayName": "MePlayerCurrently_playingService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerPlayService",
        "parameters": [],
        "name": "MePlayerPlayService",
        "parameterizedName": "com.spotify.MePlayerPlayService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerPlayService",
        "shortDisplayName": "MePlayerPlayService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerPlayService@@start_a_users_playback",
          "parameters": [],
          "name": "MePlayerPlayService@@start_a_users_playback",
          "parameterizedName": "com.spotify.MePlayerPlayService@@start_a_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerPlayService / start_a_users_playback",
          "shortDisplayName": "start_a_users_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
            "parameters": [],
            "name": "AnonymousTypeStart_a_users_playbackBody",
            "parameterizedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
            "shortDisplayName": "AnonymousTypeStart_a_users_playbackBody"
          },
          "name": "anonymousTypeStart_a_users_playbackBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
            "parameters": [],
            "name": "AnonymousTypeStart_a_users_playbackBody",
            "parameterizedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
            "shortDisplayName": "AnonymousTypeStart_a_users_playbackBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player/play"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Start a new context or resume current playback on the user's active device.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "start_a_users_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerPlayService@@start_a_users_playback",
          "parameters": [],
          "name": "MePlayerPlayService@@start_a_users_playback",
          "parameterizedName": "com.spotify.MePlayerPlayService@@start_a_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerPlayService / start_a_users_playback",
          "shortDisplayName": "start_a_users_playback"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerPlayService {\n         [[ Start a new context or resume current playback on the user's active device.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/player/play\")\n         operation start_a_users_playback(  device_id : String, @RequestBody anonymousTypeStart_a_users_playbackBody : AnonymousTypeStart_a_users_playbackBody )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d56e39",
        "fullHash": "6e5919f259b48991a1fdfe71bafcf26a186c6967ae6123f4c3ecce8a16c5b0a6"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerPlayService@@start_a_users_playback",
          "parameters": [],
          "name": "MePlayerPlayService@@start_a_users_playback",
          "parameterizedName": "com.spotify.MePlayerPlayService@@start_a_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerPlayService / start_a_users_playback",
          "shortDisplayName": "start_a_users_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
            "parameters": [],
            "name": "AnonymousTypeStart_a_users_playbackBody",
            "parameterizedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
            "shortDisplayName": "AnonymousTypeStart_a_users_playbackBody"
          },
          "name": "anonymousTypeStart_a_users_playbackBody",
          "metadata": [{
            "name": {
              "fullyQualifiedName": "RequestBody",
              "parameters": [],
              "name": "RequestBody",
              "parameterizedName": "RequestBody",
              "namespace": "",
              "longDisplayName": "RequestBody",
              "shortDisplayName": "RequestBody"
            }, "params": {}
          }],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
            "parameters": [],
            "name": "AnonymousTypeStart_a_users_playbackBody",
            "parameterizedName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeStart_a_users_playbackBody",
            "shortDisplayName": "AnonymousTypeStart_a_users_playbackBody"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player/play"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Start a new context or resume current playback on the user's active device.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "start_a_users_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerPlayService@@start_a_users_playback",
          "parameters": [],
          "name": "MePlayerPlayService@@start_a_users_playback",
          "parameterizedName": "com.spotify.MePlayerPlayService@@start_a_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerPlayService / start_a_users_playback",
          "shortDisplayName": "start_a_users_playback"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerPlayService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerPlayService",
        "parameters": [],
        "name": "MePlayerPlayService",
        "parameterizedName": "com.spotify.MePlayerPlayService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerPlayService",
        "shortDisplayName": "MePlayerPlayService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerPauseService",
        "parameters": [],
        "name": "MePlayerPauseService",
        "parameterizedName": "com.spotify.MePlayerPauseService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerPauseService",
        "shortDisplayName": "MePlayerPauseService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerPauseService@@pause_a_users_playback",
          "parameters": [],
          "name": "MePlayerPauseService@@pause_a_users_playback",
          "parameterizedName": "com.spotify.MePlayerPauseService@@pause_a_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerPauseService / pause_a_users_playback",
          "shortDisplayName": "pause_a_users_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player/pause"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Pause playback on the user's account.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "pause_a_users_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerPauseService@@pause_a_users_playback",
          "parameters": [],
          "name": "MePlayerPauseService@@pause_a_users_playback",
          "parameterizedName": "com.spotify.MePlayerPauseService@@pause_a_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerPauseService / pause_a_users_playback",
          "shortDisplayName": "pause_a_users_playback"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerPauseService {\n         [[ Pause playback on the user's account.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/player/pause\")\n         operation pause_a_users_playback(  device_id : String )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "b8da27",
        "fullHash": "64aedd328a074fc358af601d1006afd725cc1bade2e8d55aec502961f6c7bf3c"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerPauseService@@pause_a_users_playback",
          "parameters": [],
          "name": "MePlayerPauseService@@pause_a_users_playback",
          "parameterizedName": "com.spotify.MePlayerPauseService@@pause_a_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerPauseService / pause_a_users_playback",
          "shortDisplayName": "pause_a_users_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player/pause"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Pause playback on the user's account.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "pause_a_users_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerPauseService@@pause_a_users_playback",
          "parameters": [],
          "name": "MePlayerPauseService@@pause_a_users_playback",
          "parameterizedName": "com.spotify.MePlayerPauseService@@pause_a_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerPauseService / pause_a_users_playback",
          "shortDisplayName": "pause_a_users_playback"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerPauseService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerPauseService",
        "parameters": [],
        "name": "MePlayerPauseService",
        "parameterizedName": "com.spotify.MePlayerPauseService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerPauseService",
        "shortDisplayName": "MePlayerPauseService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerNextService",
        "parameters": [],
        "name": "MePlayerNextService",
        "parameterizedName": "com.spotify.MePlayerNextService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerNextService",
        "shortDisplayName": "MePlayerNextService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerNextService@@skip_users_playback_to_next_track",
          "parameters": [],
          "name": "MePlayerNextService@@skip_users_playback_to_next_track",
          "parameterizedName": "com.spotify.MePlayerNextService@@skip_users_playback_to_next_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerNextService / skip_users_playback_to_next_track",
          "shortDisplayName": "skip_users_playback_to_next_track"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "POST", "url": "https://api.spotify.com/v1/me/player/next"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Skips to next track in the user’s queue.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "skip_users_playback_to_next_track",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerNextService@@skip_users_playback_to_next_track",
          "parameters": [],
          "name": "MePlayerNextService@@skip_users_playback_to_next_track",
          "parameterizedName": "com.spotify.MePlayerNextService@@skip_users_playback_to_next_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerNextService / skip_users_playback_to_next_track",
          "shortDisplayName": "skip_users_playback_to_next_track"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerNextService {\n         [[ Skips to next track in the user’s queue.\n         ]]\n         @HttpOperation(method = \"POST\" , url = \"https://api.spotify.com/v1/me/player/next\")\n         operation skip_users_playback_to_next_track(  device_id : String )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "d8a7b0",
        "fullHash": "0f7ece95e55445959e3105298a4b67ea04a73f441c12ad572f25ace1636e3f58"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerNextService@@skip_users_playback_to_next_track",
          "parameters": [],
          "name": "MePlayerNextService@@skip_users_playback_to_next_track",
          "parameterizedName": "com.spotify.MePlayerNextService@@skip_users_playback_to_next_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerNextService / skip_users_playback_to_next_track",
          "shortDisplayName": "skip_users_playback_to_next_track"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "POST", "url": "https://api.spotify.com/v1/me/player/next"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Skips to next track in the user’s queue.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "skip_users_playback_to_next_track",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerNextService@@skip_users_playback_to_next_track",
          "parameters": [],
          "name": "MePlayerNextService@@skip_users_playback_to_next_track",
          "parameterizedName": "com.spotify.MePlayerNextService@@skip_users_playback_to_next_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerNextService / skip_users_playback_to_next_track",
          "shortDisplayName": "skip_users_playback_to_next_track"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerNextService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerNextService",
        "parameters": [],
        "name": "MePlayerNextService",
        "parameterizedName": "com.spotify.MePlayerNextService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerNextService",
        "shortDisplayName": "MePlayerNextService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerPreviousService",
        "parameters": [],
        "name": "MePlayerPreviousService",
        "parameterizedName": "com.spotify.MePlayerPreviousService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerPreviousService",
        "shortDisplayName": "MePlayerPreviousService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerPreviousService@@skip_users_playback_to_previous_track",
          "parameters": [],
          "name": "MePlayerPreviousService@@skip_users_playback_to_previous_track",
          "parameterizedName": "com.spotify.MePlayerPreviousService@@skip_users_playback_to_previous_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerPreviousService / skip_users_playback_to_previous_track",
          "shortDisplayName": "skip_users_playback_to_previous_track"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "POST", "url": "https://api.spotify.com/v1/me/player/previous"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Skips to previous track in the user’s queue.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "skip_users_playback_to_previous_track",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerPreviousService@@skip_users_playback_to_previous_track",
          "parameters": [],
          "name": "MePlayerPreviousService@@skip_users_playback_to_previous_track",
          "parameterizedName": "com.spotify.MePlayerPreviousService@@skip_users_playback_to_previous_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerPreviousService / skip_users_playback_to_previous_track",
          "shortDisplayName": "skip_users_playback_to_previous_track"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerPreviousService {\n         [[ Skips to previous track in the user’s queue.\n         ]]\n         @HttpOperation(method = \"POST\" , url = \"https://api.spotify.com/v1/me/player/previous\")\n         operation skip_users_playback_to_previous_track(  device_id : String )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "56c4f6",
        "fullHash": "012ed6dc1ace631f34126f076d42705385ce4b94fe93527b8bf4fabd67031b46"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerPreviousService@@skip_users_playback_to_previous_track",
          "parameters": [],
          "name": "MePlayerPreviousService@@skip_users_playback_to_previous_track",
          "parameterizedName": "com.spotify.MePlayerPreviousService@@skip_users_playback_to_previous_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerPreviousService / skip_users_playback_to_previous_track",
          "shortDisplayName": "skip_users_playback_to_previous_track"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "POST", "url": "https://api.spotify.com/v1/me/player/previous"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Skips to previous track in the user’s queue.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "skip_users_playback_to_previous_track",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerPreviousService@@skip_users_playback_to_previous_track",
          "parameters": [],
          "name": "MePlayerPreviousService@@skip_users_playback_to_previous_track",
          "parameterizedName": "com.spotify.MePlayerPreviousService@@skip_users_playback_to_previous_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerPreviousService / skip_users_playback_to_previous_track",
          "shortDisplayName": "skip_users_playback_to_previous_track"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerPreviousService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerPreviousService",
        "parameters": [],
        "name": "MePlayerPreviousService",
        "parameterizedName": "com.spotify.MePlayerPreviousService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerPreviousService",
        "shortDisplayName": "MePlayerPreviousService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerSeekService",
        "parameters": [],
        "name": "MePlayerSeekService",
        "parameterizedName": "com.spotify.MePlayerSeekService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerSeekService",
        "shortDisplayName": "MePlayerSeekService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerSeekService@@seek_to_position_in_currently_playing_track",
          "parameters": [],
          "name": "MePlayerSeekService@@seek_to_position_in_currently_playing_track",
          "parameterizedName": "com.spotify.MePlayerSeekService@@seek_to_position_in_currently_playing_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerSeekService / seek_to_position_in_currently_playing_track",
          "shortDisplayName": "seek_to_position_in_currently_playing_track"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "position_ms",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player/seek"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Seeks to the given position in the user’s currently playing track.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "seek_to_position_in_currently_playing_track",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerSeekService@@seek_to_position_in_currently_playing_track",
          "parameters": [],
          "name": "MePlayerSeekService@@seek_to_position_in_currently_playing_track",
          "parameterizedName": "com.spotify.MePlayerSeekService@@seek_to_position_in_currently_playing_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerSeekService / seek_to_position_in_currently_playing_track",
          "shortDisplayName": "seek_to_position_in_currently_playing_track"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerSeekService {\n         [[ Seeks to the given position in the user’s currently playing track.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/player/seek\")\n         operation seek_to_position_in_currently_playing_track(  position_ms : Int,  device_id : String )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "e56257",
        "fullHash": "074d7176c3470a6dba253c0f0ea7e5bb62d77c55ec04dedf5ca722c226668fef"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerSeekService@@seek_to_position_in_currently_playing_track",
          "parameters": [],
          "name": "MePlayerSeekService@@seek_to_position_in_currently_playing_track",
          "parameterizedName": "com.spotify.MePlayerSeekService@@seek_to_position_in_currently_playing_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerSeekService / seek_to_position_in_currently_playing_track",
          "shortDisplayName": "seek_to_position_in_currently_playing_track"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "position_ms",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player/seek"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Seeks to the given position in the user’s currently playing track.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "seek_to_position_in_currently_playing_track",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerSeekService@@seek_to_position_in_currently_playing_track",
          "parameters": [],
          "name": "MePlayerSeekService@@seek_to_position_in_currently_playing_track",
          "parameterizedName": "com.spotify.MePlayerSeekService@@seek_to_position_in_currently_playing_track",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerSeekService / seek_to_position_in_currently_playing_track",
          "shortDisplayName": "seek_to_position_in_currently_playing_track"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerSeekService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerSeekService",
        "parameters": [],
        "name": "MePlayerSeekService",
        "parameterizedName": "com.spotify.MePlayerSeekService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerSeekService",
        "shortDisplayName": "MePlayerSeekService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerRepeatService",
        "parameters": [],
        "name": "MePlayerRepeatService",
        "parameterizedName": "com.spotify.MePlayerRepeatService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerRepeatService",
        "shortDisplayName": "MePlayerRepeatService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerRepeatService@@set_repeat_mode_on_users_playback",
          "parameters": [],
          "name": "MePlayerRepeatService@@set_repeat_mode_on_users_playback",
          "parameterizedName": "com.spotify.MePlayerRepeatService@@set_repeat_mode_on_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerRepeatService / set_repeat_mode_on_users_playback",
          "shortDisplayName": "set_repeat_mode_on_users_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "state",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player/repeat"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Set the repeat mode for the user's playback. Options are repeat-track,\n     repeat-context, and off.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "set_repeat_mode_on_users_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerRepeatService@@set_repeat_mode_on_users_playback",
          "parameters": [],
          "name": "MePlayerRepeatService@@set_repeat_mode_on_users_playback",
          "parameterizedName": "com.spotify.MePlayerRepeatService@@set_repeat_mode_on_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerRepeatService / set_repeat_mode_on_users_playback",
          "shortDisplayName": "set_repeat_mode_on_users_playback"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerRepeatService {\n         [[ Set the repeat mode for the user's playback. Options are repeat-track,\n         repeat-context, and off.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/player/repeat\")\n         operation set_repeat_mode_on_users_playback(  state : String,  device_id : String )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "0acb5d",
        "fullHash": "b4965b34899bd6f850dd01aac8a18e91b778108c61f854b68658270e6952485a"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerRepeatService@@set_repeat_mode_on_users_playback",
          "parameters": [],
          "name": "MePlayerRepeatService@@set_repeat_mode_on_users_playback",
          "parameterizedName": "com.spotify.MePlayerRepeatService@@set_repeat_mode_on_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerRepeatService / set_repeat_mode_on_users_playback",
          "shortDisplayName": "set_repeat_mode_on_users_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "state",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player/repeat"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Set the repeat mode for the user's playback. Options are repeat-track,\n     repeat-context, and off.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "set_repeat_mode_on_users_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerRepeatService@@set_repeat_mode_on_users_playback",
          "parameters": [],
          "name": "MePlayerRepeatService@@set_repeat_mode_on_users_playback",
          "parameterizedName": "com.spotify.MePlayerRepeatService@@set_repeat_mode_on_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerRepeatService / set_repeat_mode_on_users_playback",
          "shortDisplayName": "set_repeat_mode_on_users_playback"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerRepeatService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerRepeatService",
        "parameters": [],
        "name": "MePlayerRepeatService",
        "parameterizedName": "com.spotify.MePlayerRepeatService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerRepeatService",
        "shortDisplayName": "MePlayerRepeatService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerVolumeService",
        "parameters": [],
        "name": "MePlayerVolumeService",
        "parameterizedName": "com.spotify.MePlayerVolumeService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerVolumeService",
        "shortDisplayName": "MePlayerVolumeService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerVolumeService@@set_volume_for_users_playback",
          "parameters": [],
          "name": "MePlayerVolumeService@@set_volume_for_users_playback",
          "parameterizedName": "com.spotify.MePlayerVolumeService@@set_volume_for_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerVolumeService / set_volume_for_users_playback",
          "shortDisplayName": "set_volume_for_users_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "volume_percent",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player/volume"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Set the volume for the user’s current playback device.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "set_volume_for_users_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerVolumeService@@set_volume_for_users_playback",
          "parameters": [],
          "name": "MePlayerVolumeService@@set_volume_for_users_playback",
          "parameterizedName": "com.spotify.MePlayerVolumeService@@set_volume_for_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerVolumeService / set_volume_for_users_playback",
          "shortDisplayName": "set_volume_for_users_playback"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerVolumeService {\n         [[ Set the volume for the user’s current playback device.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/player/volume\")\n         operation set_volume_for_users_playback(  volume_percent : Int,  device_id : String )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "f8b6e4",
        "fullHash": "304190d8e863f65b2a96a7098a473c0c8d473965dd7151aaa03e43d7523a8822"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerVolumeService@@set_volume_for_users_playback",
          "parameters": [],
          "name": "MePlayerVolumeService@@set_volume_for_users_playback",
          "parameterizedName": "com.spotify.MePlayerVolumeService@@set_volume_for_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerVolumeService / set_volume_for_users_playback",
          "shortDisplayName": "set_volume_for_users_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "volume_percent",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player/volume"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Set the volume for the user’s current playback device.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "set_volume_for_users_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerVolumeService@@set_volume_for_users_playback",
          "parameters": [],
          "name": "MePlayerVolumeService@@set_volume_for_users_playback",
          "parameterizedName": "com.spotify.MePlayerVolumeService@@set_volume_for_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerVolumeService / set_volume_for_users_playback",
          "shortDisplayName": "set_volume_for_users_playback"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerVolumeService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerVolumeService",
        "parameters": [],
        "name": "MePlayerVolumeService",
        "parameterizedName": "com.spotify.MePlayerVolumeService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerVolumeService",
        "shortDisplayName": "MePlayerVolumeService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerShuffleService",
        "parameters": [],
        "name": "MePlayerShuffleService",
        "parameterizedName": "com.spotify.MePlayerShuffleService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerShuffleService",
        "shortDisplayName": "MePlayerShuffleService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerShuffleService@@toggle_shuffle_for_users_playback",
          "parameters": [],
          "name": "MePlayerShuffleService@@toggle_shuffle_for_users_playback",
          "parameterizedName": "com.spotify.MePlayerShuffleService@@toggle_shuffle_for_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerShuffleService / toggle_shuffle_for_users_playback",
          "shortDisplayName": "toggle_shuffle_for_users_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "name": "state",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player/shuffle"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Toggle shuffle on or off for user’s playback.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "toggle_shuffle_for_users_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerShuffleService@@toggle_shuffle_for_users_playback",
          "parameters": [],
          "name": "MePlayerShuffleService@@toggle_shuffle_for_users_playback",
          "parameterizedName": "com.spotify.MePlayerShuffleService@@toggle_shuffle_for_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerShuffleService / toggle_shuffle_for_users_playback",
          "shortDisplayName": "toggle_shuffle_for_users_playback"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerShuffleService {\n         [[ Toggle shuffle on or off for user’s playback.\n         ]]\n         @HttpOperation(method = \"PUT\" , url = \"https://api.spotify.com/v1/me/player/shuffle\")\n         operation toggle_shuffle_for_users_playback(  state : Boolean,  device_id : String )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "7314b7",
        "fullHash": "0709e32b2a0c9a1e842fea1b69ec75c6a284606979ac4c3c3ea8ffe2c9820b7a"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerShuffleService@@toggle_shuffle_for_users_playback",
          "parameters": [],
          "name": "MePlayerShuffleService@@toggle_shuffle_for_users_playback",
          "parameterizedName": "com.spotify.MePlayerShuffleService@@toggle_shuffle_for_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerShuffleService / toggle_shuffle_for_users_playback",
          "shortDisplayName": "toggle_shuffle_for_users_playback"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          },
          "name": "state",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Boolean",
            "parameters": [],
            "name": "Boolean",
            "parameterizedName": "lang.taxi.Boolean",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Boolean",
            "shortDisplayName": "Boolean"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "PUT", "url": "https://api.spotify.com/v1/me/player/shuffle"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Toggle shuffle on or off for user’s playback.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "toggle_shuffle_for_users_playback",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerShuffleService@@toggle_shuffle_for_users_playback",
          "parameters": [],
          "name": "MePlayerShuffleService@@toggle_shuffle_for_users_playback",
          "parameterizedName": "com.spotify.MePlayerShuffleService@@toggle_shuffle_for_users_playback",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerShuffleService / toggle_shuffle_for_users_playback",
          "shortDisplayName": "toggle_shuffle_for_users_playback"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerShuffleService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerShuffleService",
        "parameters": [],
        "name": "MePlayerShuffleService",
        "parameterizedName": "com.spotify.MePlayerShuffleService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerShuffleService",
        "shortDisplayName": "MePlayerShuffleService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerRecently_playedService",
        "parameters": [],
        "name": "MePlayerRecently_playedService",
        "parameterizedName": "com.spotify.MePlayerRecently_playedService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerRecently_playedService",
        "shortDisplayName": "MePlayerRecently_playedService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerRecently_playedService@@get_recently_played",
          "parameters": [],
          "name": "MePlayerRecently_playedService@@get_recently_played",
          "parameterizedName": "com.spotify.MePlayerRecently_playedService@@get_recently_played",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerRecently_playedService / get_recently_played",
          "shortDisplayName": "get_recently_played"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "after",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "before",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.CursorPagingPlayHistoryObject",
          "parameters": [],
          "name": "CursorPagingPlayHistoryObject",
          "parameterizedName": "com.spotify.CursorPagingPlayHistoryObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CursorPagingPlayHistoryObject",
          "shortDisplayName": "CursorPagingPlayHistoryObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/player/recently-played"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.CursorPagingPlayHistoryObject",
            "parameters": [],
            "name": "CursorPagingPlayHistoryObject",
            "parameterizedName": "com.spotify.CursorPagingPlayHistoryObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.CursorPagingPlayHistoryObject",
            "shortDisplayName": "CursorPagingPlayHistoryObject"
          }, "constraints": []
        },
        "typeDoc": "Get tracks from the current user's recently played tracks.\n     _**Note**: Currently doesn't support podcast episodes._",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.CursorPagingPlayHistoryObject",
          "parameters": [],
          "name": "CursorPagingPlayHistoryObject",
          "parameterizedName": "com.spotify.CursorPagingPlayHistoryObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CursorPagingPlayHistoryObject",
          "shortDisplayName": "CursorPagingPlayHistoryObject"
        },
        "name": "get_recently_played",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerRecently_playedService@@get_recently_played",
          "parameters": [],
          "name": "MePlayerRecently_playedService@@get_recently_played",
          "parameterizedName": "com.spotify.MePlayerRecently_playedService@@get_recently_played",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerRecently_playedService / get_recently_played",
          "shortDisplayName": "get_recently_played"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerRecently_playedService {\n         [[ Get tracks from the current user's recently played tracks.\n         _**Note**: Currently doesn't support podcast episodes._\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/player/recently-played\")\n         operation get_recently_played(  limit : Int,  after : Int,  before : Int ) : CursorPagingPlayHistoryObject\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "12302c",
        "fullHash": "6a624dd6c0162e6007636d0b836973b85869279128f4ef0d8f39163107864362"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerRecently_playedService@@get_recently_played",
          "parameters": [],
          "name": "MePlayerRecently_playedService@@get_recently_played",
          "parameterizedName": "com.spotify.MePlayerRecently_playedService@@get_recently_played",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerRecently_playedService / get_recently_played",
          "shortDisplayName": "get_recently_played"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "limit",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "after",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          },
          "name": "before",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.Int",
            "parameters": [],
            "name": "Int",
            "parameterizedName": "lang.taxi.Int",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Int",
            "shortDisplayName": "Int"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "com.spotify.CursorPagingPlayHistoryObject",
          "parameters": [],
          "name": "CursorPagingPlayHistoryObject",
          "parameterizedName": "com.spotify.CursorPagingPlayHistoryObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CursorPagingPlayHistoryObject",
          "shortDisplayName": "CursorPagingPlayHistoryObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/player/recently-played"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.CursorPagingPlayHistoryObject",
            "parameters": [],
            "name": "CursorPagingPlayHistoryObject",
            "parameterizedName": "com.spotify.CursorPagingPlayHistoryObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.CursorPagingPlayHistoryObject",
            "shortDisplayName": "CursorPagingPlayHistoryObject"
          }, "constraints": []
        },
        "typeDoc": "Get tracks from the current user's recently played tracks.\n     _**Note**: Currently doesn't support podcast episodes._",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.CursorPagingPlayHistoryObject",
          "parameters": [],
          "name": "CursorPagingPlayHistoryObject",
          "parameterizedName": "com.spotify.CursorPagingPlayHistoryObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.CursorPagingPlayHistoryObject",
          "shortDisplayName": "CursorPagingPlayHistoryObject"
        },
        "name": "get_recently_played",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerRecently_playedService@@get_recently_played",
          "parameters": [],
          "name": "MePlayerRecently_playedService@@get_recently_played",
          "parameterizedName": "com.spotify.MePlayerRecently_playedService@@get_recently_played",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerRecently_playedService / get_recently_played",
          "shortDisplayName": "get_recently_played"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerRecently_playedService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerRecently_playedService",
        "parameters": [],
        "name": "MePlayerRecently_playedService",
        "parameterizedName": "com.spotify.MePlayerRecently_playedService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerRecently_playedService",
        "shortDisplayName": "MePlayerRecently_playedService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MePlayerQueueService",
        "parameters": [],
        "name": "MePlayerQueueService",
        "parameterizedName": "com.spotify.MePlayerQueueService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerQueueService",
        "shortDisplayName": "MePlayerQueueService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerQueueService@@get_queue",
          "parameters": [],
          "name": "MePlayerQueueService@@get_queue",
          "parameterizedName": "com.spotify.MePlayerQueueService@@get_queue",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerQueueService / get_queue",
          "shortDisplayName": "get_queue"
        },
        "parameters": [],
        "returnType": {
          "fullyQualifiedName": "com.spotify.QueueObject",
          "parameters": [],
          "name": "QueueObject",
          "parameterizedName": "com.spotify.QueueObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.QueueObject",
          "shortDisplayName": "QueueObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/player/queue"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.QueueObject",
            "parameters": [],
            "name": "QueueObject",
            "parameterizedName": "com.spotify.QueueObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.QueueObject",
            "shortDisplayName": "QueueObject"
          }, "constraints": []
        },
        "typeDoc": "Get the list of objects that make up the user's queue.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.QueueObject",
          "parameters": [],
          "name": "QueueObject",
          "parameterizedName": "com.spotify.QueueObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.QueueObject",
          "shortDisplayName": "QueueObject"
        },
        "name": "get_queue",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerQueueService@@get_queue",
          "parameters": [],
          "name": "MePlayerQueueService@@get_queue",
          "parameterizedName": "com.spotify.MePlayerQueueService@@get_queue",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerQueueService / get_queue",
          "shortDisplayName": "get_queue"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerQueueService@@add_to_queue",
          "parameters": [],
          "name": "MePlayerQueueService@@add_to_queue",
          "parameterizedName": "com.spotify.MePlayerQueueService@@add_to_queue",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerQueueService / add_to_queue",
          "shortDisplayName": "add_to_queue"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "uri",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "POST", "url": "https://api.spotify.com/v1/me/player/queue"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Add an item to the end of the user's current playback queue.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "add_to_queue",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerQueueService@@add_to_queue",
          "parameters": [],
          "name": "MePlayerQueueService@@add_to_queue",
          "parameterizedName": "com.spotify.MePlayerQueueService@@add_to_queue",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerQueueService / add_to_queue",
          "shortDisplayName": "add_to_queue"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MePlayerQueueService {\n         [[ Get the list of objects that make up the user's queue.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/me/player/queue\")\n         operation get_queue(  ) : QueueObject\n         [[ Add an item to the end of the user's current playback queue.\n         ]]\n         @HttpOperation(method = \"POST\" , url = \"https://api.spotify.com/v1/me/player/queue\")\n         operation add_to_queue(  uri : String,  device_id : String )\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "7415a6",
        "fullHash": "ba82a16e4ec235d48db01ed2509fba204462bc6d7d53bdeef940e4cd182d4cd3"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerQueueService@@get_queue",
          "parameters": [],
          "name": "MePlayerQueueService@@get_queue",
          "parameterizedName": "com.spotify.MePlayerQueueService@@get_queue",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerQueueService / get_queue",
          "shortDisplayName": "get_queue"
        },
        "parameters": [],
        "returnType": {
          "fullyQualifiedName": "com.spotify.QueueObject",
          "parameters": [],
          "name": "QueueObject",
          "parameterizedName": "com.spotify.QueueObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.QueueObject",
          "shortDisplayName": "QueueObject"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/me/player/queue"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.QueueObject",
            "parameters": [],
            "name": "QueueObject",
            "parameterizedName": "com.spotify.QueueObject",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.QueueObject",
            "shortDisplayName": "QueueObject"
          }, "constraints": []
        },
        "typeDoc": "Get the list of objects that make up the user's queue.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.QueueObject",
          "parameters": [],
          "name": "QueueObject",
          "parameterizedName": "com.spotify.QueueObject",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.QueueObject",
          "shortDisplayName": "QueueObject"
        },
        "name": "get_queue",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerQueueService@@get_queue",
          "parameters": [],
          "name": "MePlayerQueueService@@get_queue",
          "parameterizedName": "com.spotify.MePlayerQueueService@@get_queue",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerQueueService / get_queue",
          "shortDisplayName": "get_queue"
        }
      }, {
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerQueueService@@add_to_queue",
          "parameters": [],
          "name": "MePlayerQueueService@@add_to_queue",
          "parameterizedName": "com.spotify.MePlayerQueueService@@add_to_queue",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerQueueService / add_to_queue",
          "shortDisplayName": "add_to_queue"
        },
        "parameters": [{
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "uri",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }, {
          "type": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          },
          "name": "device_id",
          "metadata": [],
          "constraints": [],
          "typeName": {
            "fullyQualifiedName": "lang.taxi.String",
            "parameters": [],
            "name": "String",
            "parameterizedName": "lang.taxi.String",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.String",
            "shortDisplayName": "String"
          }
        }],
        "returnType": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "POST", "url": "https://api.spotify.com/v1/me/player/queue"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "lang.taxi.Void",
            "parameters": [],
            "name": "Void",
            "parameterizedName": "lang.taxi.Void",
            "namespace": "lang.taxi",
            "longDisplayName": "lang.taxi.Void",
            "shortDisplayName": "Void"
          }, "constraints": []
        },
        "typeDoc": "Add an item to the end of the user's current playback queue.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "lang.taxi.Void",
          "parameters": [],
          "name": "Void",
          "parameterizedName": "lang.taxi.Void",
          "namespace": "lang.taxi",
          "longDisplayName": "lang.taxi.Void",
          "shortDisplayName": "Void"
        },
        "name": "add_to_queue",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MePlayerQueueService@@add_to_queue",
          "parameters": [],
          "name": "MePlayerQueueService@@add_to_queue",
          "parameterizedName": "com.spotify.MePlayerQueueService@@add_to_queue",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MePlayerQueueService / add_to_queue",
          "shortDisplayName": "add_to_queue"
        }
      }],
      "qualifiedName": "com.spotify.MePlayerQueueService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MePlayerQueueService",
        "parameters": [],
        "name": "MePlayerQueueService",
        "parameterizedName": "com.spotify.MePlayerQueueService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MePlayerQueueService",
        "shortDisplayName": "MePlayerQueueService"
      }
    }, {
      "name": {
        "fullyQualifiedName": "com.spotify.MarketsService",
        "parameters": [],
        "name": "MarketsService",
        "parameterizedName": "com.spotify.MarketsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MarketsService",
        "shortDisplayName": "MarketsService"
      },
      "operations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MarketsService@@get_available_markets",
          "parameters": [],
          "name": "MarketsService@@get_available_markets",
          "parameterizedName": "com.spotify.MarketsService@@get_available_markets",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MarketsService / get_available_markets",
          "shortDisplayName": "get_available_markets"
        },
        "parameters": [],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_available_markets",
          "parameters": [],
          "name": "AnonymousTypeGet_available_markets",
          "parameterizedName": "com.spotify.AnonymousTypeGet_available_markets",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_available_markets",
          "shortDisplayName": "AnonymousTypeGet_available_markets"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/markets"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_available_markets",
            "parameters": [],
            "name": "AnonymousTypeGet_available_markets",
            "parameterizedName": "com.spotify.AnonymousTypeGet_available_markets",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_available_markets",
            "shortDisplayName": "AnonymousTypeGet_available_markets"
          }, "constraints": []
        },
        "typeDoc": "Get the list of markets where Spotify is available.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_available_markets",
          "parameters": [],
          "name": "AnonymousTypeGet_available_markets",
          "parameterizedName": "com.spotify.AnonymousTypeGet_available_markets",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_available_markets",
          "shortDisplayName": "AnonymousTypeGet_available_markets"
        },
        "name": "get_available_markets",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MarketsService@@get_available_markets",
          "parameters": [],
          "name": "MarketsService@@get_available_markets",
          "parameterizedName": "com.spotify.MarketsService@@get_available_markets",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MarketsService / get_available_markets",
          "shortDisplayName": "get_available_markets"
        }
      }],
      "queryOperations": [],
      "streamOperations": [],
      "tableOperations": [],
      "metadata": [],
      "sourceCode": [{
        "name": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "version": "0.0.0",
        "content": "namespace com.spotify {\n   service MarketsService {\n         [[ Get the list of markets where Spotify is available.\n         ]]\n         @HttpOperation(method = \"GET\" , url = \"https://api.spotify.com/v1/markets\")\n         operation get_available_markets(  ) : AnonymousTypeGet_available_markets\n      }\n}",
        "packageIdentifier": null,
        "packageQualifiedName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
        "id": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0:0.0.0",
        "contentHash": "784ac3",
        "fullHash": "b33ecbf8fbe98f6c0e4b9ac6ef3a141228e1c59802728e87940bacf083a72523"
      }],
      "typeDoc": null,
      "lineage": null,
      "serviceKind": "API",
      "schemaMemberKind": "SERVICE",
      "remoteOperations": [{
        "qualifiedName": {
          "fullyQualifiedName": "com.spotify.MarketsService@@get_available_markets",
          "parameters": [],
          "name": "MarketsService@@get_available_markets",
          "parameterizedName": "com.spotify.MarketsService@@get_available_markets",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MarketsService / get_available_markets",
          "shortDisplayName": "get_available_markets"
        },
        "parameters": [],
        "returnType": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_available_markets",
          "parameters": [],
          "name": "AnonymousTypeGet_available_markets",
          "parameterizedName": "com.spotify.AnonymousTypeGet_available_markets",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_available_markets",
          "shortDisplayName": "AnonymousTypeGet_available_markets"
        },
        "operationType": null,
        "metadata": [{
          "name": {
            "fullyQualifiedName": "HttpOperation",
            "parameters": [],
            "name": "HttpOperation",
            "parameterizedName": "HttpOperation",
            "namespace": "",
            "longDisplayName": "HttpOperation",
            "shortDisplayName": "HttpOperation"
          }, "params": {"method": "GET", "url": "https://api.spotify.com/v1/markets"}
        }],
        "contract": {
          "returnType": {
            "fullyQualifiedName": "com.spotify.AnonymousTypeGet_available_markets",
            "parameters": [],
            "name": "AnonymousTypeGet_available_markets",
            "parameterizedName": "com.spotify.AnonymousTypeGet_available_markets",
            "namespace": "com.spotify",
            "longDisplayName": "com.spotify.AnonymousTypeGet_available_markets",
            "shortDisplayName": "AnonymousTypeGet_available_markets"
          }, "constraints": []
        },
        "typeDoc": "Get the list of markets where Spotify is available.",
        "operationKind": "ApiCall",
        "schemaMemberKind": "OPERATION",
        "returnTypeName": {
          "fullyQualifiedName": "com.spotify.AnonymousTypeGet_available_markets",
          "parameters": [],
          "name": "AnonymousTypeGet_available_markets",
          "parameterizedName": "com.spotify.AnonymousTypeGet_available_markets",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.AnonymousTypeGet_available_markets",
          "shortDisplayName": "AnonymousTypeGet_available_markets"
        },
        "name": "get_available_markets",
        "memberQualifiedName": {
          "fullyQualifiedName": "com.spotify.MarketsService@@get_available_markets",
          "parameters": [],
          "name": "MarketsService@@get_available_markets",
          "parameterizedName": "com.spotify.MarketsService@@get_available_markets",
          "namespace": "com.spotify",
          "longDisplayName": "com.spotify.MarketsService / get_available_markets",
          "shortDisplayName": "get_available_markets"
        }
      }],
      "qualifiedName": "com.spotify.MarketsService",
      "memberQualifiedName": {
        "fullyQualifiedName": "com.spotify.MarketsService",
        "parameters": [],
        "name": "MarketsService",
        "parameterizedName": "com.spotify.MarketsService",
        "namespace": "com.spotify",
        "longDisplayName": "com.spotify.MarketsService",
        "shortDisplayName": "MarketsService"
      }
    }],
  "messages": [
    {
      "line": 27,
      "char": 6,
      "detailMessage": "spotify should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 8,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 11,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 14,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 17,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 8,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 11,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 14,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 17,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 27,
      "char": 6,
      "detailMessage": "spotify should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 38,
      "char": 6,
      "detailMessage": "reason should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 45,
      "char": 6,
      "detailMessage": "reason should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 56,
      "char": 6,
      "detailMessage": "reason should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 68,
      "char": 6,
      "detailMessage": "reason should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 115,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 118,
      "char": 6,
      "detailMessage": "total should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 124,
      "char": 6,
      "detailMessage": "url should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 127,
      "char": 6,
      "detailMessage": "height should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 130,
      "char": 6,
      "detailMessage": "width should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 127,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 130,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 83,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 86,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 92,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 95,
      "char": 6,
      "detailMessage": "popularity should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 98,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 101,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 83,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 86,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 92,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 98,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 101,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 115,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 118,
      "char": 6,
      "detailMessage": "total should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 124,
      "char": 6,
      "detailMessage": "url should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 127,
      "char": 6,
      "detailMessage": "height should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 130,
      "char": 6,
      "detailMessage": "width should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 127,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 130,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 139,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 142,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 145,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 148,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 151,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 139,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 142,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 145,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 148,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 151,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 313,
      "char": 6,
      "detailMessage": "text should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 316,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 313,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 316,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 326,
      "char": 6,
      "detailMessage": "isrc should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 329,
      "char": 6,
      "detailMessage": "ean should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 332,
      "char": 6,
      "detailMessage": "upc should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 326,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 329,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 332,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 249,
      "char": 6,
      "detailMessage": "album_type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 251,
      "char": 6,
      "detailMessage": "total_tracks should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 260,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 263,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 269,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 272,
      "char": 6,
      "detailMessage": "release_date should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 275,
      "char": 6,
      "detailMessage": "release_date_precision should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 281,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 284,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 296,
      "char": 6,
      "detailMessage": "label should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 299,
      "char": 6,
      "detailMessage": "popularity should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 249,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 260,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 263,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 269,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 272,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 275,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 281,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 284,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 296,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 251,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 299,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 254,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 293,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 240,
      "char": 6,
      "detailMessage": "album_group should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 182,
      "char": 6,
      "detailMessage": "disc_number should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 185,
      "char": 6,
      "detailMessage": "duration_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 188,
      "char": 6,
      "detailMessage": "explicit should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 197,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 200,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 203,
      "char": 6,
      "detailMessage": "is_playable should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 206,
      "char": 6,
      "detailMessage": "linked_from should not inherit from a primitive type (Any).  Introduce a semantic type instead, which extends from Any. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 212,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 215,
      "char": 6,
      "detailMessage": "popularity should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 218,
      "char": 6,
      "detailMessage": "preview_url should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 221,
      "char": 6,
      "detailMessage": "track_number should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 224,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 227,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 230,
      "char": 6,
      "detailMessage": "is_local should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 182,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 185,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 215,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 221,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 188,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 203,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 230,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 197,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 200,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 212,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 218,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 224,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 227,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 353,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 355,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 360,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 353,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 355,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 360,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 162,
      "char": 6,
      "detailMessage": "played_at should not inherit from a primitive type (DateTime).  Introduce a semantic type instead, which extends from DateTime. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 182,
      "char": 6,
      "detailMessage": "disc_number should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 185,
      "char": 6,
      "detailMessage": "duration_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 188,
      "char": 6,
      "detailMessage": "explicit should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 197,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 200,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 203,
      "char": 6,
      "detailMessage": "is_playable should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 206,
      "char": 6,
      "detailMessage": "linked_from should not inherit from a primitive type (Any).  Introduce a semantic type instead, which extends from Any. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 212,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 215,
      "char": 6,
      "detailMessage": "popularity should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 218,
      "char": 6,
      "detailMessage": "preview_url should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 221,
      "char": 6,
      "detailMessage": "track_number should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 224,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 227,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 230,
      "char": 6,
      "detailMessage": "is_local should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 182,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 185,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 215,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 221,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 188,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 203,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 230,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 197,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 200,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 212,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 218,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 224,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 227,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 240,
      "char": 6,
      "detailMessage": "album_group should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 249,
      "char": 6,
      "detailMessage": "album_type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 251,
      "char": 6,
      "detailMessage": "total_tracks should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 260,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 263,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 269,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 272,
      "char": 6,
      "detailMessage": "release_date should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 275,
      "char": 6,
      "detailMessage": "release_date_precision should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 281,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 284,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 296,
      "char": 6,
      "detailMessage": "label should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 299,
      "char": 6,
      "detailMessage": "popularity should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 249,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 260,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 263,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 269,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 272,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 275,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 281,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 284,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 296,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 251,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 299,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 254,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 293,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 313,
      "char": 6,
      "detailMessage": "text should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 316,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 313,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 316,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 326,
      "char": 6,
      "detailMessage": "isrc should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 329,
      "char": 6,
      "detailMessage": "ean should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 332,
      "char": 6,
      "detailMessage": "upc should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 326,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 329,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 332,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 353,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 355,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 360,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 353,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 355,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 360,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 393,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 396,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 399,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 402,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 393,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 396,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 399,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 402,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 369,
      "char": 6,
      "detailMessage": "added_at should not inherit from a primitive type (DateTime).  Introduce a semantic type instead, which extends from DateTime. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 375,
      "char": 6,
      "detailMessage": "is_local should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 377,
      "char": 6,
      "detailMessage": "track should not inherit from a primitive type (Any).  Introduce a semantic type instead, which extends from Any. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 393,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 396,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 399,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 402,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 393,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 396,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 399,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 402,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 417,
      "char": 6,
      "detailMessage": "timestamp should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 419,
      "char": 6,
      "detailMessage": "progress_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 421,
      "char": 6,
      "detailMessage": "is_playing should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 423,
      "char": 6,
      "detailMessage": "item should not inherit from a primitive type (Any).  Introduce a semantic type instead, which extends from Any. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 426,
      "char": 6,
      "detailMessage": "currently_playing_type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 417,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 419,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 434,
      "char": 6,
      "detailMessage": "currently_playing should not inherit from a primitive type (Any).  Introduce a semantic type instead, which extends from Any. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 471,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 473,
      "char": 6,
      "detailMessage": "is_active should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 475,
      "char": 6,
      "detailMessage": "is_private_session should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 477,
      "char": 6,
      "detailMessage": "is_restricted should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 479,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 481,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 483,
      "char": 6,
      "detailMessage": "volume_percent should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 471,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 479,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 481,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 473,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 475,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 477,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 495,
      "char": 6,
      "detailMessage": "interrupting_playback should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 497,
      "char": 6,
      "detailMessage": "pausing should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 499,
      "char": 6,
      "detailMessage": "resuming should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 501,
      "char": 6,
      "detailMessage": "seeking should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 503,
      "char": 6,
      "detailMessage": "skipping_next should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 505,
      "char": 6,
      "detailMessage": "skipping_prev should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 507,
      "char": 6,
      "detailMessage": "toggling_repeat_context should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 509,
      "char": 6,
      "detailMessage": "toggling_shuffle should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 511,
      "char": 6,
      "detailMessage": "toggling_repeat_track should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 513,
      "char": 6,
      "detailMessage": "transferring_playback should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 495,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 497,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 499,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 501,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 503,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 505,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 507,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 509,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 511,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 513,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 444,
      "char": 6,
      "detailMessage": "repeat_state should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 446,
      "char": 6,
      "detailMessage": "shuffle_state should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 450,
      "char": 6,
      "detailMessage": "timestamp should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 452,
      "char": 6,
      "detailMessage": "progress_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 454,
      "char": 6,
      "detailMessage": "is_playing should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 456,
      "char": 6,
      "detailMessage": "item should not inherit from a primitive type (Any).  Introduce a semantic type instead, which extends from Any. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 459,
      "char": 6,
      "detailMessage": "currently_playing_type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 444,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 459,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 446,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 454,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 450,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 452,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 471,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 473,
      "char": 6,
      "detailMessage": "is_active should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 475,
      "char": 6,
      "detailMessage": "is_private_session should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 477,
      "char": 6,
      "detailMessage": "is_restricted should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 479,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 481,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 483,
      "char": 6,
      "detailMessage": "volume_percent should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 471,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 479,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 481,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 473,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 475,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 477,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 495,
      "char": 6,
      "detailMessage": "interrupting_playback should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 497,
      "char": 6,
      "detailMessage": "pausing should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 499,
      "char": 6,
      "detailMessage": "resuming should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 501,
      "char": 6,
      "detailMessage": "seeking should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 503,
      "char": 6,
      "detailMessage": "skipping_next should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 505,
      "char": 6,
      "detailMessage": "skipping_prev should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 507,
      "char": 6,
      "detailMessage": "toggling_repeat_context should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 509,
      "char": 6,
      "detailMessage": "toggling_shuffle should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 511,
      "char": 6,
      "detailMessage": "toggling_repeat_track should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 513,
      "char": 6,
      "detailMessage": "transferring_playback should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 495,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 497,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 499,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 501,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 503,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 505,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 507,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 509,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 511,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 513,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 519,
      "char": 6,
      "detailMessage": "status should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 522,
      "char": 6,
      "detailMessage": "message should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 528,
      "char": 6,
      "detailMessage": "status should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 531,
      "char": 6,
      "detailMessage": "message should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 582,
      "char": 6,
      "detailMessage": "filter_enabled should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 585,
      "char": 6,
      "detailMessage": "filter_locked should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 582,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 585,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 542,
      "char": 6,
      "detailMessage": "country should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 545,
      "char": 6,
      "detailMessage": "display_name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 548,
      "char": 6,
      "detailMessage": "email should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 558,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 561,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 566,
      "char": 6,
      "detailMessage": "product should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 569,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 572,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 542,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 545,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 548,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 558,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 561,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 566,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 569,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 572,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 582,
      "char": 6,
      "detailMessage": "filter_enabled should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 585,
      "char": 6,
      "detailMessage": "filter_locked should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 582,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 585,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 597,
      "char": 6,
      "detailMessage": "display_name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 606,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 609,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 615,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 618,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 597,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 606,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 609,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 615,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 618,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 646,
      "char": 6,
      "detailMessage": "analyzer_version should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 648,
      "char": 6,
      "detailMessage": "platform should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 650,
      "char": 6,
      "detailMessage": "detailed_status should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 652,
      "char": 6,
      "detailMessage": "status_code should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 654,
      "char": 6,
      "detailMessage": "timestamp should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 656,
      "char": 6,
      "detailMessage": "analysis_time should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 658,
      "char": 6,
      "detailMessage": "input_process should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 646,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 648,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 650,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 658,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 652,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 654,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 663,
      "char": 6,
      "detailMessage": "num_samples should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 665,
      "char": 6,
      "detailMessage": "duration should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 667,
      "char": 6,
      "detailMessage": "sample_md5 should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 669,
      "char": 6,
      "detailMessage": "offset_seconds should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 671,
      "char": 6,
      "detailMessage": "window_seconds should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 673,
      "char": 6,
      "detailMessage": "analysis_sample_rate should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 675,
      "char": 6,
      "detailMessage": "analysis_channels should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 677,
      "char": 6,
      "detailMessage": "end_of_fade_in should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 679,
      "char": 6,
      "detailMessage": "start_of_fade_out should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 683,
      "char": 6,
      "detailMessage": "tempo_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 686,
      "char": 6,
      "detailMessage": "time_signature_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 689,
      "char": 6,
      "detailMessage": "key_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 692,
      "char": 6,
      "detailMessage": "mode_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 694,
      "char": 6,
      "detailMessage": "codestring should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 696,
      "char": 6,
      "detailMessage": "code_version should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 698,
      "char": 6,
      "detailMessage": "echoprintstring should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 700,
      "char": 6,
      "detailMessage": "echoprint_version should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 702,
      "char": 6,
      "detailMessage": "synchstring should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 704,
      "char": 6,
      "detailMessage": "synch_version should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 706,
      "char": 6,
      "detailMessage": "rhythmstring should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 708,
      "char": 6,
      "detailMessage": "rhythm_version should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 663,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 669,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 671,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 673,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 675,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 665,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 677,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 679,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 683,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 686,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 689,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 692,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 696,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 700,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 704,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 708,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 667,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 694,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 698,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 702,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 706,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 723,
      "char": 6,
      "detailMessage": "start should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 725,
      "char": 6,
      "detailMessage": "duration should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 727,
      "char": 6,
      "detailMessage": "confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 723,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 725,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 727,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 732,
      "char": 6,
      "detailMessage": "start should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 734,
      "char": 6,
      "detailMessage": "duration should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 736,
      "char": 6,
      "detailMessage": "confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 738,
      "char": 6,
      "detailMessage": "loudness should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 740,
      "char": 6,
      "detailMessage": "tempo should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 742,
      "char": 6,
      "detailMessage": "tempo_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 744,
      "char": 6,
      "detailMessage": "key should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 746,
      "char": 6,
      "detailMessage": "key_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 748,
      "char": 6,
      "detailMessage": "mode should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 750,
      "char": 6,
      "detailMessage": "mode_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 753,
      "char": 6,
      "detailMessage": "time_signature_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 732,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 734,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 736,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 738,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 740,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 742,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 746,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 748,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 750,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 753,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 758,
      "char": 6,
      "detailMessage": "start should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 760,
      "char": 6,
      "detailMessage": "duration should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 763,
      "char": 6,
      "detailMessage": "confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 765,
      "char": 6,
      "detailMessage": "loudness_start should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 767,
      "char": 6,
      "detailMessage": "loudness_max should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 769,
      "char": 6,
      "detailMessage": "loudness_max_time should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 771,
      "char": 6,
      "detailMessage": "loudness_end should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 758,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 760,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 763,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 765,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 767,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 769,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 771,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 777,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 783,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 633,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 635,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 641,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 646,
      "char": 6,
      "detailMessage": "analyzer_version should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 648,
      "char": 6,
      "detailMessage": "platform should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 650,
      "char": 6,
      "detailMessage": "detailed_status should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 652,
      "char": 6,
      "detailMessage": "status_code should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 654,
      "char": 6,
      "detailMessage": "timestamp should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 656,
      "char": 6,
      "detailMessage": "analysis_time should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 658,
      "char": 6,
      "detailMessage": "input_process should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 646,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 648,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 650,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 658,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 652,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 654,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 663,
      "char": 6,
      "detailMessage": "num_samples should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 665,
      "char": 6,
      "detailMessage": "duration should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 667,
      "char": 6,
      "detailMessage": "sample_md5 should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 669,
      "char": 6,
      "detailMessage": "offset_seconds should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 671,
      "char": 6,
      "detailMessage": "window_seconds should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 673,
      "char": 6,
      "detailMessage": "analysis_sample_rate should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 675,
      "char": 6,
      "detailMessage": "analysis_channels should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 677,
      "char": 6,
      "detailMessage": "end_of_fade_in should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 679,
      "char": 6,
      "detailMessage": "start_of_fade_out should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 683,
      "char": 6,
      "detailMessage": "tempo_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 686,
      "char": 6,
      "detailMessage": "time_signature_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 689,
      "char": 6,
      "detailMessage": "key_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 692,
      "char": 6,
      "detailMessage": "mode_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 694,
      "char": 6,
      "detailMessage": "codestring should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 696,
      "char": 6,
      "detailMessage": "code_version should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 698,
      "char": 6,
      "detailMessage": "echoprintstring should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 700,
      "char": 6,
      "detailMessage": "echoprint_version should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 702,
      "char": 6,
      "detailMessage": "synchstring should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 704,
      "char": 6,
      "detailMessage": "synch_version should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 706,
      "char": 6,
      "detailMessage": "rhythmstring should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 708,
      "char": 6,
      "detailMessage": "rhythm_version should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 663,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 669,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 671,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 673,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 675,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 665,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 677,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 679,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 683,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 686,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 689,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 692,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 696,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 700,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 704,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 708,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 667,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 694,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 698,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 702,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 706,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 723,
      "char": 6,
      "detailMessage": "start should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 725,
      "char": 6,
      "detailMessage": "duration should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 727,
      "char": 6,
      "detailMessage": "confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 723,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 725,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 727,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 732,
      "char": 6,
      "detailMessage": "start should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 734,
      "char": 6,
      "detailMessage": "duration should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 736,
      "char": 6,
      "detailMessage": "confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 738,
      "char": 6,
      "detailMessage": "loudness should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 740,
      "char": 6,
      "detailMessage": "tempo should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 742,
      "char": 6,
      "detailMessage": "tempo_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 744,
      "char": 6,
      "detailMessage": "key should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 746,
      "char": 6,
      "detailMessage": "key_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 748,
      "char": 6,
      "detailMessage": "mode should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 750,
      "char": 6,
      "detailMessage": "mode_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 753,
      "char": 6,
      "detailMessage": "time_signature_confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 732,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 734,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 736,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 738,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 740,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 742,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 746,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 748,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 750,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 753,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 758,
      "char": 6,
      "detailMessage": "start should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 760,
      "char": 6,
      "detailMessage": "duration should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 763,
      "char": 6,
      "detailMessage": "confidence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 765,
      "char": 6,
      "detailMessage": "loudness_start should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 767,
      "char": 6,
      "detailMessage": "loudness_max should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 769,
      "char": 6,
      "detailMessage": "loudness_max_time should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 771,
      "char": 6,
      "detailMessage": "loudness_end should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 758,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 760,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 763,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 765,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 767,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 769,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 771,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 777,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 783,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 789,
      "char": 6,
      "detailMessage": "acousticness should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 792,
      "char": 6,
      "detailMessage": "analysis_url should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 795,
      "char": 6,
      "detailMessage": "danceability should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 798,
      "char": 6,
      "detailMessage": "duration_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 801,
      "char": 6,
      "detailMessage": "energy should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 804,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 807,
      "char": 6,
      "detailMessage": "instrumentalness should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 811,
      "char": 6,
      "detailMessage": "liveness should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 816,
      "char": 6,
      "detailMessage": "speechiness should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 821,
      "char": 6,
      "detailMessage": "track_href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 824,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 827,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 830,
      "char": 6,
      "detailMessage": "valence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 789,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 795,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 801,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 807,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 811,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 816,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 830,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 792,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 804,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 821,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 824,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 827,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 840,
      "char": 6,
      "detailMessage": "disc_number should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 842,
      "char": 6,
      "detailMessage": "duration_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 844,
      "char": 6,
      "detailMessage": "explicit should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 849,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 852,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 855,
      "char": 6,
      "detailMessage": "is_playable should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 862,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 865,
      "char": 6,
      "detailMessage": "preview_url should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 868,
      "char": 6,
      "detailMessage": "track_number should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 871,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 874,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 877,
      "char": 6,
      "detailMessage": "is_local should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 840,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 842,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 868,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 844,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 855,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 877,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 849,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 852,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 862,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 865,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 871,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 874,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 898,
      "char": 6,
      "detailMessage": "after should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 900,
      "char": 6,
      "detailMessage": "before should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 898,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 900,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 905,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 907,
      "char": 6,
      "detailMessage": "limit should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 909,
      "char": 6,
      "detailMessage": "next should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 913,
      "char": 6,
      "detailMessage": "total should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 905,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 909,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 907,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 913,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 930,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 933,
      "char": 6,
      "detailMessage": "limit should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 936,
      "char": 6,
      "detailMessage": "next should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 939,
      "char": 6,
      "detailMessage": "offset should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 942,
      "char": 6,
      "detailMessage": "previous should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 945,
      "char": 6,
      "detailMessage": "total should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 930,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 936,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 942,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 933,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 939,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 945,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1005,
      "char": 6,
      "detailMessage": "display_name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1015,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1018,
      "char": 6,
      "detailMessage": "total should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 955,
      "char": 6,
      "detailMessage": "collaborative should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 958,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 964,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 967,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 973,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 979,
      "char": 6,
      "detailMessage": "public should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 982,
      "char": 6,
      "detailMessage": "snapshot_id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 988,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 991,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 955,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 979,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 958,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 964,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 967,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 973,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 982,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 988,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 991,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 955,
      "char": 6,
      "detailMessage": "collaborative should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 958,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 964,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 967,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 973,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 979,
      "char": 6,
      "detailMessage": "public should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 982,
      "char": 6,
      "detailMessage": "snapshot_id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 988,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 991,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 955,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 979,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 958,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 964,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 967,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 973,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 982,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 988,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 991,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1005,
      "char": 6,
      "detailMessage": "display_name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1015,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1018,
      "char": 6,
      "detailMessage": "total should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1022,
      "char": 6,
      "detailMessage": "message should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1039,
      "char": 6,
      "detailMessage": "added_at should not inherit from a primitive type (DateTime).  Introduce a semantic type instead, which extends from DateTime. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1039,
      "char": 6,
      "detailMessage": "added_at should not inherit from a primitive type (DateTime).  Introduce a semantic type instead, which extends from DateTime. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1067,
      "char": 6,
      "detailMessage": "added_at should not inherit from a primitive type (DateTime).  Introduce a semantic type instead, which extends from DateTime. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1067,
      "char": 6,
      "detailMessage": "added_at should not inherit from a primitive type (DateTime).  Introduce a semantic type instead, which extends from DateTime. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1098,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1101,
      "char": 6,
      "detailMessage": "html_description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1104,
      "char": 6,
      "detailMessage": "explicit should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1110,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1113,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1119,
      "char": 6,
      "detailMessage": "is_externally_hosted should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1125,
      "char": 6,
      "detailMessage": "media_type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1128,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1131,
      "char": 6,
      "detailMessage": "publisher should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1134,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1137,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1140,
      "char": 6,
      "detailMessage": "total_episodes should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1092,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1122,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1098,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1101,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1110,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1113,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1125,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1128,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1131,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1134,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1137,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1104,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1119,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1098,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1101,
      "char": 6,
      "detailMessage": "html_description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1104,
      "char": 6,
      "detailMessage": "explicit should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1110,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1113,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1119,
      "char": 6,
      "detailMessage": "is_externally_hosted should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1125,
      "char": 6,
      "detailMessage": "media_type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1128,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1131,
      "char": 6,
      "detailMessage": "publisher should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1134,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1137,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1140,
      "char": 6,
      "detailMessage": "total_episodes should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1092,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1122,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1098,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1101,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1110,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1113,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1125,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1128,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1131,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1134,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1137,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1104,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1119,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1156,
      "char": 6,
      "detailMessage": "added_at should not inherit from a primitive type (DateTime).  Introduce a semantic type instead, which extends from DateTime. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1156,
      "char": 6,
      "detailMessage": "added_at should not inherit from a primitive type (DateTime).  Introduce a semantic type instead, which extends from DateTime. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1244,
      "char": 6,
      "detailMessage": "fully_played should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1247,
      "char": 6,
      "detailMessage": "resume_position_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1173,
      "char": 6,
      "detailMessage": "audio_preview_url should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1176,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1179,
      "char": 6,
      "detailMessage": "html_description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1182,
      "char": 6,
      "detailMessage": "duration_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1185,
      "char": 6,
      "detailMessage": "explicit should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1191,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1194,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1200,
      "char": 6,
      "detailMessage": "is_externally_hosted should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1203,
      "char": 6,
      "detailMessage": "is_playable should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1206,
      "char": 6,
      "detailMessage": "language should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1212,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1215,
      "char": 6,
      "detailMessage": "release_date should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1218,
      "char": 6,
      "detailMessage": "release_date_precision should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1224,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1227,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1173,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1176,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1179,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1191,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1194,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1206,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1212,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1215,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1218,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1224,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1227,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1185,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1200,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1203,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1173,
      "char": 6,
      "detailMessage": "audio_preview_url should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1176,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1179,
      "char": 6,
      "detailMessage": "html_description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1182,
      "char": 6,
      "detailMessage": "duration_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1185,
      "char": 6,
      "detailMessage": "explicit should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1191,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1194,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1200,
      "char": 6,
      "detailMessage": "is_externally_hosted should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1203,
      "char": 6,
      "detailMessage": "is_playable should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1206,
      "char": 6,
      "detailMessage": "language should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1212,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1215,
      "char": 6,
      "detailMessage": "release_date should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1218,
      "char": 6,
      "detailMessage": "release_date_precision should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1224,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1227,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1173,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1176,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1179,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1191,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1194,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1206,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1212,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1215,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1218,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1224,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1227,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1185,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1200,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1203,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1244,
      "char": 6,
      "detailMessage": "fully_played should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1247,
      "char": 6,
      "detailMessage": "resume_position_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1262,
      "char": 6,
      "detailMessage": "added_at should not inherit from a primitive type (DateTime).  Introduce a semantic type instead, which extends from DateTime. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1262,
      "char": 6,
      "detailMessage": "added_at should not inherit from a primitive type (DateTime).  Introduce a semantic type instead, which extends from DateTime. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1343,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1353,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1292,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1295,
      "char": 6,
      "detailMessage": "html_description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1298,
      "char": 6,
      "detailMessage": "edition should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1301,
      "char": 6,
      "detailMessage": "explicit should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1307,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1310,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1319,
      "char": 6,
      "detailMessage": "media_type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1322,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1328,
      "char": 6,
      "detailMessage": "publisher should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1331,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1334,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1337,
      "char": 6,
      "detailMessage": "total_chapters should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1286,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1316,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1292,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1295,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1298,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1307,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1310,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1319,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1322,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1328,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1331,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1334,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1292,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1295,
      "char": 6,
      "detailMessage": "html_description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1298,
      "char": 6,
      "detailMessage": "edition should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1301,
      "char": 6,
      "detailMessage": "explicit should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1307,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1310,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1319,
      "char": 6,
      "detailMessage": "media_type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1322,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1328,
      "char": 6,
      "detailMessage": "publisher should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1331,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1334,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1337,
      "char": 6,
      "detailMessage": "total_chapters should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1286,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1316,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1292,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1295,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1298,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1307,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1310,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1319,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1322,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1328,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1331,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1334,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1343,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1353,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1373,
      "char": 6,
      "detailMessage": "audio_preview_url should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1379,
      "char": 6,
      "detailMessage": "chapter_number should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1382,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1385,
      "char": 6,
      "detailMessage": "html_description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1388,
      "char": 6,
      "detailMessage": "duration_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1391,
      "char": 6,
      "detailMessage": "explicit should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1397,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1400,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1406,
      "char": 6,
      "detailMessage": "is_playable should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1412,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1415,
      "char": 6,
      "detailMessage": "release_date should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1418,
      "char": 6,
      "detailMessage": "release_date_precision should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1424,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1427,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1373,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1382,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1385,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1397,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1400,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1412,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1415,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1418,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1424,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1427,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1376,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1409,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1379,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1388,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1391,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1406,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1373,
      "char": 6,
      "detailMessage": "audio_preview_url should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1379,
      "char": 6,
      "detailMessage": "chapter_number should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1382,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1385,
      "char": 6,
      "detailMessage": "html_description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1388,
      "char": 6,
      "detailMessage": "duration_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1391,
      "char": 6,
      "detailMessage": "explicit should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1397,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1400,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1406,
      "char": 6,
      "detailMessage": "is_playable should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1412,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1415,
      "char": 6,
      "detailMessage": "release_date should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1418,
      "char": 6,
      "detailMessage": "release_date_precision should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1424,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1427,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1373,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1382,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1385,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1397,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1400,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1412,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1415,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1418,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1424,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1427,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1376,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1409,
      "char": 6,
      "detailMessage": "Array is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1379,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1388,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1391,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1406,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1457,
      "char": 6,
      "detailMessage": "afterFilteringSize should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1460,
      "char": 6,
      "detailMessage": "afterRelinkingSize should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1463,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1466,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1469,
      "char": 6,
      "detailMessage": "initialPoolSize should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1472,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1457,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1460,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1469,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1463,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1466,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1472,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1457,
      "char": 6,
      "detailMessage": "afterFilteringSize should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1460,
      "char": 6,
      "detailMessage": "afterRelinkingSize should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1463,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1466,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1469,
      "char": 6,
      "detailMessage": "initialPoolSize should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1472,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1457,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1460,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1469,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1463,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1466,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1472,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1478,
      "char": 6,
      "detailMessage": "acousticness should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1481,
      "char": 6,
      "detailMessage": "danceability should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1484,
      "char": 6,
      "detailMessage": "duration_ms should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1487,
      "char": 6,
      "detailMessage": "energy should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1490,
      "char": 6,
      "detailMessage": "instrumentalness should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1494,
      "char": 6,
      "detailMessage": "liveness should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1499,
      "char": 6,
      "detailMessage": "popularity should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1502,
      "char": 6,
      "detailMessage": "speechiness should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1507,
      "char": 6,
      "detailMessage": "valence should not inherit from a primitive type (Decimal).  Introduce a semantic type instead, which extends from Decimal. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1478,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1481,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1487,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1490,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1494,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1499,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1502,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1507,
      "char": 6,
      "detailMessage": "Decimal is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1513,
      "char": 6,
      "detailMessage": "collaborative should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1516,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1524,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1527,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1533,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1539,
      "char": 6,
      "detailMessage": "public should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1542,
      "char": 6,
      "detailMessage": "snapshot_id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1548,
      "char": 6,
      "detailMessage": "type should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1551,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1513,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1539,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1516,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1524,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1527,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1533,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1542,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1548,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1551,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1572,
      "char": 6,
      "detailMessage": "href should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1578,
      "char": 6,
      "detailMessage": "id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1581,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1572,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1578,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1581,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1657,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1660,
      "char": 6,
      "detailMessage": "public should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1664,
      "char": 6,
      "detailMessage": "collaborative should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1667,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1657,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1667,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1660,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1664,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1674,
      "char": 6,
      "detailMessage": "range_start should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1677,
      "char": 6,
      "detailMessage": "insert_before should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1680,
      "char": 6,
      "detailMessage": "range_length should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1683,
      "char": 6,
      "detailMessage": "snapshot_id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1674,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1677,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1680,
      "char": 6,
      "detailMessage": "Int is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1687,
      "char": 6,
      "detailMessage": "snapshot_id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1696,
      "char": 6,
      "detailMessage": "position should not inherit from a primitive type (Int).  Introduce a semantic type instead, which extends from Int. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1700,
      "char": 6,
      "detailMessage": "snapshot_id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1717,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1712,
      "char": 6,
      "detailMessage": "snapshot_id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1717,
      "char": 6,
      "detailMessage": "uri should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1721,
      "char": 6,
      "detailMessage": "snapshot_id should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1767,
      "char": 6,
      "detailMessage": "name should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1770,
      "char": 6,
      "detailMessage": "public should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1773,
      "char": 6,
      "detailMessage": "collaborative should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1776,
      "char": 6,
      "detailMessage": "description should not inherit from a primitive type (String).  Introduce a semantic type instead, which extends from String. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1767,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1776,
      "char": 6,
      "detailMessage": "String is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1770,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1773,
      "char": 6,
      "detailMessage": "Boolean is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1782,
      "char": 6,
      "detailMessage": "public should not inherit from a primitive type (Boolean).  Introduce a semantic type instead, which extends from Boolean. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1826,
      "char": 6,
      "detailMessage": "play should not inherit from a primitive type (Any).  Introduce a semantic type instead, which extends from Any. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1838,
      "char": 6,
      "detailMessage": "context_uri should not inherit from a primitive type (Any).  Introduce a semantic type instead, which extends from Any. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1847,
      "char": 6,
      "detailMessage": "offset should not inherit from a primitive type (Any).  Introduce a semantic type instead, which extends from Any. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1849,
      "char": 6,
      "detailMessage": "position_ms should not inherit from a primitive type (Any).  Introduce a semantic type instead, which extends from Any. (linter rule no-primitive-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1838,
      "char": 6,
      "detailMessage": "Any is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1847,
      "char": 6,
      "detailMessage": "Any is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }, {
      "line": 1849,
      "char": 6,
      "detailMessage": "Any is used multiple times.  This can lead to ambiguity when querying fields semantically.  Consider trying to use more specific types (linter rule no-duplicate-types-on-models)",
      "sourceName": "ImportRequest_14cbb130-d78e-49e0-918f-c101662e87a8_0",
      "severity": "WARNING",
      "errorCode": null
    }],
  "taxi": `namespace vyne.openApi {
   model LinkedTrackObject {
      [[ Known external URLs for this track. ]]
      external_urls : AnonymousTypeLinkedTrackObjectExternal_urls
      [[ A link to the Web API endpoint providing full details of the track. ]]
      href : String
      [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track. ]]
      id : String
      [[ The object type: "track". ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track. ]]
      uri : String
   }

   [[ Known external URLs for this track. ]]
   type AnonymousTypeLinkedTrackObjectExternal_urls inherits ExternalUrlObject

   model ExternalUrlObject {
      [[ The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object. ]]
      spotify : String
   }

   model TrackRestrictionObject {
      [[ The reason for the restriction. Supported values:
      - \`market\` - The content item is not available in the given market.
      - \`product\` - The content item is not available for the user's subscription type.
      - \`explicit\` - The content item is explicit and the user's account is set to not play explicit content.
      Additional reasons may be added in the future.
      **Note**: If you use this field, make sure that your application safely handles unknown values. ]]
      reason : String
   }

   model AlbumRestrictionObject {
      [[ The reason for the restriction. Albums may be restricted if the content is not available in a given market, to the user's subscription type, or when the user's account is set to not play explicit content.
      Additional reasons may be added in the future. ]]
      reason : String
   }

   model EpisodeRestrictionObject {
      [[ The reason for the restriction. Supported values:
      - \`market\` - The content item is not available in the given market.
      - \`product\` - The content item is not available for the user's subscription type.
      - \`explicit\` - The content item is explicit and the user's account is set to not play explicit content.
      Additional reasons may be added in the future.
      **Note**: If you use this field, make sure that your application safely handles unknown values. ]]
      reason : String
   }

   model ChapterRestrictionObject {
      [[ The reason for the restriction. Supported values:
      - \`market\` - The content item is not available in the given market.
      - \`product\` - The content item is not available for the user's subscription type.
      - \`explicit\` - The content item is explicit and the user's account is set to not play explicit content.
      - \`payment_required\` - Payment is required to play the content item.
      Additional reasons may be added in the future.
      **Note**: If you use this field, make sure that your application safely handles unknown values. ]]
      reason : String
   }

   model ArtistObject {
      [[ Known external URLs for this artist. ]]
      external_urls : AnonymousTypeArtistObjectExternal_urls
      [[ Information about the followers of the artist. ]]
      followers : AnonymousTypeArtistObjectFollowers
      [[ A list of the genres the artist is associated with. If not yet classified, the array is empty. ]]
      genres : String[]
      [[ A link to the Web API endpoint providing full details of the artist. ]]
      href : String
      [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the artist. ]]
      id : String
      [[ Images of the artist in various sizes, widest first. ]]
      images : ImageObject[]
      [[ The name of the artist. ]]
      name : String
      [[ The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular. The artist's popularity is calculated from the popularity of all the artist's tracks. ]]
      popularity : Int
      [[ The object type. ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the artist. ]]
      uri : String
   }

   [[ Known external URLs for this artist. ]]
   type AnonymousTypeArtistObjectExternal_urls inherits ExternalUrlObject

   [[ Information about the followers of the artist. ]]
   type AnonymousTypeArtistObjectFollowers inherits FollowersObject

   model FollowersObject {
      [[ This will always be set to null, as the Web API does not support it at the moment. ]]
      href : String?
      [[ The total number of followers. ]]
      total : Int
   }

   model ImageObject {
      [[ The source URL of the image. ]]
      url : String
      [[ The image height in pixels. ]]
      height : Int?
      [[ The image width in pixels. ]]
      width : Int?
   }

   model SimplifiedArtistObject {
      [[ Known external URLs for this artist. ]]
      external_urls : AnonymousTypeSimplifiedArtistObjectExternal_urls
      [[ A link to the Web API endpoint providing full details of the artist. ]]
      href : String
      [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the artist. ]]
      id : String
      [[ The name of the artist. ]]
      name : String
      [[ The object type. ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the artist. ]]
      uri : String
   }

   [[ Known external URLs for this artist. ]]
   type AnonymousTypeSimplifiedArtistObjectExternal_urls inherits ExternalUrlObject

   model PlayHistoryObject {
      [[ The track the user listened to. ]]
      track : AnonymousTypePlayHistoryObjectTrack
      [[ The date and time the track was played. ]]
      played_at : DateTime
      [[ The context the track was played from. ]]
      context : AnonymousTypePlayHistoryObjectContext
   }

   [[ The track the user listened to. ]]
   type AnonymousTypePlayHistoryObjectTrack inherits TrackObject

   model TrackObject {
      [[ The album on which the track appears. The album object includes a link in \`href\` to full information about the album. ]]
      album : AnonymousTypeTrackObjectAlbum
      [[ The artists who performed the track. Each artist object includes a link in \`href\` to more detailed information about the artist. ]]
      artists : ArtistObject[]
      [[ A list of the countries in which the track can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code. ]]
      available_markets : String[]
      [[ The disc number (usually \`1\` unless the album consists of more than one disc). ]]
      disc_number : Int
      [[ The track length in milliseconds. ]]
      duration_ms : Int
      [[ Whether or not the track has explicit lyrics ( \`true\` = yes it does; \`false\` = no it does not OR unknown). ]]
      explicit : Boolean
      [[ Known external IDs for the track. ]]
      external_ids : AnonymousTypeTrackObjectExternal_ids
      [[ Known external URLs for this track. ]]
      external_urls : AnonymousTypeTrackObjectExternal_urls
      [[ A link to the Web API endpoint providing full details of the track. ]]
      href : String
      [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track. ]]
      id : String
      [[ Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking) is applied. If \`true\`, the track is playable in the given market. Otherwise \`false\`. ]]
      is_playable : Boolean
      [[ Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking) is applied, and the requested track has been replaced with different track. The track in the \`linked_from\` object contains information about the originally requested track. ]]
      linked_from : Any
      [[ Included in the response when a content restriction is applied. ]]
      restrictions : AnonymousTypeTrackObjectRestrictions
      [[ The name of the track. ]]
      name : String
      [[ The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.<br/>The popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.<br/>Generally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past. Duplicate tracks (e.g. the same track from a single and an album) are rated independently. Artist and album popularity is derived mathematically from track popularity. _**Note**: the popularity value may lag actual popularity by a few days: the value is not updated in real time._ ]]
      popularity : Int
      [[ A link to a 30 second preview (MP3 format) of the track. Can be \`null\` ]]
      preview_url : String
      [[ The number of the track. If an album has several discs, the track number is the number on the specified disc. ]]
      track_number : Int
      [[ The object type: "track". ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track. ]]
      uri : String
      [[ Whether or not the track is from a local file. ]]
      is_local : Boolean
   }

   [[ The album on which the track appears. The album object includes a link in \`href\` to full information about the album. ]]
   type AnonymousTypeTrackObjectAlbum inherits SimplifiedAlbumObject

   model SimplifiedAlbumObject inherits AlbumBase {
      [[ The field is present when getting an artist's albums. Compare to album_type this field represents relationship between the artist and the album. ]]
      album_group : String?
      [[ The artists of the album. Each artist object includes a link in \`href\` to more detailed information about the artist. ]]
      artists : SimplifiedArtistObject[]
   }

   model AlbumBase {
      [[ The type of the album. ]]
      album_type : String
      [[ The number of tracks in the album. ]]
      total_tracks : Int
      [[ The markets in which the album is available: [ISO 3166-1 alpha-2 country codes](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). _**NOTE**: an album is considered available in a market when at least 1 of its tracks is available in that market._ ]]
      available_markets : String[]
      [[ Known external URLs for this album. ]]
      external_urls : AnonymousTypeAlbumBaseExternal_urls
      [[ A link to the Web API endpoint providing full details of the album. ]]
      href : String
      [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the album. ]]
      id : String
      [[ The cover art for the album in various sizes, widest first. ]]
      images : ImageObject[]
      [[ The name of the album. In case of an album takedown, the value may be an empty string. ]]
      name : String
      [[ The date the album was first released. ]]
      release_date : String
      [[ The precision with which \`release_date\` value is known. ]]
      release_date_precision : String
      [[ Included in the response when a content restriction is applied. ]]
      restrictions : AnonymousTypeAlbumBaseRestrictions?
      [[ The object type. ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the album. ]]
      uri : String
      [[ The copyright statements of the album. ]]
      copyrights : CopyrightObject[]?
      [[ Known external IDs for the album. ]]
      external_ids : AnonymousTypeAlbumBaseExternal_ids?
      [[ A list of the genres the album is associated with. If not yet classified, the array is empty. ]]
      genres : String[]?
      [[ The label associated with the album. ]]
      label : String?
      [[ The popularity of the album. The value will be between 0 and 100, with 100 being the most popular. ]]
      popularity : Int?
   }

   [[ Known external URLs for this album. ]]
   type AnonymousTypeAlbumBaseExternal_urls inherits ExternalUrlObject

   [[ Included in the response when a content restriction is applied. ]]
   type AnonymousTypeAlbumBaseRestrictions inherits AlbumRestrictionObject

   model CopyrightObject {
      [[ The copyright text for this content. ]]
      text : String
      [[ The type of copyright: \`C\` = the copyright, \`P\` = the sound recording (performance) copyright. ]]
      \`type\` : String
   }

   [[ Known external IDs for the album. ]]
   type AnonymousTypeAlbumBaseExternal_ids inherits ExternalIdObject

   model ExternalIdObject {
      [[ [International Standard Recording Code](http://en.wikipedia.org/wiki/International_Standard_Recording_Code) ]]
      isrc : String
      [[ [International Article Number](http://en.wikipedia.org/wiki/International_Article_Number_%28EAN%29) ]]
      ean : String
      [[ [Universal Product Code](http://en.wikipedia.org/wiki/Universal_Product_Code) ]]
      upc : String
   }

   [[ Known external IDs for the track. ]]
   type AnonymousTypeTrackObjectExternal_ids inherits ExternalIdObject

   [[ Known external URLs for this track. ]]
   type AnonymousTypeTrackObjectExternal_urls inherits ExternalUrlObject

   [[ Included in the response when a content restriction is applied. ]]
   type AnonymousTypeTrackObjectRestrictions inherits TrackRestrictionObject

   [[ The context the track was played from. ]]
   type AnonymousTypePlayHistoryObjectContext inherits ContextObject

   model ContextObject {
      [[ The object type, e.g. "artist", "playlist", "album", "show". ]]
      \`type\` : String
      [[ A link to the Web API endpoint providing full details of the track. ]]
      href : String
      [[ External URLs for this context. ]]
      external_urls : AnonymousTypeContextObjectExternal_urls
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the context. ]]
      uri : String
   }

   [[ External URLs for this context. ]]
   type AnonymousTypeContextObjectExternal_urls inherits ExternalUrlObject

   model PlaylistTrackObject {
      [[ The date and time the track or episode was added. _**Note**: some very old playlists may return \`null\` in this field._ ]]
      added_at : DateTime
      [[ The Spotify user who added the track or episode. _**Note**: some very old playlists may return \`null\` in this field._ ]]
      added_by : AnonymousTypePlaylistTrackObjectAdded_by
      [[ Whether this track or episode is a [local file](/documentation/web-api/concepts/playlists/#local-files) or not. ]]
      is_local : Boolean
      [[ Information about the track or episode. ]]
      track : Any
   }

   [[ The Spotify user who added the track or episode. _**Note**: some very old playlists may return \`null\` in this field._ ]]
   type AnonymousTypePlaylistTrackObjectAdded_by inherits PlaylistUserObject

   model PlaylistUserObject {
      [[ Known public external URLs for this user. ]]
      external_urls : AnonymousTypePlaylistUserObjectExternal_urls
      [[ Information about the followers of this user. ]]
      followers : AnonymousTypePlaylistUserObjectFollowers
      [[ A link to the Web API endpoint for this user. ]]
      href : String
      [[ The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for this user. ]]
      id : String
      [[ The object type. ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for this user. ]]
      uri : String
   }

   [[ Known public external URLs for this user. ]]
   type AnonymousTypePlaylistUserObjectExternal_urls inherits ExternalUrlObject

   [[ Information about the followers of this user. ]]
   type AnonymousTypePlaylistUserObjectFollowers inherits FollowersObject

   model CurrentlyPlayingObject {
      [[ A Context Object. Can be \`null\`. ]]
      context : AnonymousTypeCurrentlyPlayingObjectContext
      [[ Unix Millisecond Timestamp when data was fetched ]]
      timestamp : Int
      [[ Progress into the currently playing track or episode. Can be \`null\`. ]]
      progress_ms : Int
      [[ If something is currently playing, return \`true\`. ]]
      is_playing : Boolean
      [[ The currently playing track or episode. Can be \`null\`. ]]
      item : Any
      [[ The object type of the currently playing item. Can be one of \`track\`, \`episode\`, \`ad\` or \`unknown\`. ]]
      currently_playing_type : String
   }

   [[ A Context Object. Can be \`null\`. ]]
   type AnonymousTypeCurrentlyPlayingObjectContext inherits ContextObject

   model QueueObject {
      [[ The currently playing track or episode. Can be \`null\`. ]]
      currently_playing : Any
      [[ The tracks or episodes in the queue. Can be empty. ]]
      queue : Any[]
   }

   model CurrentlyPlayingContextObject {
      [[ The device that is currently active. ]]
      device : AnonymousTypeCurrentlyPlayingContextObjectDevice
      [[ off, track, context ]]
      repeat_state : String
      [[ If shuffle is on or off. ]]
      shuffle_state : Boolean
      [[ A Context Object. Can be \`null\`. ]]
      context : AnonymousTypeCurrentlyPlayingContextObjectContext
      [[ Unix Millisecond Timestamp when data was fetched. ]]
      timestamp : Int
      [[ Progress into the currently playing track or episode. Can be \`null\`. ]]
      progress_ms : Int
      [[ If something is currently playing, return \`true\`. ]]
      is_playing : Boolean
      [[ The currently playing track or episode. Can be \`null\`. ]]
      item : Any
      [[ The object type of the currently playing item. Can be one of \`track\`, \`episode\`, \`ad\` or \`unknown\`. ]]
      currently_playing_type : String
      [[ Allows to update the user interface based on which playback actions are available within the current context. ]]
      actions : AnonymousTypeCurrentlyPlayingContextObjectActions
   }

   [[ The device that is currently active. ]]
   type AnonymousTypeCurrentlyPlayingContextObjectDevice inherits DeviceObject

   model DeviceObject {
      [[ The device ID. ]]
      id : String?
      [[ If this device is the currently active device. ]]
      is_active : Boolean
      [[ If this device is currently in a private session. ]]
      is_private_session : Boolean
      [[ Whether controlling this device is restricted. At present if this is "true" then no Web API commands will be accepted by this device. ]]
      is_restricted : Boolean
      [[ A human-readable name for the device. Some devices have a name that the user can configure (e.g. \\"Loudest speaker\\") and some devices have a generic name associated with the manufacturer or device model. ]]
      name : String
      [[ Device type, such as "computer", "smartphone" or "speaker". ]]
      \`type\` : String
      [[ The current volume in percent. ]]
      volume_percent : Int?
   }

   [[ A Context Object. Can be \`null\`. ]]
   type AnonymousTypeCurrentlyPlayingContextObjectContext inherits ContextObject

   [[ Allows to update the user interface based on which playback actions are available within the current context. ]]
   type AnonymousTypeCurrentlyPlayingContextObjectActions inherits DisallowsObject

   model DisallowsObject {
      [[ Interrupting playback. Optional field. ]]
      interrupting_playback : Boolean
      [[ Pausing. Optional field. ]]
      pausing : Boolean
      [[ Resuming. Optional field. ]]
      resuming : Boolean
      [[ Seeking playback location. Optional field. ]]
      seeking : Boolean
      [[ Skipping to the next context. Optional field. ]]
      skipping_next : Boolean
      [[ Skipping to the previous context. Optional field. ]]
      skipping_prev : Boolean
      [[ Toggling repeat context flag. Optional field. ]]
      toggling_repeat_context : Boolean
      [[ Toggling shuffle flag. Optional field. ]]
      toggling_shuffle : Boolean
      [[ Toggling repeat track flag. Optional field. ]]
      toggling_repeat_track : Boolean
      [[ Transfering playback between devices. Optional field. ]]
      transferring_playback : Boolean
   }

   model ErrorObject {
      [[ The HTTP status code (also returned in the response header; see [Response Status Codes](/documentation/web-api/concepts/api-calls#response-status-codes) for more information). ]]
      status : Int
      [[ A short description of the cause of the error. ]]
      message : String
   }

   model PlayerErrorObject {
      [[ The HTTP status code. Either \`404 NOT FOUND\` or \`403 FORBIDDEN\`.  Also returned in the response header. ]]
      status : Int
      [[ A short description of the cause of the error. ]]
      message : String
      reason : AnonymousTypePlayerErrorObjectReason
   }

   type AnonymousTypePlayerErrorObjectReason inherits PlayerErrorReasons

   type PlayerErrorReasons inherits String

   model PrivateUserObject {
      [[ The country of the user, as set in the user's account profile. An [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._ ]]
      country : String
      [[ The name displayed on the user's profile. \`null\` if not available. ]]
      display_name : String
      [[ The user's email address, as entered by the user when creating their account. _**Important!** This email address is unverified; there is no proof that it actually belongs to the user._ _This field is only available when the current user has granted access to the [user-read-email](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._ ]]
      email : String
      [[ The user's explicit content settings. _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._ ]]
      explicit_content : AnonymousTypePrivateUserObjectExplicit_content
      [[ Known external URLs for this user. ]]
      external_urls : AnonymousTypePrivateUserObjectExternal_urls
      [[ Information about the followers of the user. ]]
      followers : AnonymousTypePrivateUserObjectFollowers
      [[ A link to the Web API endpoint for this user. ]]
      href : String
      [[ The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for the user. ]]
      id : String
      [[ The user's profile image. ]]
      images : ImageObject[]
      [[ The user's Spotify subscription level: "premium", "free", etc. (The subscription level "open" can be considered the same as "free".) _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._ ]]
      product : String
      [[ The object type: "user" ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the user. ]]
      uri : String
   }

   [[ The user's explicit content settings. _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._ ]]
   type AnonymousTypePrivateUserObjectExplicit_content inherits ExplicitContentSettingsObject

   model ExplicitContentSettingsObject {
      [[ When \`true\`, indicates that explicit content should not be played. ]]
      filter_enabled : Boolean
      [[ When \`true\`, indicates that the explicit content setting is locked and can't be changed by the user. ]]
      filter_locked : Boolean
   }

   [[ Known external URLs for this user. ]]
   type AnonymousTypePrivateUserObjectExternal_urls inherits ExternalUrlObject

   [[ Information about the followers of the user. ]]
   type AnonymousTypePrivateUserObjectFollowers inherits FollowersObject

   model PublicUserObject {
      [[ The name displayed on the user's profile. \`null\` if not available. ]]
      display_name : String?
      [[ Known public external URLs for this user. ]]
      external_urls : AnonymousTypePublicUserObjectExternal_urls
      [[ Information about the followers of this user. ]]
      followers : AnonymousTypePublicUserObjectFollowers
      [[ A link to the Web API endpoint for this user. ]]
      href : String
      [[ The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for this user. ]]
      id : String
      [[ The user's profile image. ]]
      images : ImageObject[]
      [[ The object type. ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for this user. ]]
      uri : String
   }

   [[ Known public external URLs for this user. ]]
   type AnonymousTypePublicUserObjectExternal_urls inherits ExternalUrlObject

   [[ Information about the followers of this user. ]]
   type AnonymousTypePublicUserObjectFollowers inherits FollowersObject

   model AudioAnalysisObject {
      meta : AnonymousTypeAudioAnalysisObjectMeta
      track : AnonymousTypeAudioAnalysisObjectTrack
      [[ The time intervals of the bars throughout the track. A bar (or measure) is a segment of time defined as a given number of beats. ]]
      bars : TimeIntervalObject[]
      [[ The time intervals of beats throughout the track. A beat is the basic time unit of a piece of music; for example, each tick of a metronome. Beats are typically multiples of tatums. ]]
      beats : TimeIntervalObject[]
      [[ Sections are defined by large variations in rhythm or timbre, e.g. chorus, verse, bridge, guitar solo, etc. Each section contains its own descriptions of tempo, key, mode, time_signature, and loudness. ]]
      sections : SectionObject[]
      [[ Each segment contains a roughly conisistent sound throughout its duration. ]]
      segments : SegmentObject[]
      [[ A tatum represents the lowest regular pulse train that a listener intuitively infers from the timing of perceived musical events (segments). ]]
      tatums : TimeIntervalObject[]
   }

   model AnonymousTypeAudioAnalysisObjectMeta {
      [[ The version of the Analyzer used to analyze this track. ]]
      analyzer_version : String
      [[ The platform used to read the track's audio data. ]]
      platform : String
      [[ A detailed status code for this track. If analysis data is missing, this code may explain why. ]]
      detailed_status : String
      [[ The return code of the analyzer process. 0 if successful, 1 if any errors occurred. ]]
      status_code : Int
      [[ The Unix timestamp (in seconds) at which this track was analyzed. ]]
      timestamp : Int
      [[ The amount of time taken to analyze this track. ]]
      analysis_time : Decimal
      [[ The method used to read the track's audio data. ]]
      input_process : String
   }

   model AnonymousTypeAudioAnalysisObjectTrack {
      [[ The exact number of audio samples analyzed from this track. See also \`analysis_sample_rate\`. ]]
      num_samples : Int
      [[ Length of the track in seconds. ]]
      duration : Decimal
      [[ This field will always contain the empty string. ]]
      sample_md5 : String
      [[ An offset to the start of the region of the track that was analyzed. (As the entire track is analyzed, this should always be 0.) ]]
      offset_seconds : Int
      [[ The length of the region of the track was analyzed, if a subset of the track was analyzed. (As the entire track is analyzed, this should always be 0.) ]]
      window_seconds : Int
      [[ The sample rate used to decode and analyze this track. May differ from the actual sample rate of this track available on Spotify. ]]
      analysis_sample_rate : Int
      [[ The number of channels used for analysis. If 1, all channels are summed together to mono before analysis. ]]
      analysis_channels : Int
      [[ The time, in seconds, at which the track's fade-in period ends. If the track has no fade-in, this will be 0.0. ]]
      end_of_fade_in : Decimal
      [[ The time, in seconds, at which the track's fade-out period starts. If the track has no fade-out, this should match the track's length. ]]
      start_of_fade_out : Decimal
      loudness : Loudness
      tempo : Tempo
      [[ The confidence, from 0.0 to 1.0, of the reliability of the \`tempo\`. ]]
      tempo_confidence : Decimal
      time_signature : TimeSignature
      [[ The confidence, from 0.0 to 1.0, of the reliability of the \`time_signature\`. ]]
      time_signature_confidence : Decimal
      key : Key
      [[ The confidence, from 0.0 to 1.0, of the reliability of the \`key\`. ]]
      key_confidence : Decimal
      mode : Mode
      [[ The confidence, from 0.0 to 1.0, of the reliability of the \`mode\`. ]]
      mode_confidence : Decimal
      [[ An [Echo Nest Musical Fingerprint (ENMFP)](https://academiccommons.columbia.edu/doi/10.7916/D8Q248M4) codestring for this track. ]]
      codestring : String
      [[ A version number for the Echo Nest Musical Fingerprint format used in the codestring field. ]]
      code_version : Decimal
      [[ An [EchoPrint](https://github.com/spotify/echoprint-codegen) codestring for this track. ]]
      echoprintstring : String
      [[ A version number for the EchoPrint format used in the echoprintstring field. ]]
      echoprint_version : Decimal
      [[ A [Synchstring](https://github.com/echonest/synchdata) for this track. ]]
      synchstring : String
      [[ A version number for the Synchstring used in the synchstring field. ]]
      synch_version : Decimal
      [[ A Rhythmstring for this track. The format of this string is similar to the Synchstring. ]]
      rhythmstring : String
      [[ A version number for the Rhythmstring used in the rhythmstring field. ]]
      rhythm_version : Decimal
   }

   type Loudness inherits Decimal

   type Tempo inherits Decimal

   type TimeSignature inherits Int

   type Key inherits Int

   type Mode inherits Int

   model TimeIntervalObject {
      [[ The starting point (in seconds) of the time interval. ]]
      start : Decimal
      [[ The duration (in seconds) of the time interval. ]]
      duration : Decimal
      [[ The confidence, from 0.0 to 1.0, of the reliability of the interval. ]]
      confidence : Decimal
   }

   model SectionObject {
      [[ The starting point (in seconds) of the section. ]]
      start : Decimal
      [[ The duration (in seconds) of the section. ]]
      duration : Decimal
      [[ The confidence, from 0.0 to 1.0, of the reliability of the section's "designation". ]]
      confidence : Decimal
      [[ The overall loudness of the section in decibels (dB). Loudness values are useful for comparing relative loudness of sections within tracks. ]]
      loudness : Decimal
      [[ The overall estimated tempo of the section in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration. ]]
      tempo : Decimal
      [[ The confidence, from 0.0 to 1.0, of the reliability of the tempo. Some tracks contain tempo changes or sounds which don't contain tempo (like pure speech) which would correspond to a low value in this field. ]]
      tempo_confidence : Decimal
      [[ The estimated overall key of the section. The values in this field ranging from 0 to 11 mapping to pitches using standard Pitch Class notation (E.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on). If no key was detected, the value is -1. ]]
      key : Int
      [[ The confidence, from 0.0 to 1.0, of the reliability of the key. Songs with many key changes may correspond to low values in this field. ]]
      key_confidence : Decimal
      [[ Indicates the modality (major or minor) of a section, the type of scale from which its melodic content is derived. This field will contain a 0 for "minor", a 1 for "major", or a -1 for no result. Note that the major key (e.g. C major) could more likely be confused with the minor key at 3 semitones lower (e.g. A minor) as both keys carry the same pitches. ]]
      mode : Decimal
      [[ The confidence, from 0.0 to 1.0, of the reliability of the \`mode\`. ]]
      mode_confidence : Decimal
      time_signature : TimeSignature
      [[ The confidence, from 0.0 to 1.0, of the reliability of the \`time_signature\`. Sections with time signature changes may correspond to low values in this field. ]]
      time_signature_confidence : Decimal
   }

   model SegmentObject {
      [[ The starting point (in seconds) of the segment. ]]
      start : Decimal
      [[ The duration (in seconds) of the segment. ]]
      duration : Decimal
      [[ The confidence, from 0.0 to 1.0, of the reliability of the segmentation. Segments of the song which are difficult to logically segment (e.g: noise) may correspond to low values in this field. ]]
      confidence : Decimal
      [[ The onset loudness of the segment in decibels (dB). Combined with \`loudness_max\` and \`loudness_max_time\`, these components can be used to describe the "attack" of the segment. ]]
      loudness_start : Decimal
      [[ The peak loudness of the segment in decibels (dB). Combined with \`loudness_start\` and \`loudness_max_time\`, these components can be used to describe the "attack" of the segment. ]]
      loudness_max : Decimal
      [[ The segment-relative offset of the segment peak loudness in seconds. Combined with \`loudness_start\` and \`loudness_max\`, these components can be used to desctibe the "attack" of the segment. ]]
      loudness_max_time : Decimal
      [[ The offset loudness of the segment in decibels (dB). This value should be equivalent to the loudness_start of the following segment. ]]
      loudness_end : Decimal
      [[ Pitch content is given by a “chroma” vector, corresponding to the 12 pitch classes C, C#, D to B, with values ranging from 0 to 1 that describe the relative dominance of every pitch in the chromatic scale. For example a C Major chord would likely be represented by large values of C, E and G (i.e. classes 0, 4, and 7).
      Vectors are normalized to 1 by their strongest dimension, therefore noisy sounds are likely represented by values that are all close to 1, while pure tones are described by one value at 1 (the pitch) and others near 0.
      As can be seen below, the 12 vector indices are a combination of low-power spectrum values at their respective pitch frequencies.
      ![pitch vector](https://developer.spotify.com/assets/audio/Pitch_vector.png) ]]
      pitches : Decimal[]
      [[ Timbre is the quality of a musical note or sound that distinguishes different types of musical instruments, or voices. It is a complex notion also referred to as sound color, texture, or tone quality, and is derived from the shape of a segment’s spectro-temporal surface, independently of pitch and loudness. The timbre feature is a vector that includes 12 unbounded values roughly centered around 0. Those values are high level abstractions of the spectral surface, ordered by degree of importance.
      For completeness however, the first dimension represents the average loudness of the segment; second emphasizes brightness; third is more closely correlated to the flatness of a sound; fourth to sounds with a stronger attack; etc. See an image below representing the 12 basis functions (i.e. template segments).
      ![timbre basis functions](https://developer.spotify.com/assets/audio/Timbre_basis_functions.png)
      The actual timbre of the segment is best described as a linear combination of these 12 basis functions weighted by the coefficient values: timbre = c1 x b1 + c2 x b2 + ... + c12 x b12, where c1 to c12 represent the 12 coefficients and b1 to b12 the 12 basis functions as displayed below. Timbre vectors are best used in comparison with each other. ]]
      timbre : Decimal[]
   }

   model AudioFeaturesObject {
      [[ A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic. ]]
      acousticness : Decimal
      [[ A URL to access the full audio analysis of this track. An access token is required to access this data. ]]
      analysis_url : String
      [[ Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable. ]]
      danceability : Decimal
      [[ The duration of the track in milliseconds. ]]
      duration_ms : Int
      [[ Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy. ]]
      energy : Decimal
      [[ The Spotify ID for the track. ]]
      id : String
      [[ Predicts whether a track contains no vocals. "Ooh" and "aah" sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly "vocal". The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0. ]]
      instrumentalness : Decimal
      key : Key
      [[ Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live. ]]
      liveness : Decimal
      loudness : Loudness
      mode : Mode
      [[ Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks. ]]
      speechiness : Decimal
      tempo : Tempo
      time_signature : TimeSignature
      [[ A link to the Web API endpoint providing full details of the track. ]]
      track_href : String
      [[ The object type. ]]
      \`type\` : String
      [[ The Spotify URI for the track. ]]
      uri : String
      [[ A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry). ]]
      valence : Decimal
   }

   model SimplifiedTrackObject {
      [[ The artists who performed the track. Each artist object includes a link in \`href\` to more detailed information about the artist. ]]
      artists : SimplifiedArtistObject[]
      [[ A list of the countries in which the track can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code. ]]
      available_markets : String[]
      [[ The disc number (usually \`1\` unless the album consists of more than one disc). ]]
      disc_number : Int
      [[ The track length in milliseconds. ]]
      duration_ms : Int
      [[ Whether or not the track has explicit lyrics ( \`true\` = yes it does; \`false\` = no it does not OR unknown). ]]
      explicit : Boolean
      [[ External URLs for this track. ]]
      external_urls : AnonymousTypeSimplifiedTrackObjectExternal_urls
      [[ A link to the Web API endpoint providing full details of the track. ]]
      href : String
      [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track. ]]
      id : String
      [[ Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking/) is applied. If \`true\`, the track is playable in the given market. Otherwise \`false\`. ]]
      is_playable : Boolean
      [[ Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking/) is applied and is only part of the response if the track linking, in fact, exists. The requested track has been replaced with a different track. The track in the \`linked_from\` object contains information about the originally requested track. ]]
      linked_from : AnonymousTypeSimplifiedTrackObjectLinked_from
      [[ Included in the response when a content restriction is applied. ]]
      restrictions : AnonymousTypeSimplifiedTrackObjectRestrictions
      [[ The name of the track. ]]
      name : String
      [[ A URL to a 30 second preview (MP3 format) of the track. ]]
      preview_url : String
      [[ The number of the track. If an album has several discs, the track number is the number on the specified disc. ]]
      track_number : Int
      [[ The object type: "track". ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track. ]]
      uri : String
      [[ Whether or not the track is from a local file. ]]
      is_local : Boolean
   }

   [[ External URLs for this track. ]]
   type AnonymousTypeSimplifiedTrackObjectExternal_urls inherits ExternalUrlObject

   [[ Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking/) is applied and is only part of the response if the track linking, in fact, exists. The requested track has been replaced with a different track. The track in the \`linked_from\` object contains information about the originally requested track. ]]
   type AnonymousTypeSimplifiedTrackObjectLinked_from inherits LinkedTrackObject

   [[ Included in the response when a content restriction is applied. ]]
   type AnonymousTypeSimplifiedTrackObjectRestrictions inherits TrackRestrictionObject

   model DevicesObject {
      [[ A list of 0..n Device objects ]]
      devices : DeviceObject[]
   }

   model CursorObject {
      [[ The cursor to use as key to find the next page of items. ]]
      after : String
      [[ The cursor to use as key to find the previous page of items. ]]
      before : String
   }

   model CursorPagingObject {
      [[ A link to the Web API endpoint returning the full result of the request. ]]
      href : String
      [[ The maximum number of items in the response (as set in the query or by default). ]]
      limit : Int
      [[ URL to the next page of items. ( \`null\` if none) ]]
      next : String
      [[ The cursors used to find the next set of items. ]]
      cursors : AnonymousTypeCursorPagingObjectCursors
      [[ The total number of items available to return. ]]
      total : Int
   }

   [[ The cursors used to find the next set of items. ]]
   type AnonymousTypeCursorPagingObjectCursors inherits CursorObject

   model CursorPagingPlayHistoryObject inherits CursorPagingObject {
      items : PlayHistoryObject[]
   }

   model CursorPagingSimplifiedArtistObject inherits CursorPagingObject {
      items : ArtistObject[]
   }

   model PagingObject {
      [[ A link to the Web API endpoint returning the full result of the request ]]
      href : String
      [[ The maximum number of items in the response (as set in the query or by default). ]]
      limit : Int
      [[ URL to the next page of items. ( \`null\` if none) ]]
      next : String?
      [[ The offset of the items returned (as set in the query or by default) ]]
      offset : Int
      [[ URL to the previous page of items. ( \`null\` if none) ]]
      previous : String?
      [[ The total number of items available to return. ]]
      total : Int
   }

   model PagingPlaylistObject inherits PagingObject {
      items : SimplifiedPlaylistObject[]
   }

   model SimplifiedPlaylistObject {
      [[ \`true\` if the owner allows other users to modify the playlist. ]]
      collaborative : Boolean
      [[ The playlist description. _Only returned for modified, verified playlists, otherwise_ \`null\`. ]]
      description : String
      [[ Known external URLs for this playlist. ]]
      external_urls : AnonymousTypeSimplifiedPlaylistObjectExternal_urls
      [[ A link to the Web API endpoint providing full details of the playlist. ]]
      href : String
      [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the playlist. ]]
      id : String
      [[ Images for the playlist. The array may be empty or contain up to three images. The images are returned by size in descending order. See [Working with Playlists](/documentation/web-api/concepts/playlists). _**Note**: If returned, the source URL for the image (\`url\`) is temporary and will expire in less than a day._ ]]
      images : ImageObject[]
      [[ The name of the playlist. ]]
      name : String
      [[ The user who owns the playlist ]]
      owner : AnonymousTypeSimplifiedPlaylistObjectOwner
      [[ The playlist's public/private status: \`true\` the playlist is public, \`false\` the playlist is private, \`null\` the playlist status is not relevant. For more about public/private status, see [Working with Playlists](/documentation/web-api/concepts/playlists) ]]
      public : Boolean
      [[ The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version ]]
      snapshot_id : String
      [[ A collection containing a link ( \`href\` ) to the Web API endpoint where full details of the playlist's tracks can be retrieved, along with the \`total\` number of tracks in the playlist. Note, a track object may be \`null\`. This can happen if a track is no longer available. ]]
      tracks : AnonymousTypeSimplifiedPlaylistObjectTracks
      [[ The object type: "playlist" ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the playlist. ]]
      uri : String
   }

   [[ Known external URLs for this playlist. ]]
   type AnonymousTypeSimplifiedPlaylistObjectExternal_urls inherits ExternalUrlObject

   [[ The user who owns the playlist ]]
   type AnonymousTypeSimplifiedPlaylistObjectOwner inherits PlaylistOwnerObject

   model PlaylistOwnerObject inherits PlaylistUserObject {
      [[ The name displayed on the user's profile. \`null\` if not available. ]]
      display_name : String?
   }

   [[ A collection containing a link ( \`href\` ) to the Web API endpoint where full details of the playlist's tracks can be retrieved, along with the \`total\` number of tracks in the playlist. Note, a track object may be \`null\`. This can happen if a track is no longer available. ]]
   type AnonymousTypeSimplifiedPlaylistObjectTracks inherits PlaylistTracksRefObject

   model PlaylistTracksRefObject {
      [[ A link to the Web API endpoint where full details of the playlist's tracks can be retrieved. ]]
      href : String
      [[ Number of tracks in the playlist. ]]
      total : Int
   }

   model PagingFeaturedPlaylistObject {
      message : String
      playlists : PagingPlaylistObject
   }

   model PagingSimplifiedAlbumObject inherits PagingObject {
      items : SimplifiedAlbumObject[]
   }

   model PagingSavedAlbumObject inherits PagingObject {
      items : SavedAlbumObject[]
   }

   model SavedAlbumObject {
      [[ The date and time the album was saved
      Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ.
      If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, release_date in an album object. ]]
      added_at : DateTime
      [[ Information about the album. ]]
      album : AnonymousTypeSavedAlbumObjectAlbum
   }

   [[ Information about the album. ]]
   type AnonymousTypeSavedAlbumObjectAlbum inherits AlbumObject

   model AlbumObject inherits AlbumBase {
      [[ The artists of the album. Each artist object includes a link in \`href\` to more detailed information about the artist. ]]
      artists : ArtistObject[]
      tracks : PagingSimplifiedTrackObject
   }

   model PagingSimplifiedTrackObject inherits PagingObject {
      items : SimplifiedTrackObject[]
   }

   model PagingSavedTrackObject inherits PagingObject {
      items : SavedTrackObject[]
   }

   model SavedTrackObject {
      [[ The date and time the track was saved.
      Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ.
      If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, release_date in an album object. ]]
      added_at : DateTime
      [[ Information about the track. ]]
      track : AnonymousTypeSavedTrackObjectTrack
   }

   [[ Information about the track. ]]
   type AnonymousTypeSavedTrackObjectTrack inherits TrackObject

   model PagingTrackObject inherits PagingObject {
      items : TrackObject[]
   }

   model PagingPlaylistTrackObject inherits PagingObject {
      items : PlaylistTrackObject[]
   }

   model PagingSimplifiedShowObject inherits PagingObject {
      items : SimplifiedShowObject[]
   }

   type SimplifiedShowObject inherits ShowBase

   model ShowBase {
      [[ A list of the countries in which the show can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code. ]]
      available_markets : String[]
      [[ The copyright statements of the show. ]]
      copyrights : CopyrightObject[]
      [[ A description of the show. HTML tags are stripped away from this field, use \`html_description\` field in case HTML tags are needed. ]]
      description : String
      [[ A description of the show. This field may contain HTML tags. ]]
      html_description : String
      [[ Whether or not the show has explicit content (true = yes it does; false = no it does not OR unknown). ]]
      explicit : Boolean
      [[ External URLs for this show. ]]
      external_urls : AnonymousTypeShowBaseExternal_urls
      [[ A link to the Web API endpoint providing full details of the show. ]]
      href : String
      [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the show. ]]
      id : String
      [[ The cover art for the show in various sizes, widest first. ]]
      images : ImageObject[]
      [[ True if all of the shows episodes are hosted outside of Spotify's CDN. This field might be \`null\` in some cases. ]]
      is_externally_hosted : Boolean
      [[ A list of the languages used in the show, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code. ]]
      languages : String[]
      [[ The media type of the show. ]]
      media_type : String
      [[ The name of the episode. ]]
      name : String
      [[ The publisher of the show. ]]
      publisher : String
      [[ The object type. ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the show. ]]
      uri : String
      [[ The total number of episodes in the show. ]]
      total_episodes : Int
   }

   [[ External URLs for this show. ]]
   type AnonymousTypeShowBaseExternal_urls inherits ExternalUrlObject

   model PagingSavedShowObject inherits PagingObject {
      items : SavedShowObject[]
   }

   model SavedShowObject {
      [[ The date and time the show was saved.
      Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ.
      If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, release_date in an album object. ]]
      added_at : DateTime
      [[ Information about the show. ]]
      show : AnonymousTypeSavedShowObjectShow
   }

   [[ Information about the show. ]]
   type AnonymousTypeSavedShowObjectShow inherits SimplifiedShowObject

   model PagingSimplifiedEpisodeObject inherits PagingObject {
      items : SimplifiedEpisodeObject[]
   }

   type SimplifiedEpisodeObject inherits EpisodeBase

   model EpisodeBase {
      [[ A URL to a 30 second preview (MP3 format) of the episode. \`null\` if not available. ]]
      audio_preview_url : String
      [[ A description of the episode. HTML tags are stripped away from this field, use \`html_description\` field in case HTML tags are needed. ]]
      description : String
      [[ A description of the episode. This field may contain HTML tags. ]]
      html_description : String
      [[ The episode length in milliseconds. ]]
      duration_ms : Int
      [[ Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown). ]]
      explicit : Boolean
      [[ External URLs for this episode. ]]
      external_urls : AnonymousTypeEpisodeBaseExternal_urls
      [[ A link to the Web API endpoint providing full details of the episode. ]]
      href : String
      [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the episode. ]]
      id : String
      [[ The cover art for the episode in various sizes, widest first. ]]
      images : ImageObject[]
      [[ True if the episode is hosted outside of Spotify's CDN. ]]
      is_externally_hosted : Boolean
      [[ True if the episode is playable in the given market. Otherwise false. ]]
      is_playable : Boolean
      [[ The language used in the episode, identified by a [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code. This field is deprecated and might be removed in the future. Please use the \`languages\` field instead. ]]
      language : String?
      [[ A list of the languages used in the episode, identified by their [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639) code. ]]
      languages : String[]
      [[ The name of the episode. ]]
      name : String
      [[ The date the episode was first released, for example \`"1981-12-15"\`. Depending on the precision, it might be shown as \`"1981"\` or \`"1981-12"\`. ]]
      release_date : String
      [[ The precision with which \`release_date\` value is known. ]]
      release_date_precision : String
      [[ The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'. ]]
      resume_point : AnonymousTypeEpisodeBaseResume_point
      [[ The object type. ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the episode. ]]
      uri : String
      [[ Included in the response when a content restriction is applied. ]]
      restrictions : AnonymousTypeEpisodeBaseRestrictions?
   }

   [[ External URLs for this episode. ]]
   type AnonymousTypeEpisodeBaseExternal_urls inherits ExternalUrlObject

   [[ The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'. ]]
   type AnonymousTypeEpisodeBaseResume_point inherits ResumePointObject

   model ResumePointObject {
      [[ Whether or not the episode has been fully played by the user. ]]
      fully_played : Boolean
      [[ The user's most recent position in the episode in milliseconds. ]]
      resume_position_ms : Int
   }

   [[ Included in the response when a content restriction is applied. ]]
   type AnonymousTypeEpisodeBaseRestrictions inherits EpisodeRestrictionObject

   model PagingSavedEpisodeObject inherits PagingObject {
      items : SavedEpisodeObject[]
   }

   model SavedEpisodeObject {
      [[ The date and time the episode was saved.
      Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ. ]]
      added_at : DateTime
      [[ Information about the episode. ]]
      episode : AnonymousTypeSavedEpisodeObjectEpisode
   }

   [[ Information about the episode. ]]
   type AnonymousTypeSavedEpisodeObjectEpisode inherits EpisodeObject

   model EpisodeObject inherits EpisodeBase {
      show : SimplifiedShowObject
   }

   model PagingSimplifiedAudiobookObject inherits PagingObject {
      items : SimplifiedAudiobookObject[]
   }

   type SimplifiedAudiobookObject inherits AudiobookBase

   model AudiobookBase {
      [[ The author(s) for the audiobook. ]]
      authors : AuthorObject[]
      [[ A list of the countries in which the audiobook can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code. ]]
      available_markets : String[]
      [[ The copyright statements of the audiobook. ]]
      copyrights : CopyrightObject[]
      [[ A description of the audiobook. HTML tags are stripped away from this field, use \`html_description\` field in case HTML tags are needed. ]]
      description : String
      [[ A description of the audiobook. This field may contain HTML tags. ]]
      html_description : String
      [[ The edition of the audiobook. ]]
      edition : String?
      [[ Whether or not the audiobook has explicit content (true = yes it does; false = no it does not OR unknown). ]]
      explicit : Boolean
      [[ External URLs for this audiobook. ]]
      external_urls : AnonymousTypeAudiobookBaseExternal_urls
      [[ A link to the Web API endpoint providing full details of the audiobook. ]]
      href : String
      [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the audiobook. ]]
      id : String
      [[ The cover art for the audiobook in various sizes, widest first. ]]
      images : ImageObject[]
      [[ A list of the languages used in the audiobook, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code. ]]
      languages : String[]
      [[ The media type of the audiobook. ]]
      media_type : String
      [[ The name of the audiobook. ]]
      name : String
      [[ The narrator(s) for the audiobook. ]]
      narrators : NarratorObject[]
      [[ The publisher of the audiobook. ]]
      publisher : String
      [[ The object type. ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the audiobook. ]]
      uri : String
      [[ The number of chapters in this audiobook. ]]
      total_chapters : Int
   }

   model AuthorObject {
      [[ The name of the author. ]]
      name : String
   }

   [[ External URLs for this audiobook. ]]
   type AnonymousTypeAudiobookBaseExternal_urls inherits ExternalUrlObject

   model NarratorObject {
      [[ The name of the Narrator. ]]
      name : String
   }

   model PagingSimplifiedArtistObject inherits PagingObject {
      items : SimplifiedArtistObject[]
   }

   model PagingArtistObject inherits PagingObject {
      items : ArtistObject[]
   }

   model PagingSimplifiedChapterObject inherits PagingObject {
      items : SimplifiedChapterObject[]
   }

   type SimplifiedChapterObject inherits ChapterBase

   model ChapterBase {
      [[ A URL to a 30 second preview (MP3 format) of the episode. \`null\` if not available. ]]
      audio_preview_url : String
      [[ A list of the countries in which the chapter can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code. ]]
      available_markets : String[]?
      [[ The number of the chapter ]]
      chapter_number : Int
      [[ A description of the episode. HTML tags are stripped away from this field, use \`html_description\` field in case HTML tags are needed. ]]
      description : String
      [[ A description of the episode. This field may contain HTML tags. ]]
      html_description : String
      [[ The episode length in milliseconds. ]]
      duration_ms : Int
      [[ Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown). ]]
      explicit : Boolean
      [[ External URLs for this episode. ]]
      external_urls : AnonymousTypeChapterBaseExternal_urls
      [[ A link to the Web API endpoint providing full details of the episode. ]]
      href : String
      [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the episode. ]]
      id : String
      [[ The cover art for the episode in various sizes, widest first. ]]
      images : ImageObject[]
      [[ True if the episode is playable in the given market. Otherwise false. ]]
      is_playable : Boolean
      [[ A list of the languages used in the episode, identified by their [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639) code. ]]
      languages : String[]
      [[ The name of the episode. ]]
      name : String
      [[ The date the episode was first released, for example \`"1981-12-15"\`. Depending on the precision, it might be shown as \`"1981"\` or \`"1981-12"\`. ]]
      release_date : String
      [[ The precision with which \`release_date\` value is known. ]]
      release_date_precision : String
      [[ The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'. ]]
      resume_point : AnonymousTypeChapterBaseResume_point
      [[ The object type. ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the episode. ]]
      uri : String
      [[ Included in the response when a content restriction is applied. ]]
      restrictions : AnonymousTypeChapterBaseRestrictions?
   }

   [[ External URLs for this episode. ]]
   type AnonymousTypeChapterBaseExternal_urls inherits ExternalUrlObject

   [[ The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope 'user-read-playback-position'. ]]
   type AnonymousTypeChapterBaseResume_point inherits ResumePointObject

   [[ Included in the response when a content restriction is applied. ]]
   type AnonymousTypeChapterBaseRestrictions inherits ChapterRestrictionObject

   model RecommendationsObject {
      [[ An array of recommendation seed objects. ]]
      seeds : RecommendationSeedObject[]
      [[ An array of track object (simplified) ordered according to the parameters supplied. ]]
      tracks : TrackObject[]
   }

   model RecommendationSeedObject {
      [[ The number of tracks available after min\\_\\* and max\\_\\* filters have been applied. ]]
      afterFilteringSize : Int
      [[ The number of tracks available after relinking for regional availability. ]]
      afterRelinkingSize : Int
      [[ A link to the full track or artist data for this seed. For tracks this will be a link to a Track Object. For artists a link to an Artist Object. For genre seeds, this value will be \`null\`. ]]
      href : String
      [[ The id used to select this seed. This will be the same as the string used in the \`seed_artists\`, \`seed_tracks\` or \`seed_genres\` parameter. ]]
      id : String
      [[ The number of recommended tracks available for this seed. ]]
      initialPoolSize : Int
      [[ The entity type of this seed. One of \`artist\`, \`track\` or \`genre\`. ]]
      \`type\` : String
   }

   model TuneableTrackObject {
      [[ A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic. ]]
      acousticness : Decimal
      [[ Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable. ]]
      danceability : Decimal
      [[ The duration of the track in milliseconds. ]]
      duration_ms : Int
      [[ Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy. ]]
      energy : Decimal
      [[ Predicts whether a track contains no vocals. "Ooh" and "aah" sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly "vocal". The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0. ]]
      instrumentalness : Decimal
      key : Key
      [[ Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live. ]]
      liveness : Decimal
      loudness : Loudness
      mode : Mode
      [[ The popularity of the track. The value will be between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are. _**Note**: When applying track relinking via the \`market\` parameter, it is expected to find relinked tracks with popularities that do not match \`min_*\`, \`max_*\`and \`target_*\` popularities. These relinked tracks are accurate replacements for unplayable tracks with the expected popularity scores. Original, non-relinked tracks are available via the \`linked_from\` attribute of the [relinked track response](/documentation/web-api/concepts/track-relinking)._ ]]
      popularity : Decimal
      [[ Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks. ]]
      speechiness : Decimal
      tempo : Tempo
      time_signature : TimeSignature
      [[ A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry). ]]
      valence : Decimal
   }

   model PlaylistObject {
      [[ \`true\` if the owner allows other users to modify the playlist. ]]
      collaborative : Boolean
      [[ The playlist description. _Only returned for modified, verified playlists, otherwise_ \`null\`. ]]
      description : String?
      [[ Known external URLs for this playlist. ]]
      external_urls : AnonymousTypePlaylistObjectExternal_urls
      [[ Information about the followers of the playlist. ]]
      followers : AnonymousTypePlaylistObjectFollowers
      [[ A link to the Web API endpoint providing full details of the playlist. ]]
      href : String
      [[ The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the playlist. ]]
      id : String
      [[ Images for the playlist. The array may be empty or contain up to three images. The images are returned by size in descending order. See [Working with Playlists](/documentation/web-api/concepts/playlists). _**Note**: If returned, the source URL for the image (\`url\`) is temporary and will expire in less than a day._ ]]
      images : ImageObject[]
      [[ The name of the playlist. ]]
      name : String
      [[ The user who owns the playlist ]]
      owner : AnonymousTypePlaylistObjectOwner
      [[ The playlist's public/private status: \`true\` the playlist is public, \`false\` the playlist is private, \`null\` the playlist status is not relevant. For more about public/private status, see [Working with Playlists](/documentation/web-api/concepts/playlists) ]]
      public : Boolean
      [[ The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version ]]
      snapshot_id : String
      [[ The tracks of the playlist. ]]
      tracks : AnonymousTypePlaylistObjectTracks
      [[ The object type: "playlist" ]]
      \`type\` : String
      [[ The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the playlist. ]]
      uri : String
   }

   [[ Known external URLs for this playlist. ]]
   type AnonymousTypePlaylistObjectExternal_urls inherits ExternalUrlObject

   [[ Information about the followers of the playlist. ]]
   type AnonymousTypePlaylistObjectFollowers inherits FollowersObject

   [[ The user who owns the playlist ]]
   type AnonymousTypePlaylistObjectOwner inherits PlaylistOwnerObject

   [[ The tracks of the playlist. ]]
   type AnonymousTypePlaylistObjectTracks inherits PagingPlaylistTrackObject

   model CategoryObject {
      [[ A link to the Web API endpoint returning full details of the category. ]]
      href : String
      [[ The category icon, in various sizes. ]]
      icons : ImageObject[]
      [[ The [Spotify category ID](/documentation/web-api/concepts/spotify-uris-ids) of the category. ]]
      id : String
      [[ The name of the category. ]]
      name : String
   }

   model ShowObject inherits ShowBase {
      [[ The episodes of the show. ]]
      episodes : AnonymousTypeShowObjectEpisodes
   }

   [[ The episodes of the show. ]]
   type AnonymousTypeShowObjectEpisodes inherits PagingSimplifiedEpisodeObject

   model AudiobookObject inherits AudiobookBase {
      [[ The chapters of the audiobook. ]]
      chapters : AnonymousTypeAudiobookObjectChapters
   }

   [[ The chapters of the audiobook. ]]
   type AnonymousTypeAudiobookObjectChapters inherits PagingSimplifiedChapterObject

   model ChapterObject inherits ChapterBase {
      audiobook : SimplifiedAudiobookObject
   }

   model AnonymousTypeGet_multiple_albums {
      albums : AlbumObject[]
   }

   model AnonymousTypeGet_multiple_artists {
      artists : ArtistObject[]
   }

   model AnonymousTypeGet_an_artists_top_tracks {
      tracks : TrackObject[]
   }

   model AnonymousTypeGet_an_artists_related_artists {
      artists : ArtistObject[]
   }

   model AnonymousTypeGet_multiple_shows {
      shows : SimplifiedShowObject[]
   }

   model AnonymousTypeGet_multiple_episodes {
      episodes : EpisodeObject[]
   }

   model AnonymousTypeGet_multiple_audiobooks {
      audiobooks : AudiobookObject[]
   }

   model AnonymousTypeGet_several_chapters {
      chapters : ChapterObject[]
   }

   model AnonymousTypeGet_several_tracks {
      tracks : TrackObject[]
   }

   model AnonymousTypeSearch {
      tracks : PagingTrackObject
      artists : PagingArtistObject
      albums : PagingSimplifiedAlbumObject
      playlists : PagingPlaylistObject
      shows : PagingSimplifiedShowObject
      episodes : PagingSimplifiedEpisodeObject
      audiobooks : PagingSimplifiedAudiobookObject
   }

   model AnonymousTypeChange_playlist_detailsBody {
      [[ The new name for the playlist, for example \`"My New Playlist Title"\` ]]
      name : String
      [[ If \`true\` the playlist will be public, if \`false\` it will be private. ]]
      public : Boolean
      [[ If \`true\`, the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client. <br/>
      _**Note**: You can only set \`collaborative\` to \`true\` on non-public playlists._ ]]
      collaborative : Boolean
      [[ Value for playlist description as displayed in Spotify Clients and in the Web API. ]]
      description : String
   }

   model AnonymousTypeReorder_or_replace_playlists_tracksBody {
      uris : String[]
      [[ The position of the first item to be reordered. ]]
      range_start : Int
      [[ The position where the items should be inserted.<br/>To reorder the items to the end of the playlist, simply set _insert_before_ to the position after the last item.<br/>Examples:<br/>To reorder the first item to the last position in a playlist with 10 items, set _range_start_ to 0, and _insert_before_ to 10.<br/>To reorder the last item in a playlist with 10 items to the start of the playlist, set _range_start_ to 9, and _insert_before_ to 0. ]]
      insert_before : Int
      [[ The amount of items to be reordered. Defaults to 1 if not set.<br/>The range of items to be reordered begins from the _range_start_ position, and includes the _range_length_ subsequent items.<br/>Example:<br/>To move the items at index 9-10 to the start of the playlist, _range_start_ is set to 9, and _range_length_ is set to 2. ]]
      range_length : Int
      [[ The playlist's snapshot ID against which you want to make the changes. ]]
      snapshot_id : String
   }

   model AnonymousTypeReorder_or_replace_playlists_tracks {
      snapshot_id : String
   }

   model AnonymousTypeAdd_tracks_to_playlistBody {
      [[ A JSON array of the [Spotify URIs](/documentation/web-api/concepts/spotify-uris-ids) to add. For example: \`{"uris": ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh","spotify:track:1301WleyT98MSxVHPZCA6M", "spotify:episode:512ojhOuo1ktJprKbVcKyQ"]}\`<br/>A maximum of 100 items can be added in one request. _**Note**: if the \`uris\` parameter is present in the query string, any URIs listed here in the body will be ignored._ ]]
      uris : String[]
      [[ The position to insert the items, a zero-based index. For example, to insert the items in the first position: \`position=0\` ; to insert the items in the third position: \`position=2\`. If omitted, the items will be appended to the playlist. Items are added in the order they appear in the uris array. For example: \`{"uris": ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh","spotify:track:1301WleyT98MSxVHPZCA6M"], "position": 3}\` ]]
      position : Int
   }

   model AnonymousTypeAdd_tracks_to_playlist {
      snapshot_id : String
   }

   model AnonymousTypeRemove_tracks_playlistBody {
      [[ An array of objects containing [Spotify URIs](/documentation/web-api/concepts/spotify-uris-ids) of the tracks or episodes to remove.
      For example: \`{ "tracks": [{ "uri": "spotify:track:4iV5W9uYEdYUVa79Axb7Rh" },{ "uri": "spotify:track:1301WleyT98MSxVHPZCA6M" }] }\`. A maximum of 100 objects can be sent at once. ]]
      tracks : AnonymousTypeRemove_tracks_playlistBodyTracksElement[]
      [[ The playlist's snapshot ID against which you want to make the changes.
      The API will validate that the specified items exist and in the specified positions and make the changes,
      even if more recent changes have been made to the playlist. ]]
      snapshot_id : String?
   }

   model AnonymousTypeRemove_tracks_playlistBodyTracksElement {
      [[ Spotify URI ]]
      uri : String
   }

   model AnonymousTypeRemove_tracks_playlist {
      snapshot_id : String
   }

   model AnonymousTypeSave_albums_userBody {
      [[ A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: \`["4iV5W9uYEdYUVa79Axb7Rh", "1301WleyT98MSxVHPZCA6M"]\`<br/>A maximum of 50 items can be specified in one request. _**Note**: if the \`ids\` parameter is present in the query string, any IDs listed here in the body will be ignored._ ]]
      ids : String[]
   }

   model AnonymousTypeRemove_albums_userBody {
      [[ A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: \`["4iV5W9uYEdYUVa79Axb7Rh", "1301WleyT98MSxVHPZCA6M"]\`<br/>A maximum of 50 items can be specified in one request. _**Note**: if the \`ids\` parameter is present in the query string, any IDs listed here in the body will be ignored._ ]]
      ids : String[]
   }

   model AnonymousTypeSave_tracks_userBody {
      [[ A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: \`["4iV5W9uYEdYUVa79Axb7Rh", "1301WleyT98MSxVHPZCA6M"]\`<br/>A maximum of 50 items can be specified in one request. _**Note**: if the \`ids\` parameter is present in the query string, any IDs listed here in the body will be ignored._ ]]
      ids : String[]?
   }

   model AnonymousTypeRemove_tracks_userBody {
      [[ A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: \`["4iV5W9uYEdYUVa79Axb7Rh", "1301WleyT98MSxVHPZCA6M"]\`<br/>A maximum of 50 items can be specified in one request. _**Note**: if the \`ids\` parameter is present in the query string, any IDs listed here in the body will be ignored._ ]]
      ids : String[]
   }

   model AnonymousTypeSave_episodes_userBody {
      [[ A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). <br/>A maximum of 50 items can be specified in one request. _**Note**: if the \`ids\` parameter is present in the query string, any IDs listed here in the body will be ignored._ ]]
      ids : String[]?
   }

   model AnonymousTypeRemove_episodes_userBody {
      [[ A JSON array of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). <br/>A maximum of 50 items can be specified in one request. _**Note**: if the \`ids\` parameter is present in the query string, any IDs listed here in the body will be ignored._ ]]
      ids : String[]
   }

   model AnonymousTypeGet_users_top_artists_and_tracks inherits PagingObject {
      items : Any[]
   }

   model AnonymousTypeCreate_playlistBody {
      [[ The name for the new playlist, for example \`"Your Coolest Playlist"\`. This name does not need to be unique; a user may have several playlists with the same name. ]]
      name : String
      [[ Defaults to \`true\`. If \`true\` the playlist will be public, if \`false\` it will be private. To be able to create private playlists, the user must have granted the \`playlist-modify-private\` [scope](/documentation/web-api/concepts/scopes/#list-of-scopes) ]]
      public : Boolean?
      [[ Defaults to \`false\`. If \`true\` the playlist will be collaborative. _**Note**: to create a collaborative playlist you must also set \`public\` to \`false\`. To create collaborative playlists you must have granted \`playlist-modify-private\` and \`playlist-modify-public\` [scopes](/documentation/web-api/concepts/scopes/#list-of-scopes)._ ]]
      collaborative : Boolean?
      [[ value for playlist description as displayed in Spotify Clients and in the Web API. ]]
      description : String?
   }

   model AnonymousTypeFollow_playlistBody {
      [[ Defaults to \`true\`. If \`true\` the playlist will be included in user's public playlists, if \`false\` it will remain private. ]]
      public : Boolean
   }

   model AnonymousTypeGet_categories {
      categories : PagingObject
   }

   type byte inherits String

   model AnonymousTypeGet_new_releases {
      albums : PagingSimplifiedAlbumObject
   }

   model AnonymousTypeGet_followed {
      artists : CursorPagingSimplifiedArtistObject
   }

   model AnonymousTypeFollow_artists_usersBody {
      [[ A JSON array of the artist or user [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids).
      For example: \`{ids:["74ASZWbe4lXaubB36ztrGX", "08td7MxkoHQkXnWAYD8d6Q"]}\`. A maximum of 50 IDs can be sent in one request. _**Note**: if the \`ids\` parameter is present in the query string, any IDs listed here in the body will be ignored._ ]]
      ids : String[]
   }

   model AnonymousTypeUnfollow_artists_usersBody {
      [[ A JSON array of the artist or user [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids). For example: \`{ids:["74ASZWbe4lXaubB36ztrGX", "08td7MxkoHQkXnWAYD8d6Q"]}\`. A maximum of 50 IDs can be sent in one request. _**Note**: if the \`ids\` parameter is present in the query string, any IDs listed here in the body will be ignored._ ]]
      ids : String[]
   }

   model AnonymousTypeGet_several_audio_features {
      audio_features : AudioFeaturesObject[]
   }

   model AnonymousTypeGet_recommendation_genres {
      genres : String[]
   }

   model AnonymousTypeTransfer_a_users_playbackBody {
      [[ A JSON array containing the ID of the device on which playback should be started/transferred.<br/>For example:\`{device_ids:["74ASZWbe4lXaubB36ztrGX"]}\`<br/>_**Note**: Although an array is accepted, only a single device_id is currently supported. Supplying more than one will return \`400 Bad Request\`_ ]]
      device_ids : String[]
      [[ **true**: ensure playback happens on new device.<br/>**false** or not provided: keep the current playback state. ]]
      play : Any?
   }

   model AnonymousTypeGet_a_users_available_devices {
      devices : DeviceObject[]
   }

   model AnonymousTypeStart_a_users_playbackBody {
      [[ Optional. Spotify URI of the context to play.
      Valid contexts are albums, artists & playlists.
      \`{context_uri:"spotify:album:1Je1IMUlBXcx1Fz0WE7oPT"}\` ]]
      context_uri : Any
      [[ Optional. A JSON array of the Spotify track URIs to play.
      For example: \`{"uris": ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh", "spotify:track:1301WleyT98MSxVHPZCA6M"]}\` ]]
      uris : String[]
      [[ Optional. Indicates from where in the context playback should start. Only available when context_uri corresponds to an album or playlist object
      "position" is zero based and can’t be negative. Example: \`"offset": {"position": 5}\`
      "uri" is a string representing the uri of the item to start at. Example: \`"offset": {"uri": "spotify:track:1301WleyT98MSxVHPZCA6M"}\` ]]
      offset : Any
      [[ integer ]]
      position_ms : Any
   }

   model AnonymousTypeGet_available_markets {
      markets : String[]
   }

   service AlbumsIdService {
      [[ Get Spotify catalog information for a single album. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/albums/{id}")
      operation get_an_album( @PathVariable(value = "id") id : String,  market : String ) : AlbumObject
   }
   service AlbumsService {
      [[ Get Spotify catalog information for multiple albums identified by their Spotify IDs. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/albums")
      operation get_multiple_albums(  ids : String,  market : String ) : AnonymousTypeGet_multiple_albums
   }
   service AlbumsIdTracksService {
      [[ Get Spotify catalog information about an album’s tracks.
      Optional parameters can be used to limit the number of tracks returned. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/albums/{id}/tracks")
      operation get_an_albums_tracks( @PathVariable(value = "id") id : String,  market : String,  limit : Int,  offset : Int ) : PagingSimplifiedTrackObject
   }
   service ArtistsIdService {
      [[ Get Spotify catalog information for a single artist identified by their unique Spotify ID. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/artists/{id}")
      operation get_an_artist( @PathVariable(value = "id") id : String ) : ArtistObject
   }
   service ArtistsService {
      [[ Get Spotify catalog information for several artists based on their Spotify IDs. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/artists")
      operation get_multiple_artists(  ids : String ) : AnonymousTypeGet_multiple_artists
   }
   service ArtistsIdAlbumsService {
      [[ Get Spotify catalog information about an artist's albums. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/artists/{id}/albums")
      operation get_an_artists_albums( @PathVariable(value = "id") id : String,  include_groups : String,  market : String,  limit : Int,  offset : Int ) : PagingSimplifiedAlbumObject
   }
   service ArtistsIdTop_tracksService {
      [[ Get Spotify catalog information about an artist's top tracks by country. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/artists/{id}/top-tracks")
      operation get_an_artists_top_tracks( @PathVariable(value = "id") id : String,  market : String ) : AnonymousTypeGet_an_artists_top_tracks
   }
   service ArtistsIdRelated_artistsService {
      [[ Get Spotify catalog information about artists similar to a given artist. Similarity is based on analysis of the Spotify community's listening history. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/artists/{id}/related-artists")
      operation get_an_artists_related_artists( @PathVariable(value = "id") id : String ) : AnonymousTypeGet_an_artists_related_artists
   }
   service ShowsIdService {
      [[ Get Spotify catalog information for a single show identified by its
      unique Spotify ID. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/shows/{id}")
      operation get_a_show(  market : String, @PathVariable(value = "id") id : String ) : ShowObject
   }
   service ShowsService {
      [[ Get Spotify catalog information for several shows based on their Spotify IDs. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/shows")
      operation get_multiple_shows(  market : String,  ids : String ) : AnonymousTypeGet_multiple_shows
   }
   service ShowsIdEpisodesService {
      [[ Get Spotify catalog information about an show’s episodes. Optional parameters can be used to limit the number of episodes returned. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/shows/{id}/episodes")
      operation get_a_shows_episodes( @PathVariable(value = "id") id : String,  market : String,  limit : Int,  offset : Int ) : PagingSimplifiedEpisodeObject
   }
   service EpisodesIdService {
      [[ Get Spotify catalog information for a single episode identified by its
      unique Spotify ID. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/episodes/{id}")
      operation get_an_episode( @PathVariable(value = "id") id : String,  market : String ) : EpisodeObject
   }
   service EpisodesService {
      [[ Get Spotify catalog information for several episodes based on their Spotify IDs. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/episodes")
      operation get_multiple_episodes(  ids : String,  market : String ) : AnonymousTypeGet_multiple_episodes
   }
   service AudiobooksIdService {
      [[ Get Spotify catalog information for a single audiobook.<br />
      **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.** ]]
      @HttpOperation(method = "GET" , url = "http://myjira/audiobooks/{id}")
      operation get_an_audiobook( @PathVariable(value = "id") id : String,  market : String ) : AudiobookObject
   }
   service AudiobooksService {
      [[ Get Spotify catalog information for several audiobooks identified by their Spotify IDs.<br />
      **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.** ]]
      @HttpOperation(method = "GET" , url = "http://myjira/audiobooks")
      operation get_multiple_audiobooks(  ids : String,  market : String ) : AnonymousTypeGet_multiple_audiobooks
   }
   service AudiobooksIdChaptersService {
      [[ Get Spotify catalog information about an audiobook's chapters.<br />
      **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.** ]]
      @HttpOperation(method = "GET" , url = "http://myjira/audiobooks/{id}/chapters")
      operation get_audiobook_chapters( @PathVariable(value = "id") id : String,  market : String,  limit : Int,  offset : Int ) : PagingSimplifiedChapterObject
   }
   service MeAudiobooksService {
      [[ Get a list of the audiobooks saved in the current Spotify user's 'Your Music' library. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/audiobooks")
      operation get_users_saved_audiobooks(  limit : Int,  offset : Int ) : PagingSimplifiedAudiobookObject
      [[ Save one or more audiobooks to the current Spotify user's library. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/audiobooks")
      operation save_audiobooks_user(  ids : String )
      [[ Remove one or more audiobooks from the Spotify user's library. ]]
      @HttpOperation(method = "DELETE" , url = "http://myjira/me/audiobooks")
      operation remove_audiobooks_user(  ids : String )
   }
   service MeAudiobooksContainsService {
      [[ Check if one or more audiobooks are already saved in the current Spotify user's library. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/audiobooks/contains")
      operation check_users_saved_audiobooks(  ids : String ) : Boolean[]
   }
   service ChaptersIdService {
      [[ Get Spotify catalog information for a single chapter.<br />
      **Note: Chapters are only available for the US, UK, Ireland, New Zealand and Australia markets.** ]]
      @HttpOperation(method = "GET" , url = "http://myjira/chapters/{id}")
      operation get_a_chapter( @PathVariable(value = "id") id : String,  market : String ) : ChapterObject
   }
   service ChaptersService {
      [[ Get Spotify catalog information for several chapters identified by their Spotify IDs.<br />
      **Note: Chapters are only available for the US, UK, Ireland, New Zealand and Australia markets.** ]]
      @HttpOperation(method = "GET" , url = "http://myjira/chapters")
      operation get_several_chapters(  ids : String,  market : String ) : AnonymousTypeGet_several_chapters
   }
   service TracksIdService {
      [[ Get Spotify catalog information for a single track identified by its
      unique Spotify ID. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/tracks/{id}")
      operation get_track( @PathVariable(value = "id") id : String,  market : String ) : TrackObject
   }
   service TracksService {
      [[ Get Spotify catalog information for multiple tracks based on their Spotify IDs. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/tracks")
      operation get_several_tracks(  market : String,  ids : String ) : AnonymousTypeGet_several_tracks
   }
   service SearchService {
      [[ Get Spotify catalog information about albums, artists, playlists, tracks, shows, episodes or audiobooks
      that match a keyword string.<br />
      **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.** ]]
      @HttpOperation(method = "GET" , url = "http://myjira/search")
      operation search(  \`q\` : String,  \`type\` : String[],  market : String,  limit : Int,  offset : Int,  include_external : String ) : AnonymousTypeSearch
   }
   service MeService {
      [[ Get detailed profile information about the current user (including the
      current user's username). ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me")
      operation get_current_users_profile(  ) : PrivateUserObject
   }
   service PlaylistsPlaylist_idService {
      [[ Get a playlist owned by a Spotify user. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/playlists/{playlist_id}")
      operation get_playlist( @PathVariable(value = "playlist_id") playlist_id : String,  market : String,  fields : String,  additional_types : String ) : PlaylistObject
      [[ Change a playlist's name and public/private state. (The user must, of
      course, own the playlist.) ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/playlists/{playlist_id}")
      operation change_playlist_details( @PathVariable(value = "playlist_id") playlist_id : String, @RequestBody anonymousTypeChange_playlist_detailsBody : AnonymousTypeChange_playlist_detailsBody )
   }
   service PlaylistsPlaylist_idTracksService {
      [[ Get full details of the items of a playlist owned by a Spotify user. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/playlists/{playlist_id}/tracks")
      operation get_playlists_tracks( @PathVariable(value = "playlist_id") playlist_id : String,  market : String,  fields : String,  limit : Int,  offset : Int,  additional_types : String ) : PagingPlaylistTrackObject
      [[ Either reorder or replace items in a playlist depending on the request's parameters.
      To reorder items, include \`range_start\`, \`insert_before\`, \`range_length\` and \`snapshot_id\` in the request's body.
      To replace items, include \`uris\` as either a query parameter or in the request's body.
      Replacing items in a playlist will overwrite its existing items. This operation can be used for replacing or clearing items in a playlist.
      <br/>
      **Note**: Replace and reorder are mutually exclusive operations which share the same endpoint, but have different parameters.
      These operations can't be applied together in a single request. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/playlists/{playlist_id}/tracks")
      operation reorder_or_replace_playlists_tracks( @PathVariable(value = "playlist_id") playlist_id : String,  uris : String, @RequestBody anonymousTypeReorder_or_replace_playlists_tracksBody : AnonymousTypeReorder_or_replace_playlists_tracksBody ) : AnonymousTypeReorder_or_replace_playlists_tracks
      [[ Add one or more items to a user's playlist. ]]
      @HttpOperation(method = "POST" , url = "http://myjira/playlists/{playlist_id}/tracks")
      operation add_tracks_to_playlist( @PathVariable(value = "playlist_id") playlist_id : String,  position : Int,  uris : String, @RequestBody anonymousTypeAdd_tracks_to_playlistBody : AnonymousTypeAdd_tracks_to_playlistBody ) : AnonymousTypeAdd_tracks_to_playlist
      [[ Remove one or more items from a user's playlist. ]]
      @HttpOperation(method = "DELETE" , url = "http://myjira/playlists/{playlist_id}/tracks")
      operation remove_tracks_playlist( @PathVariable(value = "playlist_id") playlist_id : String, @RequestBody anonymousTypeRemove_tracks_playlistBody : AnonymousTypeRemove_tracks_playlistBody ) : AnonymousTypeRemove_tracks_playlist
   }
   service MePlaylistsService {
      [[ Get a list of the playlists owned or followed by the current Spotify
      user. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/playlists")
      operation get_a_list_of_current_users_playlists(  limit : Int,  offset : Int ) : PagingPlaylistObject
   }
   service MeAlbumsService {
      [[ Get a list of the albums saved in the current Spotify user's 'Your Music' library. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/albums")
      operation get_users_saved_albums(  limit : Int,  offset : Int,  market : String ) : PagingSavedAlbumObject
      [[ Save one or more albums to the current user's 'Your Music' library. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/albums")
      operation save_albums_user(  ids : String, @RequestBody anonymousTypeSave_albums_userBody : AnonymousTypeSave_albums_userBody )
      [[ Remove one or more albums from the current user's 'Your Music' library. ]]
      @HttpOperation(method = "DELETE" , url = "http://myjira/me/albums")
      operation remove_albums_user(  ids : String, @RequestBody anonymousTypeRemove_albums_userBody : AnonymousTypeRemove_albums_userBody )
   }
   service MeAlbumsContainsService {
      [[ Check if one or more albums is already saved in the current Spotify user's 'Your Music' library. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/albums/contains")
      operation check_users_saved_albums(  ids : String ) : Boolean[]
   }
   service MeTracksService {
      [[ Get a list of the songs saved in the current Spotify user's 'Your Music' library. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/tracks")
      operation get_users_saved_tracks(  market : String,  limit : Int,  offset : Int ) : PagingSavedTrackObject
      [[ Save one or more tracks to the current user's 'Your Music' library. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/tracks")
      operation save_tracks_user(  ids : String, @RequestBody anonymousTypeSave_tracks_userBody : AnonymousTypeSave_tracks_userBody )
      [[ Remove one or more tracks from the current user's 'Your Music' library. ]]
      @HttpOperation(method = "DELETE" , url = "http://myjira/me/tracks")
      operation remove_tracks_user(  ids : String, @RequestBody anonymousTypeRemove_tracks_userBody : AnonymousTypeRemove_tracks_userBody )
   }
   service MeTracksContainsService {
      [[ Check if one or more tracks is already saved in the current Spotify user's 'Your Music' library. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/tracks/contains")
      operation check_users_saved_tracks(  ids : String ) : Boolean[]
   }
   service MeEpisodesService {
      [[ Get a list of the episodes saved in the current Spotify user's library.<br/>
      This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer). ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/episodes")
      operation get_users_saved_episodes(  market : String,  limit : Int,  offset : Int ) : PagingSavedEpisodeObject
      [[ Save one or more episodes to the current user's library.<br/>
      This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer). ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/episodes")
      operation save_episodes_user(  ids : String, @RequestBody anonymousTypeSave_episodes_userBody : AnonymousTypeSave_episodes_userBody )
      [[ Remove one or more episodes from the current user's library.<br/>
      This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer). ]]
      @HttpOperation(method = "DELETE" , url = "http://myjira/me/episodes")
      operation remove_episodes_user(  ids : String, @RequestBody anonymousTypeRemove_episodes_userBody : AnonymousTypeRemove_episodes_userBody )
   }
   service MeEpisodesContainsService {
      [[ Check if one or more episodes is already saved in the current Spotify user's 'Your Episodes' library.<br/>
      This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/episodes/contains")
      operation check_users_saved_episodes(  ids : String ) : Boolean[]
   }
   service MeShowsService {
      [[ Get a list of shows saved in the current Spotify user's library. Optional parameters can be used to limit the number of shows returned. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/shows")
      operation get_users_saved_shows(  limit : Int,  offset : Int ) : PagingSavedShowObject
      [[ Save one or more shows to current Spotify user's library. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/shows")
      operation save_shows_user(  ids : String )
      [[ Delete one or more shows from current Spotify user's library. ]]
      @HttpOperation(method = "DELETE" , url = "http://myjira/me/shows")
      operation remove_shows_user(  ids : String,  market : String )
   }
   service MeShowsContainsService {
      [[ Check if one or more shows is already saved in the current Spotify user's library. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/shows/contains")
      operation check_users_saved_shows(  ids : String ) : Boolean[]
   }
   service MeTopTypeService {
      [[ Get the current user's top artists or tracks based on calculated affinity. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/top/{type}")
      operation get_users_top_artists_and_tracks( @PathVariable(value = "type") \`type\` : String,  time_range : String,  limit : Int,  offset : Int ) : AnonymousTypeGet_users_top_artists_and_tracks
   }
   service UsersUser_idService {
      [[ Get public profile information about a Spotify user. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/users/{user_id}")
      operation get_users_profile( @PathVariable(value = "user_id") user_id : String ) : PublicUserObject
   }
   service UsersUser_idPlaylistsService {
      [[ Get a list of the playlists owned or followed by a Spotify user. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/users/{user_id}/playlists")
      operation get_list_users_playlists( @PathVariable(value = "user_id") user_id : String,  limit : Int,  offset : Int ) : PagingPlaylistObject
      [[ Create a playlist for a Spotify user. (The playlist will be empty until
      you [add tracks](/documentation/web-api/reference/add-tracks-to-playlist).) ]]
      @HttpOperation(method = "POST" , url = "http://myjira/users/{user_id}/playlists")
      operation create_playlist( @PathVariable(value = "user_id") user_id : String, @RequestBody anonymousTypeCreate_playlistBody : AnonymousTypeCreate_playlistBody ) : PlaylistObject
   }
   service PlaylistsPlaylist_idFollowersService {
      [[ Add the current user as a follower of a playlist. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/playlists/{playlist_id}/followers")
      operation follow_playlist( @PathVariable(value = "playlist_id") playlist_id : String, @RequestBody anonymousTypeFollow_playlistBody : AnonymousTypeFollow_playlistBody )
      [[ Remove the current user as a follower of a playlist. ]]
      @HttpOperation(method = "DELETE" , url = "http://myjira/playlists/{playlist_id}/followers")
      operation unfollow_playlist( @PathVariable(value = "playlist_id") playlist_id : String )
   }
   service BrowseFeatured_playlistsService {
      [[ Get a list of Spotify featured playlists (shown, for example, on a Spotify player's 'Browse' tab). ]]
      @HttpOperation(method = "GET" , url = "http://myjira/browse/featured-playlists")
      operation get_featured_playlists(  country : String,  locale : String,  timestamp : String,  limit : Int,  offset : Int ) : PagingFeaturedPlaylistObject
   }
   service BrowseCategoriesService {
      [[ Get a list of categories used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab). ]]
      @HttpOperation(method = "GET" , url = "http://myjira/browse/categories")
      operation get_categories(  country : String,  locale : String,  limit : Int,  offset : Int ) : AnonymousTypeGet_categories
   }
   service BrowseCategoriesCategory_idService {
      [[ Get a single category used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab). ]]
      @HttpOperation(method = "GET" , url = "http://myjira/browse/categories/{category_id}")
      operation get_a_category( @PathVariable(value = "category_id") category_id : String,  country : String,  locale : String ) : CategoryObject
   }
   service BrowseCategoriesCategory_idPlaylistsService {
      [[ Get a list of Spotify playlists tagged with a particular category. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/browse/categories/{category_id}/playlists")
      operation get_a_categories_playlists( @PathVariable(value = "category_id") category_id : String,  country : String,  limit : Int,  offset : Int ) : PagingFeaturedPlaylistObject
   }
   service PlaylistsPlaylist_idImagesService {
      [[ Get the current image associated with a specific playlist. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/playlists/{playlist_id}/images")
      operation get_playlist_cover( @PathVariable(value = "playlist_id") playlist_id : String ) : ImageObject[]
      [[ Replace the image used to represent a specific playlist. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/playlists/{playlist_id}/images")
      operation upload_custom_playlist_cover( @PathVariable(value = "playlist_id") playlist_id : String, @RequestBody byte : byte )
   }
   service BrowseNew_releasesService {
      [[ Get a list of new album releases featured in Spotify (shown, for example, on a Spotify player’s “Browse” tab). ]]
      @HttpOperation(method = "GET" , url = "http://myjira/browse/new-releases")
      operation get_new_releases(  country : String,  limit : Int,  offset : Int ) : AnonymousTypeGet_new_releases
   }
   service MeFollowingService {
      [[ Get the current user's followed artists. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/following")
      operation get_followed(  \`type\` : String,  after : String,  limit : Int ) : AnonymousTypeGet_followed
      [[ Add the current user as a follower of one or more artists or other Spotify users. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/following")
      operation follow_artists_users(  \`type\` : String,  ids : String, @RequestBody anonymousTypeFollow_artists_usersBody : AnonymousTypeFollow_artists_usersBody )
      [[ Remove the current user as a follower of one or more artists or other Spotify users. ]]
      @HttpOperation(method = "DELETE" , url = "http://myjira/me/following")
      operation unfollow_artists_users(  \`type\` : String,  ids : String, @RequestBody anonymousTypeUnfollow_artists_usersBody : AnonymousTypeUnfollow_artists_usersBody )
   }
   service MeFollowingContainsService {
      [[ Check to see if the current user is following one or more artists or other Spotify users. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/following/contains")
      operation check_current_user_follows(  \`type\` : String,  ids : String ) : Boolean[]
   }
   service PlaylistsPlaylist_idFollowersContainsService {
      [[ Check to see if one or more Spotify users are following a specified playlist. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/playlists/{playlist_id}/followers/contains")
      operation check_if_user_follows_playlist( @PathVariable(value = "playlist_id") playlist_id : String,  ids : String ) : Boolean[]
   }
   service Audio_featuresService {
      [[ Get audio features for multiple tracks based on their Spotify IDs. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/audio-features")
      operation get_several_audio_features(  ids : String ) : AnonymousTypeGet_several_audio_features
   }
   service Audio_featuresIdService {
      [[ Get audio feature information for a single track identified by its unique
      Spotify ID. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/audio-features/{id}")
      operation get_audio_features( @PathVariable(value = "id") id : String ) : AudioFeaturesObject
   }
   service Audio_analysisIdService {
      [[ Get a low-level audio analysis for a track in the Spotify catalog. The audio analysis describes the track’s structure and musical content, including rhythm, pitch, and timbre. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/audio-analysis/{id}")
      operation get_audio_analysis( @PathVariable(value = "id") id : String ) : AudioAnalysisObject
   }
   service RecommendationsService {
      [[ Recommendations are generated based on the available information for a given seed entity and matched against similar artists and tracks. If there is sufficient information about the provided seeds, a list of tracks will be returned together with pool size details.
      For artists and tracks that are very new or obscure there might not be enough data to generate a list of tracks. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/recommendations")
      operation get_recommendations(  limit : Int,  market : String,  seed_artists : String,  seed_genres : String,  seed_tracks : String,  min_acousticness : Decimal,  max_acousticness : Decimal,  target_acousticness : Decimal,  min_danceability : Decimal,  max_danceability : Decimal,  target_danceability : Decimal,  min_duration_ms : Int,  max_duration_ms : Int,  target_duration_ms : Int,  min_energy : Decimal,  max_energy : Decimal,  target_energy : Decimal,  min_instrumentalness : Decimal,  max_instrumentalness : Decimal,  target_instrumentalness : Decimal,  min_key : Int,  max_key : Int,  target_key : Int,  min_liveness : Decimal,  max_liveness : Decimal,  target_liveness : Decimal,  min_loudness : Decimal,  max_loudness : Decimal,  target_loudness : Decimal,  min_mode : Int,  max_mode : Int,  target_mode : Int,  min_popularity : Int,  max_popularity : Int,  target_popularity : Int,  min_speechiness : Decimal,  max_speechiness : Decimal,  target_speechiness : Decimal,  min_tempo : Decimal,  max_tempo : Decimal,  target_tempo : Decimal,  min_time_signature : Int,  max_time_signature : Int,  target_time_signature : Int,  min_valence : Decimal,  max_valence : Decimal,  target_valence : Decimal ) : RecommendationsObject
   }
   service RecommendationsAvailable_genre_seedsService {
      [[ Retrieve a list of available genres seed parameter values for [recommendations](/documentation/web-api/reference/get-recommendations). ]]
      @HttpOperation(method = "GET" , url = "http://myjira/recommendations/available-genre-seeds")
      operation get_recommendation_genres(  ) : AnonymousTypeGet_recommendation_genres
   }
   service MePlayerService {
      [[ Get information about the user’s current playback state, including track or episode, progress, and active device. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/player")
      operation get_information_about_the_users_current_playback(  market : String,  additional_types : String ) : CurrentlyPlayingContextObject
      [[ Transfer playback to a new device and determine if it should start playing. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/player")
      operation transfer_a_users_playback( @RequestBody anonymousTypeTransfer_a_users_playbackBody : AnonymousTypeTransfer_a_users_playbackBody )
   }
   service MePlayerDevicesService {
      [[ Get information about a user’s available devices. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/player/devices")
      operation get_a_users_available_devices(  ) : AnonymousTypeGet_a_users_available_devices
   }
   service MePlayerCurrently_playingService {
      [[ Get the object currently being played on the user's Spotify account. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/player/currently-playing")
      operation get_the_users_currently_playing_track(  market : String,  additional_types : String ) : CurrentlyPlayingContextObject
   }
   service MePlayerPlayService {
      [[ Start a new context or resume current playback on the user's active device. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/player/play")
      operation start_a_users_playback(  device_id : String, @RequestBody anonymousTypeStart_a_users_playbackBody : AnonymousTypeStart_a_users_playbackBody )
   }
   service MePlayerPauseService {
      [[ Pause playback on the user's account. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/player/pause")
      operation pause_a_users_playback(  device_id : String )
   }
   service MePlayerNextService {
      [[ Skips to next track in the user’s queue. ]]
      @HttpOperation(method = "POST" , url = "http://myjira/me/player/next")
      operation skip_users_playback_to_next_track(  device_id : String )
   }
   service MePlayerPreviousService {
      [[ Skips to previous track in the user’s queue. ]]
      @HttpOperation(method = "POST" , url = "http://myjira/me/player/previous")
      operation skip_users_playback_to_previous_track(  device_id : String )
   }
   service MePlayerSeekService {
      [[ Seeks to the given position in the user’s currently playing track. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/player/seek")
      operation seek_to_position_in_currently_playing_track(  position_ms : Int,  device_id : String )
   }
   service MePlayerRepeatService {
      [[ Set the repeat mode for the user's playback. Options are repeat-track,
      repeat-context, and off. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/player/repeat")
      operation set_repeat_mode_on_users_playback(  state : String,  device_id : String )
   }
   service MePlayerVolumeService {
      [[ Set the volume for the user’s current playback device. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/player/volume")
      operation set_volume_for_users_playback(  volume_percent : Int,  device_id : String )
   }
   service MePlayerShuffleService {
      [[ Toggle shuffle on or off for user’s playback. ]]
      @HttpOperation(method = "PUT" , url = "http://myjira/me/player/shuffle")
      operation toggle_shuffle_for_users_playback(  state : Boolean,  device_id : String )
   }
   service MePlayerRecently_playedService {
      [[ Get tracks from the current user's recently played tracks.
      _**Note**: Currently doesn't support podcast episodes._ ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/player/recently-played")
      operation get_recently_played(  limit : Int,  after : Int,  before : Int ) : CursorPagingPlayHistoryObject
   }
   service MePlayerQueueService {
      [[ Get the list of objects that make up the user's queue. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/me/player/queue")
      operation get_queue(  ) : QueueObject
      [[ Add an item to the end of the user's current playback queue. ]]
      @HttpOperation(method = "POST" , url = "http://myjira/me/player/queue")
      operation add_to_queue(  uri : String,  device_id : String )
   }
   service MarketsService {
      [[ Get the list of markets where Spotify is available. ]]
      @HttpOperation(method = "GET" , url = "http://myjira/markets")
      operation get_available_markets(  ) : AnonymousTypeGet_available_markets
   }
}`,
  "dryRun": true
}
