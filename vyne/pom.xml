<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <parent>
      <artifactId>platform</artifactId>
      <groupId>io.vyne</groupId>
      <version>0.24.0-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>

   <artifactId>vyne</artifactId>

   <properties>
   </properties>

   <dependencies>
      <dependency>
         <groupId>app.cash.turbine</groupId>
         <artifactId>turbine-jvm</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>datatype-converters</artifactId>
         <version>${project.version}</version>
      </dependency>

      <dependency>
         <groupId>com.fasterxml.jackson.datatype</groupId>
         <artifactId>jackson-datatype-jsr310</artifactId>
      </dependency>
      <dependency>
         <groupId>org.jetbrains.kotlinx</groupId>
         <artifactId>kotlinx-serialization-json</artifactId>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne-core-types</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne-core-types</artifactId>
         <version>${project.version}</version>
         <scope>test</scope>
         <type>test-jar</type>
      </dependency>
      <!-- This might be a bad idea - it's just to access CsvImportParameters.
      If this creates circular dependencies, or a mess, let's just refactor the
      required classes elsewhere -->

      <dependency>
         <groupId>io.projectreactor</groupId>
         <artifactId>reactor-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>io.projectreactor.kotlin</groupId>
         <artifactId>reactor-kotlin-extensions</artifactId>
      </dependency>
      <dependency>
         <groupId>org.taxilang</groupId>
         <artifactId>taxi-jvm-common</artifactId>
         <version>${taxi.version}</version>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne-query-api</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>jakarta.persistence</groupId>
         <artifactId>jakarta.persistence-api</artifactId>
      </dependency>


      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne-csv-utils</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>org.skyscreamer</groupId>
         <artifactId>jsonassert</artifactId>
         <version>1.5.1</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.taxilang</groupId>
         <artifactId>compiler</artifactId>
      </dependency>
      <dependency>
         <groupId>org.taxilang</groupId>
         <artifactId>taxi-annotations</artifactId>
      </dependency>
      <!--      <dependency>-->
      <!--         <groupId>org.springframework.boot</groupId>-->
      <!--         <artifactId>spring-boot-starter</artifactId>-->
      <!--      </dependency>-->
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>utils</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-csv</artifactId>
         <version>1.10.0</version>
      </dependency>
      <dependency>
         <!-- Hipster provides implementations of graph search algorithms -->
         <groupId>es.usc.citius.hipster</groupId>
         <artifactId>hipster-core</artifactId>
         <version>1.0.1</version>
         <exclusions>
            <exclusion>
               <groupId>com.google.guava</groupId>
               <artifactId>guava</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.taxilang</groupId>
         <artifactId>taxi-writer</artifactId>
         <version>${taxi.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jetbrains.kotlinx</groupId>
         <artifactId>kotlinx-coroutines-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.jetbrains.kotlinx</groupId>
         <artifactId>kotlinx-coroutines-reactor</artifactId>
      </dependency>
      <dependency>
         <groupId>org.jetbrains.kotlinx</groupId>
         <artifactId>kotlinx-coroutines-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.squareup.okhttp3</groupId>
         <artifactId>okhttp</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>io.micrometer</groupId>
         <artifactId>micrometer-core</artifactId>
      </dependency>
      <dependency>
         <groupId>com.squareup.okhttp3</groupId>
         <artifactId>mockwebserver</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.hazelcast</groupId>
         <artifactId>hazelcast</artifactId>
      </dependency>
      <dependency>
         <groupId>com.spikhalskiy.futurity</groupId>
         <artifactId>futurity-core</artifactId>
         <version>0.3-RC3</version>
      </dependency>
      <!-- Provides support for ReplayingOperationInvoker to leverage
the spring-based request builder.
Do not allow this to leak beyond a test scope
-->
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne-spring-http</artifactId>
         <version>0.24.0-SNAPSHOT</version>
         <scope>test</scope>
      </dependency>
   </dependencies>
   <build>
      <plugins>
         <!-- don't generate a source jar -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <configuration>
               <skipSource>true</skipSource>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
               <execution>
                  <goals>
                     <goal>test-jar</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
</project>
