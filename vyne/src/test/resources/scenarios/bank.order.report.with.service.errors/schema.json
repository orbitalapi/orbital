[ {
  "name" : "bank-instrument.taxi",
  "version" : "0.1.0",
  "content" : "namespace bank.instrument {\n   type Isin inherits String\n   type Puid inherits Int\n  \n}\n",
  "id" : "bank-instrument.taxi:0.1.0",
  "contentHash" : "71cbef"
}, {
  "name" : "bank_order_report.taxi",
  "version" : "0.1.0",
  "content" : "namespace bank.order {\n    model Order {\n       isin: bank.instrument.Isin by column(1)\n       utCode: bank.trader.UtCode by column(2)\n    }\n    \n    model Report {\n       isin: bank.instrument.Isin\n       utCode: bank.trader.UtCode\n       puid: bank.instrument.Puid\n       traderName: bank.trader.TraderName\n   \n    }\n}\n",
  "id" : "bank_order_report.taxi:0.1.0",
  "contentHash" : "8a0520"
}, {
  "name" : "bank_trader.taxi",
  "version" : "0.1.0",
  "content" : "namespace bank.trader {\n   type UtCode inherits String\n   type TraderName inherits String\n   \n   model UtCodeToTraderName {\n       @Id\n       utCode: UtCode by column(\"utCode\")\n       traderName: TraderName by column(\"traderName\")\n   }\n}\n",
  "id" : "bank_trader.taxi:0.1.0",
  "contentHash" : "37a235"
}, {
  "name" : "product_taxonomy.taxi",
  "version" : "0.1.0",
  "content" : "namespace bank.product.taxonomy {\n   parameter model PuidRequest {\n       isin: bank.instrument.Isin\n   }\n\n  \n   model PuidResponse {\n       puid: bank.instrument.Puid?\n   }\n}\n\n",
  "id" : "product_taxonomy.taxi:0.1.0",
  "contentHash" : "5e6dca"
}, {
  "name" : "vyne.cask.types",
  "version" : "1.0.2",
  "content" : "\nnamespace vyne.vyneQl {\n   type VyneQlQuery inherits lang.taxi.String\n   \n   \n}\n",
  "id" : "vyne.cask.types:1.0.2",
  "contentHash" : "b5b2ea"
}, {
  "name" : "vyne.cask.types1",
  "version" : "1.0.2",
  "content" : "\nnamespace vyne.cask {\n   type CaskInsertedAt inherits lang.taxi.Instant\n   \n   type CaskMessageId inherits lang.taxi.String\n   \n   \n}\n",
  "id" : "vyne.cask.types1:1.0.2",
  "contentHash" : "d71026"
}, {
  "name" : "vyne.casks.bank.order.Order",
  "version" : "1.0.2",
  "content" : "import bank.order.Order\nimport vyne.cask.CaskInsertedAt\n\nnamespace vyne.cask.bank.order {\n   [[ Generated by Cask.  Source type is bank.order.Order} ]]\n   type Order inherits bank.order.Order {\n      caskInsertedAt : vyne.cask.CaskInsertedAt\n      caskMessageId : vyne.cask.CaskMessageId\n   }\n   \n   \n}\n",
  "id" : "vyne.casks.bank.order.Order:1.0.2",
  "contentHash" : "45f077"
}, {
  "name" : "vyne.casks.bank.order.Order1",
  "version" : "1.0.2",
  "content" : "import bank.order.Order\nimport vyne.cask.CaskInsertedAt\n\nnamespace vyne.casks.bank.order {\n   \n   \n   @ServiceDiscoveryClient(serviceName = \"cask\")\n   @Datasource\n   service OrderCaskService {\n      @HttpOperation(method = \"GET\" , url = \"/api/cask/findAll/bank/order/Order\")\n      operation findAll(  ) : bank.order.Order[]\n      @HttpOperation(method = \"GET\" , url = \"/api/cask/bank/order/Order/CaskInsertedAt/Between/{start}/{end}\")\n      operation findByCaskInsertedAtBetween( @PathVariable(name = \"start\") start : vyne.cask.CaskInsertedAt, @PathVariable(name = \"end\") end : vyne.cask.CaskInsertedAt ) : vyne.cask.bank.order.Order[]( vyne.cask.CaskInsertedAt >= start, vyne.cask.CaskInsertedAt < end )\n      @HttpOperation(method = \"GET\" , url = \"/api/cask/bank/order/Order/CaskInsertedAt/BetweenGteLte/{start}/{end}\")\n      operation findByCaskInsertedAtBetweenGteLte( @PathVariable(name = \"start\") start : vyne.cask.CaskInsertedAt, @PathVariable(name = \"end\") end : vyne.cask.CaskInsertedAt ) : vyne.cask.bank.order.Order[]( vyne.cask.CaskInsertedAt >= start, vyne.cask.CaskInsertedAt <= end )\n      @HttpOperation(method = \"GET\" , url = \"/api/cask/bank/order/Order/CaskInsertedAt/BetweenGtLt/{start}/{end}\")\n      operation findByCaskInsertedAtBetweenGtLt( @PathVariable(name = \"start\") start : vyne.cask.CaskInsertedAt, @PathVariable(name = \"end\") end : vyne.cask.CaskInsertedAt ) : vyne.cask.bank.order.Order[]( vyne.cask.CaskInsertedAt > start, vyne.cask.CaskInsertedAt < end )\n      @HttpOperation(method = \"GET\" , url = \"/api/cask/bank/order/Order/CaskInsertedAt/BetweenGtLte/{start}/{end}\")\n      operation findByCaskInsertedAtBetweenGtLte( @PathVariable(name = \"start\") start : vyne.cask.CaskInsertedAt, @PathVariable(name = \"end\") end : vyne.cask.CaskInsertedAt ) : vyne.cask.bank.order.Order[]( vyne.cask.CaskInsertedAt > start, vyne.cask.CaskInsertedAt <= end )\n      @HttpOperation(method = \"POST\", url = \"/api/vyneQl\")\n      vyneQl query vyneQlQueryOrder(@RequestBody body: vyne.vyneQl.VyneQlQuery):lang.taxi.Array<bank.order.Order> with capabilities {\n         filter(=,!=,in,like,>,<,>=,<=)\n      }\n   }\n}\n",
  "id" : "vyne.casks.bank.order.Order1:1.0.2",
  "contentHash" : "7028d1"
}, {
  "name" : "vyne.casks.bank.trader.UtCodeToTraderName",
  "version" : "1.0.2",
  "content" : "import bank.trader.UtCodeToTraderName\nimport vyne.cask.CaskInsertedAt\nimport bank.trader.UtCode\n\nnamespace vyne.cask.bank.trader {\n   [[ Generated by Cask.  Source type is bank.trader.UtCodeToTraderName} ]]\n   type UtCodeToTraderName inherits bank.trader.UtCodeToTraderName {\n      caskInsertedAt : vyne.cask.CaskInsertedAt\n      caskMessageId : vyne.cask.CaskMessageId\n   }\n   \n   \n}\n",
  "id" : "vyne.casks.bank.trader.UtCodeToTraderName:1.0.2",
  "contentHash" : "ba4737"
}, {
  "name" : "vyne.casks.bank.trader.UtCodeToTraderName1",
  "version" : "1.0.2",
  "content" : "import bank.trader.UtCodeToTraderName\nimport vyne.cask.CaskInsertedAt\nimport bank.trader.UtCode\n\nnamespace vyne.casks.bank.trader {\n   \n   \n   @ServiceDiscoveryClient(serviceName = \"cask\")\n   @Datasource\n   service UtCodeToTraderNameCaskService {\n      @HttpOperation(method = \"GET\" , url = \"/api/cask/findAll/bank/trader/UtCodeToTraderName\")\n      operation findAll(  ) : bank.trader.UtCodeToTraderName[]\n      @HttpOperation(method = \"GET\" , url = \"/api/cask/bank/trader/UtCodeToTraderName/CaskInsertedAt/Between/{start}/{end}\")\n      operation findByCaskInsertedAtBetween( @PathVariable(name = \"start\") start : vyne.cask.CaskInsertedAt, @PathVariable(name = \"end\") end : vyne.cask.CaskInsertedAt ) : vyne.cask.bank.trader.UtCodeToTraderName[]( vyne.cask.CaskInsertedAt >= start, vyne.cask.CaskInsertedAt < end )\n      @HttpOperation(method = \"GET\" , url = \"/api/cask/bank/trader/UtCodeToTraderName/CaskInsertedAt/BetweenGteLte/{start}/{end}\")\n      operation findByCaskInsertedAtBetweenGteLte( @PathVariable(name = \"start\") start : vyne.cask.CaskInsertedAt, @PathVariable(name = \"end\") end : vyne.cask.CaskInsertedAt ) : vyne.cask.bank.trader.UtCodeToTraderName[]( vyne.cask.CaskInsertedAt >= start, vyne.cask.CaskInsertedAt <= end )\n      @HttpOperation(method = \"GET\" , url = \"/api/cask/bank/trader/UtCodeToTraderName/CaskInsertedAt/BetweenGtLt/{start}/{end}\")\n      operation findByCaskInsertedAtBetweenGtLt( @PathVariable(name = \"start\") start : vyne.cask.CaskInsertedAt, @PathVariable(name = \"end\") end : vyne.cask.CaskInsertedAt ) : vyne.cask.bank.trader.UtCodeToTraderName[]( vyne.cask.CaskInsertedAt > start, vyne.cask.CaskInsertedAt < end )\n      @HttpOperation(method = \"GET\" , url = \"/api/cask/bank/trader/UtCodeToTraderName/CaskInsertedAt/BetweenGtLte/{start}/{end}\")\n      operation findByCaskInsertedAtBetweenGtLte( @PathVariable(name = \"start\") start : vyne.cask.CaskInsertedAt, @PathVariable(name = \"end\") end : vyne.cask.CaskInsertedAt ) : vyne.cask.bank.trader.UtCodeToTraderName[]( vyne.cask.CaskInsertedAt > start, vyne.cask.CaskInsertedAt <= end )\n      @HttpOperation(method = \"POST\", url = \"/api/vyneQl\")\n      vyneQl query vyneQlQueryUtCodeToTraderName(@RequestBody body: vyne.vyneQl.VyneQlQuery):lang.taxi.Array<bank.trader.UtCodeToTraderName> with capabilities {\n         filter(=,!=,in,like,>,<,>=,<=)\n      }\n      @HttpOperation(method = \"GET\" , url = \"/api/cask/findSingleBy/bank/trader/UtCodeToTraderName/utCode/{id}\")\n      operation findSingleByUtCode( @PathVariable(name = \"id\") id : bank.trader.UtCode ) : bank.trader.UtCodeToTraderName( bank.trader.UtCode = id )\n   }\n}\n",
  "id" : "vyne.casks.bank.trader.UtCodeToTraderName1:1.0.2",
  "contentHash" : "a0c85b"
} ]