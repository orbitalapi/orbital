import bank.orders.BrokerOrderNumber
import bank.orders.OrderNo
import bank.orders.OrderId
import bank.common.BankDirection

namespace rhodes.order
/*
YOUR_ORDER_SEQUENCE_NUMBER,
YOUR_ORDER_NUMBER,
CACIB_ORDER_NUMBER,
CACIB_ORIGINATOR_ID,
CACIB_ORIGINATOR_EMAIL,
TRADING_CAPACITY,
YOUR_ORDER_DATETIME,
YOUR_TIMEZONE,
COUNTERPARTY_LEI,
COUNTERPARTY_ID,
ORDER_VALIDITY_PERIOD_TYPE,
ORDER_VALIDITY_PERIOD_DATE_TIME,
ORDER_RESTRICTION,
ORIGINATION,
INSTRUMENT_IDENTIFIER_TYPE,
INSTRUMENT_IDENTIFIER_VALUE,
ISIN,ASSET_CLASS,
SUB_ASSET_CLASS,
CFICode,
INSTRUMENT_DESCRIPTION,
EXCHANGE_IDENTIFIER,
YOUR_IDENTIFIER,
TRADING_SYSTEM_ID,
COUNTRY_EXCHANGE,
COUNTRY_YOUR,
ORDER_EVENT_STATUS,
ORDER_TYPE,
ORDER_TYPE_CLASSIFICATION,
TRIGGER_LEVEL,
ORDER_LIMIT,
ORDER_PRICE_TYPE,
ORDER_PRICE_CURRENCY,
INITIAL_QUANTITY,
REMAINING_QUANTITY,
DISPLAYED_QUANTITY,
TRADED_QUANTITY,
QUANTITY_TYPE,
UNIT_SIZE,
QUANTITY_CURRENCY,
PASSIVE_AGGRESSIVE_INDICATOR,
BUY_SELL_FLAG,
STRATEGY_LINK_ID,
STRATEGY_TYPE,
EXPIRY_DATE
*/
[[
The direction of the order, from the perspective of Bank    
]]
enum XenfinBuySell {
BUY("B") synonym of BankDirection.BankBuys,
SELL("S") synonym of BankDirection.BankSell
}

[[
The Xenfin order representation
]]
model Order inherits bank.orders.Order{
    /*
    YOUR_ORDER_NUMBER,
CACIB_ORDER_NUMBER,
BUY_SELL_FLAG
    */
    cacibOrderNumber : OrderNo by column("CACIB_ORDER_NUMBER")
    brokerOrderNumber : BrokerOrderNumber by column("YOUR_ORDER_NUMBER")
    buySellFlag : XenfinBuySell by column("BUY_SELL_FLAG")


}