variables:
   # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
   # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
   MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
   # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
   # when running from the command line.
   # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
   MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -U"
   # Used during gitflow interaction.
   MAJOR_RELEASE_DIGIT: 0
   MINOR_RELEASE_DIGIT: 1
   PATCH_RELEASE_DIGIT: 2

.git_template: &git_setup |
   git remote set-url --push origin "https://oauth2:${GITLAB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
   git config user.name "vyne-cd"
   git config user.email vyne-cd@vyne.co

stages:
   - build
   - deploy
   - release

build-publish-release:
   resource_group: docker_release
   stage: deploy
   script:
      - docker login -u vynecd -p $DOCKER_HUB_PASSWORD
      - 'mvn $MAVEN_CLI_OPTS -DskipTests clean deploy -P release'
   only:
      - release/0.18.3
   artifacts:
      paths:
         - "test-cli/target/*.zip"
   when: manual

release-patch:
   variables:
      GIT_STRATEGY: clone
   dependencies: []
   stage: release
   script:
      - *git_setup
      - 'mvn gitflow:release -B -DversionDigitToIncrement=$PATCH_RELEASE_DIGIT -DskipTestProject=true'
   only:
      - release/0.18.x
   when: manual




