variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -U"
  # Used during gitflow interaction.
  MAJOR_RELEASE_DIGIT: 0
  MINOR_RELEASE_DIGIT: 1
  PATCH_RELEASE_DIGIT: 2

.git_template: &git_setup |
   git remote set-url --push origin "https://oauth2:${GITLAB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
   git config user.name "vyne-cd"
   git config user.email vyne-cd@vyne.co

stages:
   - build
   - deploy
   - release

build-jvm:
  stage: build
  except:
     - tags
     - develop
     - master
  cache:
     paths:
        - .m2/repository
     key: "maven-$CI_COMMIT_REF_SLUG"
  script:
    - 'if [ -z "${GITLAB_TOKEN}" ]; then echo "var is blank"; else echo "var is set"; fi'
    - 'if [ -z "${CI_SERVER_HOST}" ]; then echo "var is blank"; else echo "var is set"; fi'
    - 'if [ -z "${CI_PROJECT_PATH}" ]; then echo "var is blank"; else echo "var is set"; fi'
    - 'mvn $MAVEN_CLI_OPTS clean test-compile jar:test-jar install -Dskip.npm -PrunBenchmarkTests'
  artifacts:
    paths:
       - "*/target"
    expire_in: 1 hours
    reports:
      junit:
      # Note:This won't actually work, b/c of https://gitlab.com/gitlab-org/gitlab-runner/issues/2620
      # However, leaving this here to pick up later
        - "*/target/surefire-reports/TEST-*.xml"

build-ui:
   stage: build
   except:
      - tags
      - develop
      - master
   cache:
      paths:
         - vyne-query-service/src/main/web/node
      key: "node-$CI_COMMIT_REF_SLUG"
   script:
      # Only build the frontend. Nothing JVM related
      - 'mvn $MAVEN_CLI_OPTS -DskipTests frontend:install-node-and-npm frontend:npm@run-npm-install frontend:npm@ng-build -f vyne-query-service/pom.xml'
   artifacts:
      paths:
         - "vyne-query-service/target/classes/static"
      expire_in: 1 hours

build-publish-snapshot:
  resource_group: docker_release
  stage: deploy
  script:
    - docker login -u vynecd -p $DOCKER_HUB_PASSWORD
    - 'mvn $MAVEN_CLI_OPTS -DskipTests clean deploy -DbuildNumber=$CI_BUILD_ID -P snapshot-release'
  only:
    - develop

build-publish-release:
   resource_group: docker_release
   stage: deploy
   script:
      - docker login -u vynecd -p $DOCKER_HUB_PASSWORD
      - 'mvn $MAVEN_CLI_OPTS -DskipTests clean deploy -P release'
   only:
      - master

release-major:
   variables:
      GIT_STRATEGY: clone
   dependencies: []
   stage: release
   script:
      - *git_setup
      - 'mvn gitflow:release -B -DversionDigitToIncrement=$MAJOR_RELEASE_DIGIT'
   only:
      - develop
   when: manual

release-minor:
   variables:
      GIT_STRATEGY: clone
   dependencies: []
   stage: release
   script:
      - *git_setup
      - 'mvn gitflow:release -B -DversionDigitToIncrement=$MINOR_RELEASE_DIGIT'
   only:
      - develop
   when: manual

release-patch:
   variables:
      GIT_STRATEGY: clone
   dependencies: []
   stage: release
   script:
      - *git_setup
      - 'mvn gitflow:release -B -DversionDigitToIncrement=$PATCH_RELEASE_DIGIT'
   only:
      - develop
   when: manual




