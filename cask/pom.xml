<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <parent>
      <groupId>io.vyne</groupId>
      <artifactId>platform</artifactId>
      <version>0.12.3</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>

   <artifactId>cask</artifactId>

    <dependencies>
       <dependency>
          <groupId>io.vyne</groupId>
          <artifactId>vyne-ql-compiler</artifactId>
          <version>0.12.3</version>
       </dependency>
       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-data-jpa</artifactId>
       </dependency>
       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-web</artifactId>
       </dependency>
       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-webflux</artifactId>
       </dependency>
       <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
       </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>
       <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-config</artifactId>
       </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
       <dependency>
          <groupId>org.flywaydb</groupId>
          <artifactId>flyway-core</artifactId>
          <version>6.4.3</version>
       </dependency>

       <!-- Spring boot actuator/micrometer/prometheus dependencies -->
       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-actuator</artifactId>
       </dependency>
       <dependency>
          <groupId>io.micrometer</groupId>
          <artifactId>micrometer-core</artifactId>
       </dependency>
       <dependency>
          <groupId>io.micrometer</groupId>
          <artifactId>micrometer-registry-prometheus</artifactId>
       </dependency>

        <dependency>
            <groupId>lang.taxi</groupId>
            <artifactId>compiler</artifactId>
            <version>${taxi.version}</version>
        </dependency>
       <dependency>
          <groupId>lang.taxi</groupId>
          <artifactId>taxi-writer</artifactId>
          <version>${taxi.version}</version>
       </dependency>
        <dependency>
            <groupId>io.vyne</groupId>
            <artifactId>cask-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.vyne</groupId>
            <artifactId>vyne</artifactId>
            <version>${project.version}</version>
        </dependency>

       <dependency>
          <groupId>io.vyne</groupId>
          <artifactId>vyne-spring</artifactId>
          <version>${project.version}</version>
       </dependency>
       <dependency>
          <groupId>io.vyne</groupId>
          <artifactId>vyne-client-spring</artifactId>
          <version>${project.version}</version>
       </dependency>
       <dependency>
          <groupId>de.bytefish.pgbulkinsert</groupId>
          <artifactId>pgbulkinsert-core</artifactId>
          <version>7.0.1</version>
          <classifier>jdk8</classifier>
       </dependency>
       <dependency>
          <groupId>de.bytefish.pgbulkinsert</groupId>
          <artifactId>pgbulkinsert-rowwriter</artifactId>
          <version>7.0.1</version>
          <classifier>jdk8</classifier>
       </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.8</version>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.projectreactor.kotlin</groupId>
            <artifactId>reactor-kotlin-extensions</artifactId>
        </dependency>
       <dependency>
          <groupId>net.logstash.logback</groupId>
          <artifactId>logstash-logback-encoder</artifactId>
       </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.nhaarman.mockitokotlin2/mockito-kotlin -->
        <dependency>
            <groupId>com.nhaarman.mockitokotlin2</groupId>
            <artifactId>mockito-kotlin</artifactId>
            <version>2.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.opentable.components</groupId>
            <artifactId>otj-pg-embedded</artifactId>
            <version>0.13.3</version>
            <scope>test</scope>
        </dependency>
       <dependency>
          <groupId>io.zonky.test</groupId>
          <artifactId>embedded-database-spring-test</artifactId>
          <version>1.5.5</version>
          <scope>test</scope>
       </dependency>
       <dependency>
          <groupId>org.skyscreamer</groupId>
          <artifactId>jsonassert</artifactId>
          <version>1.5.0</version>
          <scope>test</scope>
       </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <configuration>
                    <compilerPlugins>
                        <!-- Or "spring" for the Spring support -->
                        <plugin>spring</plugin>
                        <plugin>jpa</plugin>
                        <plugin>no-arg</plugin>
                    </compilerPlugins>

                </configuration>

                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
           <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <configuration>
                 <!--
                  This runs only unit/basic integration tests
                  Benchmark tests double the build time and are run only on the build server
                 -->
                 <excludes>
                    <exclude>**/**BenchmarkTest.*</exclude>
                 </excludes>
              </configuration>
           </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>

                <configuration>
                    <images>
                        <image>
                            <name>vyneco/${project.artifactId}:${project.version}</name>
                            <build>
                                <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                               <tags>
                                  <tag>${docker.tag.latest}</tag>
                                  <tag>${docker.tag.numbered}</tag>
                               </tags>
                            </build>
                        </image>
                    </images>
                </configuration>

                <!-- Connect start/stop to pre- and
                     post-integration-test phase, respectively if you want to start
                     your docker containers during integration tests -->
                <executions>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <!-- "build" should be used to create the images with the
                                 artifact -->
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

   <profiles>
      <profile>
         <id>runBenchmarkTests</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <includes>
                        <include>**/**Test.*</include>
                     </includes>
                     <excludes>
                        <exclude>none</exclude>
                     </excludes>
                  </configuration>
               </plugin>

            </plugins>
         </build>
      </profile>
   </profiles>
</project>
