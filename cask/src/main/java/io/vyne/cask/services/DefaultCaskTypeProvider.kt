package io.vyne.cask.services

import lang.taxi.Compiler
import lang.taxi.TaxiDocument
import lang.taxi.types.Annotation
import lang.taxi.types.CompilationUnit
import lang.taxi.types.Field
import lang.taxi.types.ObjectType
import lang.taxi.types.ObjectTypeDefinition
import lang.taxi.types.Type
import org.springframework.stereotype.Service

@Service
class DefaultCaskTypeProvider {
   private val taxiDocument = mapOf("vyne.cask.types" to
      Compiler("""
         namespace vyne.cask {
            type CaskInsertedAt inherits Instant
         }
      """.trimIndent()).compile())

   fun defaultCaskTaxiTypes():Map<String, TaxiDocument> = taxiDocument
   fun insertedAtType() = taxiDocument.values.first().type("vyne.cask.CaskInsertedAt")
   fun withDefaultCaskTaxiType(type: Type): ObjectType {
      return ObjectType(
         "vyne.cask.${type.toQualifiedName().fullyQualifiedName}",
         ObjectTypeDefinition(
            inheritsFrom = setOf(type),
            fields = setOf(Field("caskInsertedAt", insertedAtType())),
            compilationUnit = CompilationUnit.unspecified(),
            annotations = setOf(Annotation("Generated")),
            typeDoc = "Generated by Cask.  Source type is ${type.qualifiedName}}"
         )
      )
   }
}
