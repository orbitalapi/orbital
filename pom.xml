<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>io.vyne</groupId>
   <artifactId>platform</artifactId>
   <packaging>pom</packaging>
   <version>0.20.0-SNAPSHOT</version>

   <parent>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-parent</artifactId>
      <version>2.3.8.RELEASE</version>
   </parent>


   <properties>
      <taxi.version>1.32.4-SNAPSHOT</taxi.version>

      <!-- Used in QueryService -->
      <elasticsearch.version>7.5.2</elasticsearch.version>
      <kotlin-logging.version>2.0.6</kotlin-logging.version>

      <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
      <kotlin.version>1.6.10</kotlin.version>
      <kotlin.coroutines.version>1.6.1</kotlin.coroutines.version>
      <kotlin.serialization.version>1.3.2</kotlin.serialization.version>
      <java.version>1.8</java.version>
      <logback.version>1.1.10</logback.version>
      <spring.cloud.version>Hoxton.SR10</spring.cloud.version>
      <spring.cloud.netflix.version>2.2.7.RELEASE</spring.cloud.netflix.version>
      <arrow.version>0.10.4</arrow.version>
      <logstash.logback.version>6.4</logstash.logback.version>
      <swagger.springfox.version>3.0.0</swagger.springfox.version>
      <http4k.version>4.9.8.0</http4k.version>
      <hazelcast-jet.version>4.5</hazelcast-jet.version>
      <hazelcast.version>4.2</hazelcast.version>
      <testcontainers.version>1.16.2</testcontainers.version>
      <h2.version>2.0.206</h2.version>

      <!-- reactor-netty.version is overridden because of a dns udp bug that appears on M1 Macbook pros.
       https://github.com/netty/netty/issues/8261
       reactor-bom uses 1.0.5, and it appears as though we need at least 1.0.6
       If bumping reactor-bom, consider removing the overridden reactor-netty versions
       -->
      <reactor-bom.version>2020.0.5</reactor-bom.version>
      <reactor-netty.version>1.0.16</reactor-netty.version>
   </properties>

   <modules>
      <module>cask</module>
      <module>config-server</module>
      <module>eureka</module>
      <module>vyne-core-types</module>
      <module>events-api</module>
      <module>vyne-search</module>
      <module>utils</module>
      <module>vyne</module>
      <module>vyne-spring</module>
      <module>vyne-spring-http</module>
      <module>schema-store</module>
      <module>schema-store-client</module>
      <module>vyne-query-service</module>
      <module>vyne-client</module>
      <module>vyne-query-api</module>
      <module>vyne-client-spring</module>
      <module>schema-server</module>
      <module>pipelines</module>
      <module>cask-api</module>
      <module>test-cli</module>
      <module>jwt-auth-server</module>
      <module>test-containers</module>
      <module>vyne-csv-utils</module>
      <module>regression-tests</module>
      <module>spring-boot-admin</module>
      <module>vyne-history-core</module>
      <module>connectors</module>
      <module>schema-server-api</module>
      <module>vyne-analytics-server</module>
      <module>schema-management</module>
      <module>schema-server-core</module>
      <module>protobuf-utils</module>
      <module>licensing</module>
      <module>vyne-spring-http-client</module>
   </modules>

   <scm>
      <developerConnection>scm:git:git@gitlab.com:vyne/vyne.git</developerConnection>
      <tag>HEAD</tag>
   </scm>

   <dependencies>
      <dependency>
         <!-- https://mvnrepository.com/artifact/io.github.microutils/kotlin-logging-jvm -->
         <groupId>io.github.microutils</groupId>
         <artifactId>kotlin-logging-jvm</artifactId>
         <version>${kotlin-logging.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-stdlib-jdk8</artifactId>
         <version>${kotlin.version}</version>
      </dependency>
      <dependency>
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-reflect</artifactId>
         <version>${kotlin.version}</version>
      </dependency>

      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-lang3</artifactId>
         <version>3.3.2</version>
      </dependency>

      <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-classic</artifactId>
         <version>${logback.version}</version>
      </dependency>
      <dependency>
         <groupId>com.diffplug.durian</groupId>
         <artifactId>durian</artifactId>
         <version>3.3.0</version>
      </dependency>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.hamcrest</groupId>
         <artifactId>hamcrest-all</artifactId>
         <version>1.3</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-core</artifactId>
         <!--         <version>2.28.2</version>-->
         <scope>test</scope>
      </dependency>
      <!--      <dependency>-->
      <!--         <groupId>net.bytebuddy</groupId>-->
      <!--         <artifactId>byte-buddy-dep</artifactId>-->
      <!--         <version>1.9.12</version>-->
      <!--         <scope>test</scope>-->
      <!--      </dependency>-->
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-test-autoconfigure</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.jayway.awaitility</groupId>
         <artifactId>awaitility</artifactId>
         <version>1.7.0</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-io</groupId>
         <artifactId>commons-io</artifactId>
         <version>2.4</version>
      </dependency>
      <dependency>
         <groupId>org.jetbrains.spek</groupId>
         <artifactId>spek-api</artifactId>
         <version>1.1.2</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-test-junit</artifactId>
         <version>${kotlin.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.winterbe</groupId>
         <artifactId>expekt</artifactId>
         <version>0.5.0</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.nhaarman</groupId>
         <artifactId>mockito-kotlin</artifactId>
         <version>1.3.0</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>bom</artifactId>
            <version>2.17.124</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
            <version>${hazelcast.version}</version>
         </dependency>
         <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-bom</artifactId>
            <version>${reactor-bom.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <!-- https://mvnrepository.com/artifact/org.http4k/http4k-bom -->
         <dependency>
            <groupId>org.http4k</groupId>
            <artifactId>http4k-bom</artifactId>
            <version>${http4k.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <!-- See comment above re: reactor-netty.version -->
         <dependency>
            <groupId>io.projectreactor.netty</groupId>
            <artifactId>reactor-netty</artifactId>
            <version>${reactor-netty.version}</version>
         </dependency>
         <!-- See comment above re: reactor-netty.version -->
         <dependency>
            <groupId>io.projectreactor.netty</groupId>
            <artifactId>reactor-netty-core</artifactId>
            <version>${reactor-netty.version}</version>
         </dependency>
         <!-- See comment above re: reactor-netty.version -->
         <dependency>
            <groupId>io.projectreactor.netty</groupId>
            <artifactId>reactor-netty-http</artifactId>
            <version>${reactor-netty.version}</version>
         </dependency>
         <!-- See comment above re: reactor-netty.version -->
         <dependency>
            <groupId>io.projectreactor.netty</groupId>
            <artifactId>reactor-netty-http-brave</artifactId>
            <version>${reactor-netty.version}</version>
         </dependency>


         <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>${spring.cloud.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>

         <dependency>
            <groupId>com.playtika.reactivefeign</groupId>
            <artifactId>feign-reactor-webclient</artifactId>
            <version>2.0.30</version>
         </dependency>

         <dependency>
            <groupId>com.playtika.reactivefeign</groupId>
            <artifactId>feign-reactor-cloud</artifactId>
            <version>2.0.30</version>
         </dependency>

         <dependency>
            <groupId>com.playtika.reactivefeign</groupId>
            <artifactId>feign-reactor-spring-configuration</artifactId>
            <version>2.0.30</version>
         </dependency>
         <dependency>
            <groupId>io.r2dbc</groupId>
            <artifactId>r2dbc-bom</artifactId>
            <version>Arabba-SR5</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-bom</artifactId>
            <version>${micrometer.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>com.fasterxml.jackson</groupId>
            <artifactId>jackson-bom</artifactId>
            <version>${jackson-bom.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.taxilang</groupId>
            <artifactId>compiler</artifactId>
            <version>${taxi.version}</version>
         </dependency>
         <dependency>
            <groupId>org.taxilang</groupId>
            <artifactId>core-types</artifactId>
            <version>${taxi.version}</version>
         </dependency>
         <dependency>
            <groupId>org.taxilang</groupId>
            <artifactId>taxi-annotations</artifactId>
            <version>${taxi.version}</version>
         </dependency>
         <dependency>
            <groupId>org.taxilang</groupId>
            <artifactId>java2taxi</artifactId>
            <version>${taxi.version}</version>
         </dependency>
         <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>28.0-jre</version>
         </dependency>
         <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash.logback.version}</version>
         </dependency>
         <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger.springfox.version}</version>
         </dependency>
         <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger.springfox.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlin.coroutines.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactor</artifactId>
            <version>${kotlin.coroutines.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-test</artifactId>
            <version>${kotlin.coroutines.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-json</artifactId>
            <version>${kotlin.serialization.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-cbor</artifactId>
            <version>${kotlin.serialization.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactive</artifactId>
            <version>${kotlin.coroutines.version}</version>
         </dependency>
         <dependency>
            <groupId>app.cash.turbine</groupId>
            <artifactId>turbine-jvm</artifactId>
            <version>0.7.0</version>
         </dependency>
         <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
         </dependency>
         <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-bom</artifactId>
            <version>1.16.215</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers-bom</artifactId>
            <version>1.16.2</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <build>
      <extensions>
         <extension>
            <groupId>org.springframework.build</groupId>
            <artifactId>aws-maven</artifactId>
            <version>5.0.0.RELEASE</version>
         </extension>
      </extensions>
      <finalName>${project.artifactId}</finalName>
      <plugins>
         <plugin>
            <groupId>com.amashchenko.maven.plugin</groupId>
            <artifactId>gitflow-maven-plugin</artifactId>
            <version>1.14.0</version>
            <configuration>
               <!-- whether to push to the git remote. Very useful for testing locally -->
               <pushRemote>true</pushRemote>
               <!-- Set to true to immediately bump the development version when creating a release branch -->
               <commitDevelopmentVersionAtStart>false</commitDevelopmentVersionAtStart>
               <!-- Execute mvn compile before release -->
               <!-- <preReleaseGoals>compile -DskipTests</preReleaseGoals>  -->
               <commitMessages>
                  <releaseStartMessage>Update versions for release @{version}</releaseStartMessage>
                  <releaseFinishMessage>Update for next development version @{version}</releaseFinishMessage>
                  <releaseVersionUpdateMessage>Update for next development version @{version}
                  </releaseVersionUpdateMessage>
               </commitMessages>
               <!-- Configure branches -->
               <gitFlowConfig>
                  <productionBranch>master</productionBranch>
                  <!-- default is develop, but we use development -->
                  <developmentBranch>develop</developmentBranch>
               </gitFlowConfig>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-plugin</artifactId>
            <version>${kotlin.version}</version>
            <executions>
               <execution>
                  <id>compile</id>
                  <phase>process-sources</phase>
                  <goals>
                     <goal>compile</goal>
                  </goals>
               </execution>
               <execution>
                  <id>test-compile</id>
                  <phase>process-test-resources</phase>
                  <goals>
                     <goal>test-compile</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <compilerPlugins>
                  <!-- Or "spring" for the Spring support -->
                  <plugin>spring</plugin>
                  <plugin>jpa</plugin>
                  <plugin>no-arg</plugin>
                  <plugin>kotlinx-serialization</plugin>
               </compilerPlugins>
               <jvmTarget>${kotlin.compiler.jvmTarget}</jvmTarget>
            </configuration>

            <dependencies>
               <dependency>
                  <groupId>org.jetbrains.kotlin</groupId>
                  <artifactId>kotlin-maven-allopen</artifactId>
                  <version>${kotlin.version}</version>
               </dependency>
               <dependency>
                  <groupId>org.jetbrains.kotlin</groupId>
                  <artifactId>kotlin-maven-noarg</artifactId>
                  <version>${kotlin.version}</version>
               </dependency>
               <dependency>
                  <groupId>org.jetbrains.kotlin</groupId>
                  <artifactId>kotlin-maven-serialization</artifactId>
                  <version>${kotlin.version}</version>
               </dependency>
            </dependencies>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.3</version>
            <configuration>
               <source>${java.version}</source>
               <target>${java.version}</target>
            </configuration>
         </plugin>
         <plugin>
            <!-- build helper plug-in is used for de-composing the version and it gaining access to its sub parts.
             We are doing for tagging docker images, we want to have a tag with BETA qualifier instead of SNAPSHOT and the build number from git will be the last part. -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.2.0</version>
            <executions>
               <execution>
                  <phase>validate</phase>
                  <id>phase-version</id>
                  <goals>
                     <goal>parse-version</goal>
                  </goals>
                  <configuration>
                     <propertyPrefix>parsedVersion</propertyPrefix>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-compiler-plugin</artifactId>
               <version>3.9</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-source-plugin</artifactId>
               <version>3.0.1</version>
            </plugin>
            <plugin>
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-maven-plugin</artifactId>
               <configuration>
                  <executable>true</executable>
               </configuration>
               <executions>
                  <execution>
                     <goals>
                        <goal>repackage</goal>
                     </goals>
                  </execution>
               </executions>
            </plugin>
            <plugin>
               <groupId>io.fabric8</groupId>
               <artifactId>docker-maven-plugin</artifactId>
               <version>0.27.2</version>
            </plugin>
         </plugins>
      </pluginManagement>
   </build>

   <distributionManagement>
      <repository>
         <id>repo.vyne.co</id>
         <url>s3://repo.vyne.co/release</url>
      </repository>
      <snapshotRepository>
         <id>repo.vyne.co</id>
         <url>s3://repo.vyne.co/snapshot</url>
      </snapshotRepository>
   </distributionManagement>

   <repositories>
      <!-- for taxi snapshots -->
      <repository>
         <id>vyne-snapshots</id>
         <url>https://repo.vyne.co/snapshot</url>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
      </repository>
      <repository>
         <id>vyne</id>
         <url>https://repo.vyne.co/release</url>
         <snapshots>
            <enabled>false</enabled>
         </snapshots>
      </repository>
   </repositories>
   <profiles>
      <profile>
         <id>snapshot-release</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <docker.tag.latest>latest-snapshot</docker.tag.latest>
            <!--suppress UnresolvedMavenProperty -->
            <docker.tag.numbered>
               ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}-BETA-${buildNumber}
            </docker.tag.numbered>
         </properties>
      </profile>
      <profile>
         <id>release</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <docker.tag.latest>latest</docker.tag.latest>
         </properties>
      </profile>
      <profile>
         <id>alpha-release</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <docker.tag.latest>latest-alpha</docker.tag.latest>
            <!--suppress UnresolvedMavenProperty -->
            <docker.tag.numbered>
               ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}-ALPHA-${buildNumber}
            </docker.tag.numbered>
         </properties>
      </profile>
   </profiles>
</project>
