<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0">
   <modelVersion>4.0.0</modelVersion>

   <groupId>io.vyne</groupId>
   <artifactId>platform</artifactId>
   <packaging>pom</packaging>
   <version>0.24.0-SNAPSHOT</version>

   <parent>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-parent</artifactId>
      <!-- Looks like 3.1.0 is breaking our native image build.  Let's wait for a couple of patch releases there -->
      <version>3.0.9</version>
   </parent>

   <url>https://orbitalhq.com</url>
   <licenses>
      <license>
         <name>Orbital Enterprise License</name>
         <url>https://orbitalhq.com</url>
      </license>
   </licenses>

   <properties>
      <taxi.version>1.40.0-SNAPSHOT</taxi.version>

      <!-- Used in QueryService -->
      <elasticsearch.version>7.5.2</elasticsearch.version>
      <kotlin-logging.version>3.0.5</kotlin-logging.version>

      <reactive-feign.version>4.0.0</reactive-feign.version>
      <!-- Use Java 17.
      Currently, Chronicle doens't support later versions.
      Based on their release cadence, it seems they're unlikely to support versions other than LTS.
      -->
      <java.version>17</java.version>
      <kotlin.compiler.jvmTarget>${java.version}</kotlin.compiler.jvmTarget>

      <maven.compiler.source>${java.version}</maven.compiler.source>
      <maven.compiler.target>${java.version}</maven.compiler.target>

      <kotlin.version>1.8.10</kotlin.version>
      <!-- Coroutines 1.7.0-Beta is compatible with 1.8.10 as per https://github.com/Kotlin/kotlinx.coroutines -->
      <kotlin.coroutines.version>1.7.0-Beta</kotlin.coroutines.version>

      <kotlin.serialization.version>1.5.1</kotlin.serialization.version>

      <spring.cloud.version>2022.0.0</spring.cloud.version>
      <arrow.version>1.1.5</arrow.version>
      <logstash.logback.version>7.3</logstash.logback.version>

      <http4k.version>4.39.0.0</http4k.version>
      <hazelcast-jet.version>4.5</hazelcast-jet.version>
      <hazelcast.version>5.3.1</hazelcast.version>
      <testcontainers.version>1.16.2</testcontainers.version>
      <h2.version>2.1.214</h2.version>
      <reactor-bom.version>2022.0.5</reactor-bom.version>
      <!--      <netty.version>4.1.75.Final</netty.version>-->
      <!-- CVE-2022-31692  -->
      <!--      <spring-security.version>5.7.5</spring-security.version>-->
      <!--      <spring-security-test.version>5.7.5</spring-security-test.version>-->
      <kotest.version>5.5.5</kotest.version>
      <junit.jupiter.version>5.9.2</junit.jupiter.version>
      <junit.vintage.version>5.9.2</junit.vintage.version>


      <!-- Critical vulnerability in SnakeYaml.
      Due to be upgraded to 2.0 by default in Spring Boot 3.2
      -->
      <snakeyaml.version>2.0</snakeyaml.version>

      <kafka.version>3.5.1</kafka.version>
   </properties>

   <modules>
      <module>cask</module>
      <module>vyne-core-types</module>
      <module>events-api</module>
      <module>vyne-search</module>
      <module>utils</module>
      <module>vyne</module>
      <module>vyne-spring</module>
      <module>vyne-spring-http</module>
      <module>schema-store-client</module>
      <module>vyne-query-service</module>
      <module>vyne-client</module>
      <module>vyne-query-api</module>
      <module>vyne-client-spring</module>
      <module>schema-server</module>
      <module>pipelines</module>
      <module>cask-api</module>
      <module>test-cli</module>
      <module>vyne-csv-utils</module>
      <module>regression-tests</module>
      <module>vyne-history-core</module>
      <module>connectors</module>
      <module>schema-server-api</module>
      <module>vyne-analytics-server</module>
      <module>schema-management</module>
      <module>schema-server-core</module>
      <module>protobuf-utils</module>
      <module>licensing</module>
      <module>vyne-spring-http-client</module>
      <module>datatype-converters</module>
      <module>voyager</module>
      <module>station</module>
      <module>auth-common</module>
      <module>query-node-core</module>
      <module>query-node-service</module>
      <module>history-persistence</module>
      <module>history-service</module>
      <module>cockpit-core</module>
      <module>query-node-api</module>
      <module>monitoring-common</module>
      <module>analytics</module>
      <module>spring-utils</module>
      <module>chatgpt</module>

      <module>auth-tokens</module>
      <module>query-node-native</module>
   </modules>
   <scm>
      <developerConnection>scm:git:git@gitlab.com:vyne/vyne.git</developerConnection>
   </scm>

   <dependencies>
      <dependency>
         <!-- https://mvnrepository.com/artifact/io.github.microutils/kotlin-logging-jvm -->
         <groupId>io.github.microutils</groupId>
         <artifactId>kotlin-logging-jvm</artifactId>
         <version>${kotlin-logging.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-stdlib-jdk8</artifactId>
         <version>${kotlin.version}</version>
      </dependency>
      <dependency>
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-reflect</artifactId>
         <version>${kotlin.version}</version>
      </dependency>

      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-lang3</artifactId>
         <version>3.12.0</version>
      </dependency>

      <dependency>
         <groupId>com.diffplug.durian</groupId>
         <artifactId>durian</artifactId>
         <version>3.4.0</version>
      </dependency>

      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.hamcrest</groupId>
         <artifactId>hamcrest-all</artifactId>
         <version>1.3</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-core</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-test-autoconfigure</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.jayway.awaitility</groupId>
         <artifactId>awaitility</artifactId>
         <version>1.7.0</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-io</groupId>
         <artifactId>commons-io</artifactId>
         <version>2.11.0</version>
      </dependency>
      <dependency>
         <groupId>org.jetbrains.spek</groupId>
         <artifactId>spek-api</artifactId>
         <version>1.1.5</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-test-junit</artifactId>
         <version>${kotlin.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.winterbe</groupId>
         <artifactId>expekt</artifactId>
         <version>0.5.0</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.nhaarman</groupId>
         <artifactId>mockito-kotlin</artifactId>
         <version>1.6.0</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>io.kotest</groupId>
         <artifactId>kotest-runner-junit5-jvm</artifactId>
         <version>${kotest.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>io.kotest</groupId>
         <artifactId>kotest-assertions-core-jvm</artifactId>
         <version>${kotest.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-api</artifactId>
         <version>${junit.jupiter.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.junit.vintage</groupId>
         <artifactId>junit-vintage-engine</artifactId>
         <version>${junit.vintage.version}</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-engine</artifactId>
         <version>${junit.jupiter.version}</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <dependencyManagement>
      <dependencies>
         <!-- managing this here, as query-service is picking up an
         out-of-date kafka-clients version, and can't work out why.
         The old version has a CVS published against it, so needs to be managed
         -->
         <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
         </dependency>

         <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>bom</artifactId>
            <version>2.20.8</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
            <version>${hazelcast.version}</version>
         </dependency>
         <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-bom</artifactId>
            <version>${reactor-bom.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.http4k</groupId>
            <artifactId>http4k-bom</artifactId>
            <version>${http4k.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>${spring.cloud.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>com.orbitalhq.reactivefeign</groupId>
            <artifactId>feign-reactor-webclient</artifactId>
            <version>${reactive-feign.version}</version>
         </dependency>
         <dependency>
            <groupId>com.orbitalhq.reactivefeign</groupId>
            <artifactId>feign-reactor-cloud</artifactId>
            <version>${reactive-feign.version}</version>
         </dependency>
         <dependency>
            <groupId>com.orbitalhq.reactivefeign</groupId>
            <artifactId>feign-reactor-spring-configuration</artifactId>
            <version>${reactive-feign.version}</version>
         </dependency>

         <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>2.2</version>
         </dependency>
         <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-bom</artifactId>
            <version>${micrometer.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>com.fasterxml.jackson</groupId>
            <artifactId>jackson-bom</artifactId>
            <version>${jackson-bom.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.taxilang</groupId>
            <artifactId>compiler</artifactId>
            <version>${taxi.version}</version>
         </dependency>
         <dependency>
            <groupId>org.taxilang</groupId>
            <artifactId>core-types</artifactId>
            <version>${taxi.version}</version>
         </dependency>
         <dependency>
            <groupId>org.taxilang</groupId>
            <artifactId>taxi-annotations</artifactId>
            <version>${taxi.version}</version>
         </dependency>
         <dependency>
            <groupId>org.taxilang</groupId>
            <artifactId>java2taxi</artifactId>
            <version>${taxi.version}</version>
         </dependency>
         <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>31.1-jre</version>
         </dependency>
         <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash.logback.version}</version>
         </dependency>

         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlin.coroutines.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactor</artifactId>
            <version>${kotlin.coroutines.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-test</artifactId>
            <version>${kotlin.coroutines.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-core</artifactId>
            <version>${kotlin.serialization.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-json</artifactId>
            <version>${kotlin.serialization.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-hocon</artifactId>
            <version>${kotlin.serialization.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-cbor</artifactId>
            <version>${kotlin.serialization.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactive</artifactId>
            <version>${kotlin.coroutines.version}</version>
         </dependency>
         <dependency>
            <groupId>app.cash.turbine</groupId>
            <artifactId>turbine-jvm</artifactId>
            <version>0.12.1</version>
         </dependency>
         <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
         </dependency>
         <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-bom</artifactId>
            <version>2.24ea41</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers-bom</artifactId>
            <version>1.17.6</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <build>
      <extensions>
         <extension>
            <groupId>com.github.seahen</groupId>
            <artifactId>maven-s3-wagon</artifactId>
            <version>1.3.3</version>
         </extension>
      </extensions>
      <finalName>${project.artifactId}</finalName>
      <plugins>
         <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>3.0.0-M9</version>
         </plugin>
         <plugin>
            <groupId>com.amashchenko.maven.plugin</groupId>
            <artifactId>gitflow-maven-plugin</artifactId>
            <version>1.19.0</version>
            <configuration>
               <!-- whether to push to the git remote. Very useful for testing locally -->
               <pushRemote>true</pushRemote>
               <!-- Set to true to immediately bump the development version when creating a release branch -->
               <commitDevelopmentVersionAtStart>false</commitDevelopmentVersionAtStart>
               <!-- Execute mvn compile before release -->
               <!-- <preReleaseGoals>compile -DskipTests</preReleaseGoals>  -->
               <commitMessages>
                  <releaseStartMessage>Update versions for release @{version}</releaseStartMessage>
                  <releaseFinishMessage>Update for next development version @{version}</releaseFinishMessage>
                  <releaseVersionUpdateMessage>Update for next development version @{version}
                  </releaseVersionUpdateMessage>
               </commitMessages>
               <!-- Configure branches -->
               <gitFlowConfig>
                  <productionBranch>master</productionBranch>
                  <developmentBranch>develop</developmentBranch>
               </gitFlowConfig>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-plugin</artifactId>
            <version>${kotlin.version}</version>
            <executions>
               <execution>
                  <id>compile</id>
                  <phase>process-sources</phase>
                  <goals>
                     <goal>compile</goal>
                  </goals>
               </execution>
               <execution>
                  <id>test-compile</id>
                  <phase>process-test-resources</phase>
                  <goals>
                     <goal>test-compile</goal>
                  </goals>
               </execution>
            </executions>
            <dependencies>
               <dependency>
                  <groupId>org.jetbrains.kotlin</groupId>
                  <artifactId>kotlin-maven-allopen</artifactId>
                  <version>${kotlin.version}</version>
               </dependency>
               <dependency>
                  <groupId>org.jetbrains.kotlin</groupId>
                  <artifactId>kotlin-maven-noarg</artifactId>
                  <version>${kotlin.version}</version>
               </dependency>
               <dependency>
                  <groupId>org.jetbrains.kotlin</groupId>
                  <artifactId>kotlin-maven-serialization</artifactId>
                  <version>${kotlin.version}</version>
               </dependency>
            </dependencies>
            <configuration>
               <compilerPlugins>
                  <plugin>spring</plugin>
                  <plugin>jpa</plugin>
                  <plugin>no-arg</plugin>
                  <plugin>kotlinx-serialization</plugin>
               </compilerPlugins>
               <jvmTarget>${kotlin.compiler.jvmTarget}</jvmTarget>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.10.1</version>
            <configuration>
               <source>${java.version}</source>
               <target>${java.version}</target>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
               <execution>
                  <id>phase-version</id>
                  <phase>validate</phase>
                  <goals>
                     <goal>parse-version</goal>
                  </goals>
                  <configuration>
                     <propertyPrefix>parsedVersion</propertyPrefix>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>license-maven-plugin</artifactId>
               <version>2.0.0</version>
               <configuration>
                  <licenseName>Orbital Enterprise License</licenseName>
                  <licenseResolver>${project.baseUri}/src/license</licenseResolver>
                  <licenseMerges>
                     <licenseMerge>Apache License, Version 2.0|The Apache Software License, Version 2.0|Apache 2|Apache
                        License 2.0|AL 2.0|Apache-2.0|The Apache License, Version 2.0
                     </licenseMerge>
                     <licenseMerge>CDDLv1|Common Development and Distribution License (CDDL) v1.0|COMMON DEVELOPMENT AND
                        DISTRIBUTION LICENSE (CDDL) Version 1.0
                     </licenseMerge>
                  </licenseMerges>

                  <!--exclude test-scoped dependencies from the 3rd party license-list-->
                  <excludedScopes>test</excludedScopes>
               </configuration>
               <executions>
                  <execution>
                     <id>first</id>
                     <goals>
                        <goal>update-file-header</goal>
                     </goals>
                     <phase>process-sources</phase>
                  </execution>
               </executions>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-compiler-plugin</artifactId>
               <version>3.10.1</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-source-plugin</artifactId>
               <version>3.2.1</version>
            </plugin>
            <plugin>
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-maven-plugin</artifactId>
               <configuration>
                  <executable>true</executable>
               </configuration>
               <executions>
                  <execution>
                     <goals>
                        <goal>repackage</goal>
                     </goals>
                  </execution>
               </executions>
            </plugin>
            <!-- As JDK 17 introduced the new module system, we need to relax the access to JDK internals used by Chronicle library for tests -->
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-surefire-plugin</artifactId>
               <configuration>
                  <argLine>
                     --add-exports=java.base/jdk.internal.ref=ALL-UNNAMED --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
                     --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED
                     --add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED
                     --add-opens=jdk.compiler/com.sun.tools.javac=ALL-UNNAMED
                     --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
                     --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED
                  </argLine>
               </configuration>
            </plugin>
         </plugins>
      </pluginManagement>
   </build>

   <distributionManagement>
      <repository>
         <id>repo.orbitalhq.com</id>
         <url>s3://repo.orbitalhq.com/release</url>
      </repository>
      <snapshotRepository>
         <id>repo.orbitalhq.com</id>
         <url>s3://repo.orbitalhq.com/snapshot</url>
      </snapshotRepository>
   </distributionManagement>
   <repositories>
      <!-- for orbital snapshots -->
      <repository>
         <id>orbital-snapshots</id>
         <url>https://repo.orbitalhq.com/snapshot</url>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
      </repository>
      <repository>
         <!-- for taxi snapshots -->
         <id>maven-central-snapshots</id>
         <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
      </repository>
      <repository>
         <id>vyne</id>
         <url>https://repo.orbitalhq.com/release</url>
         <snapshots>
            <enabled>false</enabled>
         </snapshots>
      </repository>
   </repositories>
   <profiles>
      <profile>
         <id>snapshot-release</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
      </profile>
      <profile>
         <id>release</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
      </profile>
   </profiles>
</project>
