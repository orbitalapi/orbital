<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <parent>
      <artifactId>pipelines</artifactId>
      <groupId>io.vyne</groupId>
      <version>0.3.0-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>

   <artifactId>pipeline-runner</artifactId>

   <dependencies>
      <dependency>
         <groupId>com.fasterxml.jackson.module</groupId>
         <artifactId>jackson-module-kotlin</artifactId>
      </dependency>

      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-openfeign</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
      </dependency>

      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>pipelines-api</artifactId>
         <version>0.3.0-SNAPSHOT</version>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>pipelines-orchestrator-api</artifactId>
         <version>0.3.0-SNAPSHOT</version>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne-client-spring</artifactId>
         <version>0.3.0-SNAPSHOT</version>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne-spring</artifactId>
         <version>0.3.0-SNAPSHOT</version>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne</artifactId>
         <version>0.3.0-SNAPSHOT</version>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>vyne</artifactId>
         <version>0.3.0-SNAPSHOT</version>
         <type>test-jar</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-web</artifactId>
      </dependency>
      <!-- https://mvnrepository.com/artifact/io.projectreactor.kafka/reactor-kafka -->
      <dependency>
         <groupId>io.projectreactor.kafka</groupId>
         <artifactId>reactor-kafka</artifactId>
         <version>1.2.2.RELEASE</version>
      </dependency>
      <dependency>
         <groupId>org.apache.kafka</groupId>
         <artifactId>kafka_2.11</artifactId>
         <version>${kafka.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.kafka</groupId>
         <artifactId>kafka_2.11</artifactId>
         <version>${kafka.version}</version>
         <classifier>test</classifier>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.kafka</groupId>
         <artifactId>kafka-clients</artifactId>
         <version>${kafka.version}</version>
         <classifier>test</classifier>
         <scope>test</scope>
      </dependency>
<!--      <dependency>-->
<!--         <groupId>org.springframework.kafka</groupId>-->
<!--         <artifactId>spring-kafka-test</artifactId>-->
<!--         <scope>test</scope>-->
<!--         <version>2.2.12.RELEASE</version>-->
<!--      </dependency>-->

   </dependencies>
   <dependencyManagement>
      <dependencies>
         <!-- Reactor Kafka requires Kafka 2.0.0, overriding value set in the Boot BOM -->
         <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>2.0.0</version>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <build>
      <plugins>
         <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
         </plugin>

         <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>

            <configuration>
               <images>
                  <image>
                     <name>vyneco/${project.artifactId}:${project.version}</name>
                     <build>
                        <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                        <tags>
                           <tag>${docker.tag}</tag>
                        </tags>
                     </build>
                  </image>
               </images>
            </configuration>

            <!-- Connect start/stop to pre- and
                 post-integration-test phase, respectively if you want to start
                 your docker containers during integration tests -->
            <executions>
               <execution>
                  <id>deploy</id>
                  <phase>deploy</phase>
                  <goals>
                     <!-- "build" should be used to create the images with the
                          artifact -->
                     <goal>build</goal>
                     <goal>push</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

      </plugins>
   </build>
</project>
