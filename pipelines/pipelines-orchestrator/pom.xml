<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <parent>
      <artifactId>pipelines</artifactId>
      <groupId>io.vyne</groupId>
      <version>0.7.11-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>

   <artifactId>pipelines-orchestrator</artifactId>

   <dependencies>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>pipelines-orchestrator-api</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.module</groupId>
         <artifactId>jackson-module-kotlin</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-openfeign</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-config</artifactId>
      </dependency>
      <dependency>
         <groupId>io.vyne</groupId>
         <artifactId>pipelines-orchestrator-api</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-web</artifactId>
      </dependency>
      <dependency>
         <groupId>net.logstash.logback</groupId>
         <artifactId>logstash-logback-encoder</artifactId>
      </dependency>
      <dependency>
         <groupId>io.springfox</groupId>
         <artifactId>springfox-swagger2</artifactId>
      </dependency>
      <dependency>
         <groupId>io.springfox</groupId>
         <artifactId>springfox-swagger-ui</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-actuator</artifactId>
      </dependency>
      <dependency>
         <groupId>com.nhaarman.mockitokotlin2</groupId>
         <artifactId>mockito-kotlin</artifactId>
         <version>2.2.0</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-test</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>


   <build>

      <plugins>

         <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
         </plugin>

         <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>

            <configuration>
               <images>
                  <image>
                     <name>vyneco/${project.artifactId}:${project.version}</name>
                     <build>
                        <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                        <tags>
                           <tag>${docker.tag.latest}</tag>
                           <tag>${docker.tag.numbered}</tag>
                        </tags>
                     </build>
                  </image>
               </images>
            </configuration>

            <!-- Connect start/stop to pre- and
                 post-integration-test phase, respectively if you want to start
                 your docker containers during integration tests -->
            <executions>
               <execution>
                  <id>deploy</id>
                  <phase>deploy</phase>
                  <goals>
                     <!-- "build" should be used to create the images with the
                          artifact -->
                     <goal>build</goal>
                     <goal>push</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

      </plugins>

   </build>

</project>
